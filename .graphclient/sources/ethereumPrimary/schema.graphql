schema {
  query: Query
  subscription: Subscription
}

"Marks the GraphQL type as indexable entity.  Each type that should be an entity is required to be annotated with this directive."
directive @entity on OBJECT

"Defined a Subgraph ID for an object type"
directive @subgraphId(id: String!) on OBJECT

"creates a virtual field on the entity that may be queried but cannot be set manually through the mappings API."
directive @derivedFrom(field: String!) on FIELD_DEFINITION

type ethereumPrimaryAccount {
  """ { Account address } """
  id: ethereumPrimaryBytes!
  """ Number of positions this account has """
  positionCount: Int!
  """ All positions that belong to this account """
  positions(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryPosition_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryPosition_filter): [ethereumPrimaryPosition!]!
  """ Number of open positions this account has """
  openPositionCount: Int!
  """ Number of closed positions this account has """
  closedPositionCount: Int!
  """ Number of deposits this account made """
  depositCount: Int!
  """ All deposit events of this account """
  deposits(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryDeposit_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryDeposit_filter): [ethereumPrimaryDeposit!]!
  """ Number of withdrawals this account made """
  withdrawCount: Int!
  """ All withdraw events of this account """
  withdraws(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryWithdraw_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryWithdraw_filter): [ethereumPrimaryWithdraw!]!
  """ Number of borrows this account made """
  borrowCount: Int!
  """ All borrow events of this account """
  borrows(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryBorrow_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryBorrow_filter): [ethereumPrimaryBorrow!]!
  """ Number of repays this account made """
  repayCount: Int!
  """ All repay events of this account """
  repays(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryRepay_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryRepay_filter): [ethereumPrimaryRepay!]!
  """ Number of times this account liquidated a position """
  liquidateCount: Int!
  """ All liquidation events where this account was the liquidator """
  liquidates(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryLiquidate_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryLiquidate_filter): [ethereumPrimaryLiquidate!]!
  """ Number of times this account has been liquidated """
  liquidationCount: Int!
  """ All liquidation events where this account got liquidated """
  liquidations(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryLiquidate_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryLiquidate_filter): [ethereumPrimaryLiquidate!]!
  """ Number of times this account has transferred """
  transferredCount: Int!
  """ All transfer events where this account was the sender """
  transfers(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryTransfer_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryTransfer_filter): [ethereumPrimaryTransfer!]!
  """ Number of times this account has received a transfer """
  receivedCount: Int!
  """ All transfer events where this account was the receiver """
  receives(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryTransfer_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryTransfer_filter): [ethereumPrimaryTransfer!]!
  """ Number of times this account has executed a flashloan """
  flashloanCount: Int!
  """ All flashloan events where this account executed it """
  flashloans(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryFlashloan_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryFlashloan_filter): [ethereumPrimaryFlashloan!]!
  """ The amount of rewards claimed by this account in USD (use the USD value at the time of claiming) 
  """
  rewardsClaimedUSD: ethereumPrimaryBigDecimal
  """ Markets that the account is using as collateral """
  _enabledCollaterals(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryMarket_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryMarket_filter): [ethereumPrimaryMarket!]
  """ efficient mode flag """
  _eMode: Boolean
}

input ethereumPrimaryAccount_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  positionCount: Int
  positionCount_not: Int
  positionCount_gt: Int
  positionCount_lt: Int
  positionCount_gte: Int
  positionCount_lte: Int
  positionCount_in: [Int!]
  positionCount_not_in: [Int!]
  positions_: ethereumPrimaryPosition_filter
  openPositionCount: Int
  openPositionCount_not: Int
  openPositionCount_gt: Int
  openPositionCount_lt: Int
  openPositionCount_gte: Int
  openPositionCount_lte: Int
  openPositionCount_in: [Int!]
  openPositionCount_not_in: [Int!]
  closedPositionCount: Int
  closedPositionCount_not: Int
  closedPositionCount_gt: Int
  closedPositionCount_lt: Int
  closedPositionCount_gte: Int
  closedPositionCount_lte: Int
  closedPositionCount_in: [Int!]
  closedPositionCount_not_in: [Int!]
  depositCount: Int
  depositCount_not: Int
  depositCount_gt: Int
  depositCount_lt: Int
  depositCount_gte: Int
  depositCount_lte: Int
  depositCount_in: [Int!]
  depositCount_not_in: [Int!]
  deposits_: ethereumPrimaryDeposit_filter
  withdrawCount: Int
  withdrawCount_not: Int
  withdrawCount_gt: Int
  withdrawCount_lt: Int
  withdrawCount_gte: Int
  withdrawCount_lte: Int
  withdrawCount_in: [Int!]
  withdrawCount_not_in: [Int!]
  withdraws_: ethereumPrimaryWithdraw_filter
  borrowCount: Int
  borrowCount_not: Int
  borrowCount_gt: Int
  borrowCount_lt: Int
  borrowCount_gte: Int
  borrowCount_lte: Int
  borrowCount_in: [Int!]
  borrowCount_not_in: [Int!]
  borrows_: ethereumPrimaryBorrow_filter
  repayCount: Int
  repayCount_not: Int
  repayCount_gt: Int
  repayCount_lt: Int
  repayCount_gte: Int
  repayCount_lte: Int
  repayCount_in: [Int!]
  repayCount_not_in: [Int!]
  repays_: ethereumPrimaryRepay_filter
  liquidateCount: Int
  liquidateCount_not: Int
  liquidateCount_gt: Int
  liquidateCount_lt: Int
  liquidateCount_gte: Int
  liquidateCount_lte: Int
  liquidateCount_in: [Int!]
  liquidateCount_not_in: [Int!]
  liquidates_: ethereumPrimaryLiquidate_filter
  liquidationCount: Int
  liquidationCount_not: Int
  liquidationCount_gt: Int
  liquidationCount_lt: Int
  liquidationCount_gte: Int
  liquidationCount_lte: Int
  liquidationCount_in: [Int!]
  liquidationCount_not_in: [Int!]
  liquidations_: ethereumPrimaryLiquidate_filter
  transferredCount: Int
  transferredCount_not: Int
  transferredCount_gt: Int
  transferredCount_lt: Int
  transferredCount_gte: Int
  transferredCount_lte: Int
  transferredCount_in: [Int!]
  transferredCount_not_in: [Int!]
  transfers_: ethereumPrimaryTransfer_filter
  receivedCount: Int
  receivedCount_not: Int
  receivedCount_gt: Int
  receivedCount_lt: Int
  receivedCount_gte: Int
  receivedCount_lte: Int
  receivedCount_in: [Int!]
  receivedCount_not_in: [Int!]
  receives_: ethereumPrimaryTransfer_filter
  flashloanCount: Int
  flashloanCount_not: Int
  flashloanCount_gt: Int
  flashloanCount_lt: Int
  flashloanCount_gte: Int
  flashloanCount_lte: Int
  flashloanCount_in: [Int!]
  flashloanCount_not_in: [Int!]
  flashloans_: ethereumPrimaryFlashloan_filter
  rewardsClaimedUSD: ethereumPrimaryBigDecimal
  rewardsClaimedUSD_not: ethereumPrimaryBigDecimal
  rewardsClaimedUSD_gt: ethereumPrimaryBigDecimal
  rewardsClaimedUSD_lt: ethereumPrimaryBigDecimal
  rewardsClaimedUSD_gte: ethereumPrimaryBigDecimal
  rewardsClaimedUSD_lte: ethereumPrimaryBigDecimal
  rewardsClaimedUSD_in: [ethereumPrimaryBigDecimal!]
  rewardsClaimedUSD_not_in: [ethereumPrimaryBigDecimal!]
  _enabledCollaterals: [String!]
  _enabledCollaterals_not: [String!]
  _enabledCollaterals_contains: [String!]
  _enabledCollaterals_contains_nocase: [String!]
  _enabledCollaterals_not_contains: [String!]
  _enabledCollaterals_not_contains_nocase: [String!]
  _enabledCollaterals_: ethereumPrimaryMarket_filter
  _eMode: Boolean
  _eMode_not: Boolean
  _eMode_in: [Boolean!]
  _eMode_not_in: [Boolean!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryAccount_filter]
  or: [ethereumPrimaryAccount_filter]
}

enum ethereumPrimaryAccount_orderBy {
  id
  positionCount
  positions
  openPositionCount
  closedPositionCount
  depositCount
  deposits
  withdrawCount
  withdraws
  borrowCount
  borrows
  repayCount
  repays
  liquidateCount
  liquidates
  liquidationCount
  liquidations
  transferredCount
  transfers
  receivedCount
  receives
  flashloanCount
  flashloans
  rewardsClaimedUSD
  _enabledCollaterals
  _eMode
}

scalar ethereumPrimaryBigDecimal

scalar BigInt

input ethereumPrimaryBlockChangedFilter {
  number_gte: Int!
}

input ethereumPrimaryBlock_height {
  hash: ethereumPrimaryBytes
  number: Int
  number_gte: Int
}

type ethereumPrimaryBorrow implements ethereumPrimaryEvent {
  """ { Transaction hash }{ Log index } """
  id: ethereumPrimaryBytes!
  """ Transaction hash of the transaction that emitted this event """
  hash: ethereumPrimaryBytes!
  """ Nonce of the transaction that emitted this event """
  nonce: BigInt!
  """ Event log index. For transactions that don't emit event, create arbitrary index starting from 0 
  """
  logIndex: Int!
  """ Price of gas in this transaction """
  gasPrice: BigInt
  """ Gas used in this transaction. (Optional because not every chain will support this) 
  """
  gasUsed: BigInt
  """ Gas limit of this transaction. e.g. the amount of gas the sender will pay 
  """
  gasLimit: BigInt
  """ Block number of this event """
  blockNumber: BigInt!
  """ Timestamp of this event """
  timestamp: BigInt!
  """ Account that controls incurs debt in this transaction """
  account: ethereumPrimaryAccount!
  """ Account that receives the funds from the new debt """
  accountActor: ethereumPrimaryAccount
  """ The market tokens are borrowed/minted from """
  market: ethereumPrimaryMarket!
  """ The user position changed by this event """
  position: ethereumPrimaryPosition!
  """ Token borrowed """
  asset: ethereumPrimaryToken!
  """ Amount of token borrowed in native units """
  amount: BigInt!
  """ Amount of token borrowed in USD """
  amountUSD: ethereumPrimaryBigDecimal!
}

input ethereumPrimaryBorrow_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  hash: ethereumPrimaryBytes
  hash_not: ethereumPrimaryBytes
  hash_gt: ethereumPrimaryBytes
  hash_lt: ethereumPrimaryBytes
  hash_gte: ethereumPrimaryBytes
  hash_lte: ethereumPrimaryBytes
  hash_in: [ethereumPrimaryBytes!]
  hash_not_in: [ethereumPrimaryBytes!]
  hash_contains: ethereumPrimaryBytes
  hash_not_contains: ethereumPrimaryBytes
  nonce: BigInt
  nonce_not: BigInt
  nonce_gt: BigInt
  nonce_lt: BigInt
  nonce_gte: BigInt
  nonce_lte: BigInt
  nonce_in: [BigInt!]
  nonce_not_in: [BigInt!]
  logIndex: Int
  logIndex_not: Int
  logIndex_gt: Int
  logIndex_lt: Int
  logIndex_gte: Int
  logIndex_lte: Int
  logIndex_in: [Int!]
  logIndex_not_in: [Int!]
  gasPrice: BigInt
  gasPrice_not: BigInt
  gasPrice_gt: BigInt
  gasPrice_lt: BigInt
  gasPrice_gte: BigInt
  gasPrice_lte: BigInt
  gasPrice_in: [BigInt!]
  gasPrice_not_in: [BigInt!]
  gasUsed: BigInt
  gasUsed_not: BigInt
  gasUsed_gt: BigInt
  gasUsed_lt: BigInt
  gasUsed_gte: BigInt
  gasUsed_lte: BigInt
  gasUsed_in: [BigInt!]
  gasUsed_not_in: [BigInt!]
  gasLimit: BigInt
  gasLimit_not: BigInt
  gasLimit_gt: BigInt
  gasLimit_lt: BigInt
  gasLimit_gte: BigInt
  gasLimit_lte: BigInt
  gasLimit_in: [BigInt!]
  gasLimit_not_in: [BigInt!]
  blockNumber: BigInt
  blockNumber_not: BigInt
  blockNumber_gt: BigInt
  blockNumber_lt: BigInt
  blockNumber_gte: BigInt
  blockNumber_lte: BigInt
  blockNumber_in: [BigInt!]
  blockNumber_not_in: [BigInt!]
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  account: String
  account_not: String
  account_gt: String
  account_lt: String
  account_gte: String
  account_lte: String
  account_in: [String!]
  account_not_in: [String!]
  account_contains: String
  account_contains_nocase: String
  account_not_contains: String
  account_not_contains_nocase: String
  account_starts_with: String
  account_starts_with_nocase: String
  account_not_starts_with: String
  account_not_starts_with_nocase: String
  account_ends_with: String
  account_ends_with_nocase: String
  account_not_ends_with: String
  account_not_ends_with_nocase: String
  account_: ethereumPrimaryAccount_filter
  accountActor: String
  accountActor_not: String
  accountActor_gt: String
  accountActor_lt: String
  accountActor_gte: String
  accountActor_lte: String
  accountActor_in: [String!]
  accountActor_not_in: [String!]
  accountActor_contains: String
  accountActor_contains_nocase: String
  accountActor_not_contains: String
  accountActor_not_contains_nocase: String
  accountActor_starts_with: String
  accountActor_starts_with_nocase: String
  accountActor_not_starts_with: String
  accountActor_not_starts_with_nocase: String
  accountActor_ends_with: String
  accountActor_ends_with_nocase: String
  accountActor_not_ends_with: String
  accountActor_not_ends_with_nocase: String
  accountActor_: ethereumPrimaryAccount_filter
  market: String
  market_not: String
  market_gt: String
  market_lt: String
  market_gte: String
  market_lte: String
  market_in: [String!]
  market_not_in: [String!]
  market_contains: String
  market_contains_nocase: String
  market_not_contains: String
  market_not_contains_nocase: String
  market_starts_with: String
  market_starts_with_nocase: String
  market_not_starts_with: String
  market_not_starts_with_nocase: String
  market_ends_with: String
  market_ends_with_nocase: String
  market_not_ends_with: String
  market_not_ends_with_nocase: String
  market_: ethereumPrimaryMarket_filter
  position: String
  position_not: String
  position_gt: String
  position_lt: String
  position_gte: String
  position_lte: String
  position_in: [String!]
  position_not_in: [String!]
  position_contains: String
  position_contains_nocase: String
  position_not_contains: String
  position_not_contains_nocase: String
  position_starts_with: String
  position_starts_with_nocase: String
  position_not_starts_with: String
  position_not_starts_with_nocase: String
  position_ends_with: String
  position_ends_with_nocase: String
  position_not_ends_with: String
  position_not_ends_with_nocase: String
  position_: ethereumPrimaryPosition_filter
  asset: String
  asset_not: String
  asset_gt: String
  asset_lt: String
  asset_gte: String
  asset_lte: String
  asset_in: [String!]
  asset_not_in: [String!]
  asset_contains: String
  asset_contains_nocase: String
  asset_not_contains: String
  asset_not_contains_nocase: String
  asset_starts_with: String
  asset_starts_with_nocase: String
  asset_not_starts_with: String
  asset_not_starts_with_nocase: String
  asset_ends_with: String
  asset_ends_with_nocase: String
  asset_not_ends_with: String
  asset_not_ends_with_nocase: String
  asset_: ethereumPrimaryToken_filter
  amount: BigInt
  amount_not: BigInt
  amount_gt: BigInt
  amount_lt: BigInt
  amount_gte: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  amount_not_in: [BigInt!]
  amountUSD: ethereumPrimaryBigDecimal
  amountUSD_not: ethereumPrimaryBigDecimal
  amountUSD_gt: ethereumPrimaryBigDecimal
  amountUSD_lt: ethereumPrimaryBigDecimal
  amountUSD_gte: ethereumPrimaryBigDecimal
  amountUSD_lte: ethereumPrimaryBigDecimal
  amountUSD_in: [ethereumPrimaryBigDecimal!]
  amountUSD_not_in: [ethereumPrimaryBigDecimal!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryBorrow_filter]
  or: [ethereumPrimaryBorrow_filter]
}

enum ethereumPrimaryBorrow_orderBy {
  id
  hash
  nonce
  logIndex
  gasPrice
  gasUsed
  gasLimit
  blockNumber
  timestamp
  account
  account__id
  account__positionCount
  account__openPositionCount
  account__closedPositionCount
  account__depositCount
  account__withdrawCount
  account__borrowCount
  account__repayCount
  account__liquidateCount
  account__liquidationCount
  account__transferredCount
  account__receivedCount
  account__flashloanCount
  account__rewardsClaimedUSD
  account___eMode
  accountActor
  accountActor__id
  accountActor__positionCount
  accountActor__openPositionCount
  accountActor__closedPositionCount
  accountActor__depositCount
  accountActor__withdrawCount
  accountActor__borrowCount
  accountActor__repayCount
  accountActor__liquidateCount
  accountActor__liquidationCount
  accountActor__transferredCount
  accountActor__receivedCount
  accountActor__flashloanCount
  accountActor__rewardsClaimedUSD
  accountActor___eMode
  market
  market__id
  market__name
  market__isActive
  market__canBorrowFrom
  market__canUseAsCollateral
  market__maximumLTV
  market__liquidationThreshold
  market__liquidationPenalty
  market__canIsolate
  market__createdTimestamp
  market__createdBlockNumber
  market__relation
  market__stakedOutputTokenAmount
  market__inputTokenBalance
  market__inputTokenPriceUSD
  market__outputTokenSupply
  market__outputTokenPriceUSD
  market__exchangeRate
  market__reserves
  market__reserveFactor
  market__variableBorrowedTokenBalance
  market__stableBorrowedTokenBalance
  market__indexLastUpdatedTimestamp
  market__supplyIndex
  market__supplyCap
  market__borrowIndex
  market__borrowCap
  market__totalValueLockedUSD
  market__cumulativeSupplySideRevenueUSD
  market__cumulativeProtocolSideRevenueUSD
  market__cumulativeTotalRevenueUSD
  market__totalDepositBalanceUSD
  market__cumulativeDepositUSD
  market__totalBorrowBalanceUSD
  market__cumulativeBorrowUSD
  market__cumulativeLiquidateUSD
  market__cumulativeTransferUSD
  market__cumulativeFlashloanUSD
  market__transactionCount
  market__depositCount
  market__withdrawCount
  market__borrowCount
  market__repayCount
  market__liquidationCount
  market__transferCount
  market__flashloanCount
  market__cumulativeUniqueUsers
  market__cumulativeUniqueDepositors
  market__cumulativeUniqueBorrowers
  market__cumulativeUniqueLiquidators
  market__cumulativeUniqueLiquidatees
  market__cumulativeUniqueTransferrers
  market__cumulativeUniqueFlashloaners
  market__positionCount
  market__openPositionCount
  market__closedPositionCount
  market__lendingPositionCount
  market__borrowingPositionCount
  market___baseTrackingBorrowSpeed
  market___baseTrackingSupplySpeed
  market___lastRewardsUpdated
  market___liquidationProtocolFee
  market___siloedBorrowing
  position
  position__id
  position__hashOpened
  position__hashClosed
  position__blockNumberOpened
  position__timestampOpened
  position__blockNumberClosed
  position__timestampClosed
  position__side
  position__type
  position__isCollateral
  position__isIsolated
  position__balance
  position__principal
  position__depositCount
  position__withdrawCount
  position__borrowCount
  position__repayCount
  position__liquidationCount
  position__transferredCount
  position__receivedCount
  position___eMode
  asset
  asset__id
  asset__name
  asset__symbol
  asset__decimals
  asset__lastPriceUSD
  asset__lastPriceBlockNumber
  asset__type
  asset___iavsTokenType
  amount
  amountUSD
}

scalar ethereumPrimaryBytes

enum ethereumPrimaryCollateralizationType {
  """ Over collateralized protocols require users to put up more collateral than the amount borrowed. 
  """
  OVER_COLLATERALIZED
  """ Protocols that allow users to borrow more than their collateral locked.  
  """
  UNDER_COLLATERALIZED
  """ Protocols that allow users to borrow without any collateral. Generally this protocol is KYC'd and only whitelist users can do this 
  """
  UNCOLLATERALIZED
}

type ethereumPrimaryDeposit implements ethereumPrimaryEvent {
  """ { Transaction hash }{ Log index } """
  id: ethereumPrimaryBytes!
  """ Transaction hash of the transaction that emitted this event """
  hash: ethereumPrimaryBytes!
  """ Nonce of the transaction that emitted this event """
  nonce: BigInt!
  """ Event log index. For transactions that don't emit event, create arbitrary index starting from 0 
  """
  logIndex: Int!
  """ Price of gas in this transaction """
  gasPrice: BigInt
  """ Gas used in this transaction. (Optional because not every chain will support this) 
  """
  gasUsed: BigInt
  """ Gas limit of this transaction. e.g. the amount of gas the sender will pay 
  """
  gasLimit: BigInt
  """ Block number of this event """
  blockNumber: BigInt!
  """ Timestamp of this event """
  timestamp: BigInt!
  """
  Account where deposit was executed (e.g. a deposit on behalf of account)
  """
  account: ethereumPrimaryAccount!
  """ Account that executed the deposit (e.g. a deposit on behalf of account) 
  """
  accountActor: ethereumPrimaryAccount
  """ The market tokens are deposited to """
  market: ethereumPrimaryMarket!
  """ The user position changed by this event """
  position: ethereumPrimaryPosition!
  """ Token deposited """
  asset: ethereumPrimaryToken!
  """ Amount of token deposited in native units """
  amount: BigInt!
  """ Amount of token deposited in USD """
  amountUSD: ethereumPrimaryBigDecimal!
}

input ethereumPrimaryDeposit_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  hash: ethereumPrimaryBytes
  hash_not: ethereumPrimaryBytes
  hash_gt: ethereumPrimaryBytes
  hash_lt: ethereumPrimaryBytes
  hash_gte: ethereumPrimaryBytes
  hash_lte: ethereumPrimaryBytes
  hash_in: [ethereumPrimaryBytes!]
  hash_not_in: [ethereumPrimaryBytes!]
  hash_contains: ethereumPrimaryBytes
  hash_not_contains: ethereumPrimaryBytes
  nonce: BigInt
  nonce_not: BigInt
  nonce_gt: BigInt
  nonce_lt: BigInt
  nonce_gte: BigInt
  nonce_lte: BigInt
  nonce_in: [BigInt!]
  nonce_not_in: [BigInt!]
  logIndex: Int
  logIndex_not: Int
  logIndex_gt: Int
  logIndex_lt: Int
  logIndex_gte: Int
  logIndex_lte: Int
  logIndex_in: [Int!]
  logIndex_not_in: [Int!]
  gasPrice: BigInt
  gasPrice_not: BigInt
  gasPrice_gt: BigInt
  gasPrice_lt: BigInt
  gasPrice_gte: BigInt
  gasPrice_lte: BigInt
  gasPrice_in: [BigInt!]
  gasPrice_not_in: [BigInt!]
  gasUsed: BigInt
  gasUsed_not: BigInt
  gasUsed_gt: BigInt
  gasUsed_lt: BigInt
  gasUsed_gte: BigInt
  gasUsed_lte: BigInt
  gasUsed_in: [BigInt!]
  gasUsed_not_in: [BigInt!]
  gasLimit: BigInt
  gasLimit_not: BigInt
  gasLimit_gt: BigInt
  gasLimit_lt: BigInt
  gasLimit_gte: BigInt
  gasLimit_lte: BigInt
  gasLimit_in: [BigInt!]
  gasLimit_not_in: [BigInt!]
  blockNumber: BigInt
  blockNumber_not: BigInt
  blockNumber_gt: BigInt
  blockNumber_lt: BigInt
  blockNumber_gte: BigInt
  blockNumber_lte: BigInt
  blockNumber_in: [BigInt!]
  blockNumber_not_in: [BigInt!]
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  account: String
  account_not: String
  account_gt: String
  account_lt: String
  account_gte: String
  account_lte: String
  account_in: [String!]
  account_not_in: [String!]
  account_contains: String
  account_contains_nocase: String
  account_not_contains: String
  account_not_contains_nocase: String
  account_starts_with: String
  account_starts_with_nocase: String
  account_not_starts_with: String
  account_not_starts_with_nocase: String
  account_ends_with: String
  account_ends_with_nocase: String
  account_not_ends_with: String
  account_not_ends_with_nocase: String
  account_: ethereumPrimaryAccount_filter
  accountActor: String
  accountActor_not: String
  accountActor_gt: String
  accountActor_lt: String
  accountActor_gte: String
  accountActor_lte: String
  accountActor_in: [String!]
  accountActor_not_in: [String!]
  accountActor_contains: String
  accountActor_contains_nocase: String
  accountActor_not_contains: String
  accountActor_not_contains_nocase: String
  accountActor_starts_with: String
  accountActor_starts_with_nocase: String
  accountActor_not_starts_with: String
  accountActor_not_starts_with_nocase: String
  accountActor_ends_with: String
  accountActor_ends_with_nocase: String
  accountActor_not_ends_with: String
  accountActor_not_ends_with_nocase: String
  accountActor_: ethereumPrimaryAccount_filter
  market: String
  market_not: String
  market_gt: String
  market_lt: String
  market_gte: String
  market_lte: String
  market_in: [String!]
  market_not_in: [String!]
  market_contains: String
  market_contains_nocase: String
  market_not_contains: String
  market_not_contains_nocase: String
  market_starts_with: String
  market_starts_with_nocase: String
  market_not_starts_with: String
  market_not_starts_with_nocase: String
  market_ends_with: String
  market_ends_with_nocase: String
  market_not_ends_with: String
  market_not_ends_with_nocase: String
  market_: ethereumPrimaryMarket_filter
  position: String
  position_not: String
  position_gt: String
  position_lt: String
  position_gte: String
  position_lte: String
  position_in: [String!]
  position_not_in: [String!]
  position_contains: String
  position_contains_nocase: String
  position_not_contains: String
  position_not_contains_nocase: String
  position_starts_with: String
  position_starts_with_nocase: String
  position_not_starts_with: String
  position_not_starts_with_nocase: String
  position_ends_with: String
  position_ends_with_nocase: String
  position_not_ends_with: String
  position_not_ends_with_nocase: String
  position_: ethereumPrimaryPosition_filter
  asset: String
  asset_not: String
  asset_gt: String
  asset_lt: String
  asset_gte: String
  asset_lte: String
  asset_in: [String!]
  asset_not_in: [String!]
  asset_contains: String
  asset_contains_nocase: String
  asset_not_contains: String
  asset_not_contains_nocase: String
  asset_starts_with: String
  asset_starts_with_nocase: String
  asset_not_starts_with: String
  asset_not_starts_with_nocase: String
  asset_ends_with: String
  asset_ends_with_nocase: String
  asset_not_ends_with: String
  asset_not_ends_with_nocase: String
  asset_: ethereumPrimaryToken_filter
  amount: BigInt
  amount_not: BigInt
  amount_gt: BigInt
  amount_lt: BigInt
  amount_gte: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  amount_not_in: [BigInt!]
  amountUSD: ethereumPrimaryBigDecimal
  amountUSD_not: ethereumPrimaryBigDecimal
  amountUSD_gt: ethereumPrimaryBigDecimal
  amountUSD_lt: ethereumPrimaryBigDecimal
  amountUSD_gte: ethereumPrimaryBigDecimal
  amountUSD_lte: ethereumPrimaryBigDecimal
  amountUSD_in: [ethereumPrimaryBigDecimal!]
  amountUSD_not_in: [ethereumPrimaryBigDecimal!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryDeposit_filter]
  or: [ethereumPrimaryDeposit_filter]
}

enum ethereumPrimaryDeposit_orderBy {
  id
  hash
  nonce
  logIndex
  gasPrice
  gasUsed
  gasLimit
  blockNumber
  timestamp
  account
  account__id
  account__positionCount
  account__openPositionCount
  account__closedPositionCount
  account__depositCount
  account__withdrawCount
  account__borrowCount
  account__repayCount
  account__liquidateCount
  account__liquidationCount
  account__transferredCount
  account__receivedCount
  account__flashloanCount
  account__rewardsClaimedUSD
  account___eMode
  accountActor
  accountActor__id
  accountActor__positionCount
  accountActor__openPositionCount
  accountActor__closedPositionCount
  accountActor__depositCount
  accountActor__withdrawCount
  accountActor__borrowCount
  accountActor__repayCount
  accountActor__liquidateCount
  accountActor__liquidationCount
  accountActor__transferredCount
  accountActor__receivedCount
  accountActor__flashloanCount
  accountActor__rewardsClaimedUSD
  accountActor___eMode
  market
  market__id
  market__name
  market__isActive
  market__canBorrowFrom
  market__canUseAsCollateral
  market__maximumLTV
  market__liquidationThreshold
  market__liquidationPenalty
  market__canIsolate
  market__createdTimestamp
  market__createdBlockNumber
  market__relation
  market__stakedOutputTokenAmount
  market__inputTokenBalance
  market__inputTokenPriceUSD
  market__outputTokenSupply
  market__outputTokenPriceUSD
  market__exchangeRate
  market__reserves
  market__reserveFactor
  market__variableBorrowedTokenBalance
  market__stableBorrowedTokenBalance
  market__indexLastUpdatedTimestamp
  market__supplyIndex
  market__supplyCap
  market__borrowIndex
  market__borrowCap
  market__totalValueLockedUSD
  market__cumulativeSupplySideRevenueUSD
  market__cumulativeProtocolSideRevenueUSD
  market__cumulativeTotalRevenueUSD
  market__totalDepositBalanceUSD
  market__cumulativeDepositUSD
  market__totalBorrowBalanceUSD
  market__cumulativeBorrowUSD
  market__cumulativeLiquidateUSD
  market__cumulativeTransferUSD
  market__cumulativeFlashloanUSD
  market__transactionCount
  market__depositCount
  market__withdrawCount
  market__borrowCount
  market__repayCount
  market__liquidationCount
  market__transferCount
  market__flashloanCount
  market__cumulativeUniqueUsers
  market__cumulativeUniqueDepositors
  market__cumulativeUniqueBorrowers
  market__cumulativeUniqueLiquidators
  market__cumulativeUniqueLiquidatees
  market__cumulativeUniqueTransferrers
  market__cumulativeUniqueFlashloaners
  market__positionCount
  market__openPositionCount
  market__closedPositionCount
  market__lendingPositionCount
  market__borrowingPositionCount
  market___baseTrackingBorrowSpeed
  market___baseTrackingSupplySpeed
  market___lastRewardsUpdated
  market___liquidationProtocolFee
  market___siloedBorrowing
  position
  position__id
  position__hashOpened
  position__hashClosed
  position__blockNumberOpened
  position__timestampOpened
  position__blockNumberClosed
  position__timestampClosed
  position__side
  position__type
  position__isCollateral
  position__isIsolated
  position__balance
  position__principal
  position__depositCount
  position__withdrawCount
  position__borrowCount
  position__repayCount
  position__liquidationCount
  position__transferredCount
  position__receivedCount
  position___eMode
  asset
  asset__id
  asset__name
  asset__symbol
  asset__decimals
  asset__lastPriceUSD
  asset__lastPriceBlockNumber
  asset__type
  asset___iavsTokenType
  amount
  amountUSD
}

"""
An event is any user action that occurs in a protocol. Generally, they are Ethereum events
emitted by a function in the smart contracts, stored in transaction receipts as event logs.
However, some user actions of interest are function calls that don't emit events. For example,
the deposit and withdraw functions in Yearn do not emit any events. In our subgraphs, we still
store them as events, although they are not technically Ethereum events emitted by smart
contracts.

"""
interface ethereumPrimaryEvent {
  """ { Transaction hash }{ Log index } """
  id: ethereumPrimaryBytes!
  """ Transaction hash of the transaction that emitted this event """
  hash: ethereumPrimaryBytes!
  """ Nonce of the transaction that emitted this event """
  nonce: BigInt!
  """ Event log index. For transactions that don't emit event, create arbitrary index starting from 0 
  """
  logIndex: Int!
  """ Price of gas in this transaction """
  gasPrice: BigInt
  """ Gas used in this transaction. (Optional because not every chain will support this) 
  """
  gasUsed: BigInt
  """ Gas limit of this transaction. e.g. the amount of gas the sender will pay 
  """
  gasLimit: BigInt
  """ Block number of this event """
  blockNumber: BigInt!
  """ Timestamp of this event """
  timestamp: BigInt!
  """ The market tokens are deposited to """
  market: ethereumPrimaryMarket!
  """ Token deposited """
  asset: ethereumPrimaryToken!
  """ Amount of token deposited in native units """
  amount: BigInt!
  """ Amount of token deposited in USD """
  amountUSD: ethereumPrimaryBigDecimal!
}

input ethereumPrimaryEvent_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  hash: ethereumPrimaryBytes
  hash_not: ethereumPrimaryBytes
  hash_gt: ethereumPrimaryBytes
  hash_lt: ethereumPrimaryBytes
  hash_gte: ethereumPrimaryBytes
  hash_lte: ethereumPrimaryBytes
  hash_in: [ethereumPrimaryBytes!]
  hash_not_in: [ethereumPrimaryBytes!]
  hash_contains: ethereumPrimaryBytes
  hash_not_contains: ethereumPrimaryBytes
  nonce: BigInt
  nonce_not: BigInt
  nonce_gt: BigInt
  nonce_lt: BigInt
  nonce_gte: BigInt
  nonce_lte: BigInt
  nonce_in: [BigInt!]
  nonce_not_in: [BigInt!]
  logIndex: Int
  logIndex_not: Int
  logIndex_gt: Int
  logIndex_lt: Int
  logIndex_gte: Int
  logIndex_lte: Int
  logIndex_in: [Int!]
  logIndex_not_in: [Int!]
  gasPrice: BigInt
  gasPrice_not: BigInt
  gasPrice_gt: BigInt
  gasPrice_lt: BigInt
  gasPrice_gte: BigInt
  gasPrice_lte: BigInt
  gasPrice_in: [BigInt!]
  gasPrice_not_in: [BigInt!]
  gasUsed: BigInt
  gasUsed_not: BigInt
  gasUsed_gt: BigInt
  gasUsed_lt: BigInt
  gasUsed_gte: BigInt
  gasUsed_lte: BigInt
  gasUsed_in: [BigInt!]
  gasUsed_not_in: [BigInt!]
  gasLimit: BigInt
  gasLimit_not: BigInt
  gasLimit_gt: BigInt
  gasLimit_lt: BigInt
  gasLimit_gte: BigInt
  gasLimit_lte: BigInt
  gasLimit_in: [BigInt!]
  gasLimit_not_in: [BigInt!]
  blockNumber: BigInt
  blockNumber_not: BigInt
  blockNumber_gt: BigInt
  blockNumber_lt: BigInt
  blockNumber_gte: BigInt
  blockNumber_lte: BigInt
  blockNumber_in: [BigInt!]
  blockNumber_not_in: [BigInt!]
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  market: String
  market_not: String
  market_gt: String
  market_lt: String
  market_gte: String
  market_lte: String
  market_in: [String!]
  market_not_in: [String!]
  market_contains: String
  market_contains_nocase: String
  market_not_contains: String
  market_not_contains_nocase: String
  market_starts_with: String
  market_starts_with_nocase: String
  market_not_starts_with: String
  market_not_starts_with_nocase: String
  market_ends_with: String
  market_ends_with_nocase: String
  market_not_ends_with: String
  market_not_ends_with_nocase: String
  market_: ethereumPrimaryMarket_filter
  asset: String
  asset_not: String
  asset_gt: String
  asset_lt: String
  asset_gte: String
  asset_lte: String
  asset_in: [String!]
  asset_not_in: [String!]
  asset_contains: String
  asset_contains_nocase: String
  asset_not_contains: String
  asset_not_contains_nocase: String
  asset_starts_with: String
  asset_starts_with_nocase: String
  asset_not_starts_with: String
  asset_not_starts_with_nocase: String
  asset_ends_with: String
  asset_ends_with_nocase: String
  asset_not_ends_with: String
  asset_not_ends_with_nocase: String
  asset_: ethereumPrimaryToken_filter
  amount: BigInt
  amount_not: BigInt
  amount_gt: BigInt
  amount_lt: BigInt
  amount_gte: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  amount_not_in: [BigInt!]
  amountUSD: ethereumPrimaryBigDecimal
  amountUSD_not: ethereumPrimaryBigDecimal
  amountUSD_gt: ethereumPrimaryBigDecimal
  amountUSD_lt: ethereumPrimaryBigDecimal
  amountUSD_gte: ethereumPrimaryBigDecimal
  amountUSD_lte: ethereumPrimaryBigDecimal
  amountUSD_in: [ethereumPrimaryBigDecimal!]
  amountUSD_not_in: [ethereumPrimaryBigDecimal!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryEvent_filter]
  or: [ethereumPrimaryEvent_filter]
}

enum ethereumPrimaryEvent_orderBy {
  id
  hash
  nonce
  logIndex
  gasPrice
  gasUsed
  gasLimit
  blockNumber
  timestamp
  market
  market__id
  market__name
  market__isActive
  market__canBorrowFrom
  market__canUseAsCollateral
  market__maximumLTV
  market__liquidationThreshold
  market__liquidationPenalty
  market__canIsolate
  market__createdTimestamp
  market__createdBlockNumber
  market__relation
  market__stakedOutputTokenAmount
  market__inputTokenBalance
  market__inputTokenPriceUSD
  market__outputTokenSupply
  market__outputTokenPriceUSD
  market__exchangeRate
  market__reserves
  market__reserveFactor
  market__variableBorrowedTokenBalance
  market__stableBorrowedTokenBalance
  market__indexLastUpdatedTimestamp
  market__supplyIndex
  market__supplyCap
  market__borrowIndex
  market__borrowCap
  market__totalValueLockedUSD
  market__cumulativeSupplySideRevenueUSD
  market__cumulativeProtocolSideRevenueUSD
  market__cumulativeTotalRevenueUSD
  market__totalDepositBalanceUSD
  market__cumulativeDepositUSD
  market__totalBorrowBalanceUSD
  market__cumulativeBorrowUSD
  market__cumulativeLiquidateUSD
  market__cumulativeTransferUSD
  market__cumulativeFlashloanUSD
  market__transactionCount
  market__depositCount
  market__withdrawCount
  market__borrowCount
  market__repayCount
  market__liquidationCount
  market__transferCount
  market__flashloanCount
  market__cumulativeUniqueUsers
  market__cumulativeUniqueDepositors
  market__cumulativeUniqueBorrowers
  market__cumulativeUniqueLiquidators
  market__cumulativeUniqueLiquidatees
  market__cumulativeUniqueTransferrers
  market__cumulativeUniqueFlashloaners
  market__positionCount
  market__openPositionCount
  market__closedPositionCount
  market__lendingPositionCount
  market__borrowingPositionCount
  market___baseTrackingBorrowSpeed
  market___baseTrackingSupplySpeed
  market___lastRewardsUpdated
  market___liquidationProtocolFee
  market___siloedBorrowing
  asset
  asset__id
  asset__name
  asset__symbol
  asset__decimals
  asset__lastPriceUSD
  asset__lastPriceBlockNumber
  asset__type
  asset___iavsTokenType
  amount
  amountUSD
}

type ethereumPrimaryFee {
  """ { Fee type } """
  id: ID!
  """ Fee in percentage. E.g. 5.21% should be stored as 5.21 """
  rate: ethereumPrimaryBigDecimal
  """ A flat fee in the native token. This may be a base fee in addition to the rate, or the only fee. 
  """
  flatFee: ethereumPrimaryBigDecimal
  """ The type of fee (e.g. liquidation, admin, etc.) """
  type: ethereumPrimaryFeeType!
}

enum ethereumPrimaryFeeType {
  """ Fees from liquidations """
  LIQUIDATION_FEE
  """ Fees given to an admin """
  ADMIN_FEE
  """ Fees that are taken by the protocol """
  PROTOCOL_FEE
  """ Fee to mint an asset. Found mostly in CDPs """
  MINT_FEE
  """ Fee taken on withdrawal. e.g. found in Euler """
  WITHDRAW_FEE
  """ Flashloan Fees taken by the protocol """
  FLASHLOAN_PROTOCOL_FEE
  """ Flashloan Fees taken by LP """
  FLASHLOAN_LP_FEE
  """ Any fee not represented here. Please make a github issue for this to be added: https://github.com/messari/subgraphs/issues/new 
  """
  OTHER
}

input ethereumPrimaryFee_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  rate: ethereumPrimaryBigDecimal
  rate_not: ethereumPrimaryBigDecimal
  rate_gt: ethereumPrimaryBigDecimal
  rate_lt: ethereumPrimaryBigDecimal
  rate_gte: ethereumPrimaryBigDecimal
  rate_lte: ethereumPrimaryBigDecimal
  rate_in: [ethereumPrimaryBigDecimal!]
  rate_not_in: [ethereumPrimaryBigDecimal!]
  flatFee: ethereumPrimaryBigDecimal
  flatFee_not: ethereumPrimaryBigDecimal
  flatFee_gt: ethereumPrimaryBigDecimal
  flatFee_lt: ethereumPrimaryBigDecimal
  flatFee_gte: ethereumPrimaryBigDecimal
  flatFee_lte: ethereumPrimaryBigDecimal
  flatFee_in: [ethereumPrimaryBigDecimal!]
  flatFee_not_in: [ethereumPrimaryBigDecimal!]
  type: ethereumPrimaryFeeType
  type_not: ethereumPrimaryFeeType
  type_in: [ethereumPrimaryFeeType!]
  type_not_in: [ethereumPrimaryFeeType!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryFee_filter]
  or: [ethereumPrimaryFee_filter]
}

enum ethereumPrimaryFee_orderBy {
  id
  rate
  flatFee
  type
}

type ethereumPrimaryFinancialsDailySnapshot {
  """ ID is # of days since Unix epoch time """
  id: ethereumPrimaryBytes!
  """ Number of days since Unix epoch time """
  days: Int!
  """ Protocol this snapshot is associated with """
  protocol: ethereumPrimaryLendingProtocol!
  """ Block number of this snapshot """
  blockNumber: BigInt!
  """ Timestamp of this snapshot """
  timestamp: BigInt!
  """ Current TVL (Total Value Locked) of the entire protocol """
  totalValueLockedUSD: ethereumPrimaryBigDecimal!
  """ Current PCV (Protocol Controlled Value). Only relevant for protocols with PCV. 
  """
  protocolControlledValueUSD: ethereumPrimaryBigDecimal
  """ Total supply of minted tokens in native amounts, with same ordering as mintedTokens. Only applies to CDP 
  """
  mintedTokenSupplies: [BigInt!]
  """ Revenue claimed by suppliers to the protocol. LPs on DEXs (e.g. 0.25% of the swap fee in Sushiswap). Depositors on Lending Protocols. NFT sellers on OpenSea. 
  """
  dailySupplySideRevenueUSD: ethereumPrimaryBigDecimal!
  """ Revenue claimed by suppliers to the protocol. LPs on DEXs (e.g. 0.25% of the swap fee in Sushiswap). Depositors on Lending Protocols. NFT sellers on OpenSea. 
  """
  cumulativeSupplySideRevenueUSD: ethereumPrimaryBigDecimal!
  """ Gross revenue for the protocol (revenue claimed by protocol). Examples: AMM protocol fee (Sushi’s 0.05%). OpenSea 10% sell fee. 
  """
  dailyProtocolSideRevenueUSD: ethereumPrimaryBigDecimal!
  """ Gross revenue for the protocol (revenue claimed by protocol). Examples: AMM protocol fee (Sushi’s 0.05%). OpenSea 10% sell fee. 
  """
  cumulativeProtocolSideRevenueUSD: ethereumPrimaryBigDecimal!
  """ All revenue generated by the protocol. e.g. 0.30% of swap fee in Sushiswap, all yield generated by Yearn. 
  """
  dailyTotalRevenueUSD: ethereumPrimaryBigDecimal!
  """ All revenue generated by the protocol. e.g. 0.30% of swap fee in Sushiswap, all yield generated by Yearn. 
  """
  cumulativeTotalRevenueUSD: ethereumPrimaryBigDecimal!
  """ Details of revenue sources and amounts """
  revenueDetail: ethereumPrimaryRevenueDetail
  """ Current balance of all deposited assets, in USD. Note this metric should be the same as TVL. 
  """
  totalDepositBalanceUSD: ethereumPrimaryBigDecimal!
  """ Total assets deposited on a given day, in USD """
  dailyDepositUSD: ethereumPrimaryBigDecimal!
  """ Sum of all historical deposits in USD (only considers deposits and not withdrawals) 
  """
  cumulativeDepositUSD: ethereumPrimaryBigDecimal!
  """ Current balance of all borrowed/minted assets, in USD. """
  totalBorrowBalanceUSD: ethereumPrimaryBigDecimal!
  """ Total assets borrowed/minted on a given day, in USD. """
  dailyBorrowUSD: ethereumPrimaryBigDecimal!
  """ Sum of all historical borrows/mints in USD (i.e. total loan origination). 
  """
  cumulativeBorrowUSD: ethereumPrimaryBigDecimal!
  """ Total assets liquidated on a given day, in USD. """
  dailyLiquidateUSD: ethereumPrimaryBigDecimal!
  """ Sum of all historical liquidations in USD """
  cumulativeLiquidateUSD: ethereumPrimaryBigDecimal!
  """ Total assets withdrawn on a given day, in USD. """
  dailyWithdrawUSD: ethereumPrimaryBigDecimal!
  """ Total assets repaid on a given day, in USD. """
  dailyRepayUSD: ethereumPrimaryBigDecimal!
  """ Total assets transferred on a given day, in USD. """
  dailyTransferUSD: ethereumPrimaryBigDecimal!
  """ Total flashloans executed on a given day, in USD. """
  dailyFlashloanUSD: ethereumPrimaryBigDecimal!
}

input ethereumPrimaryFinancialsDailySnapshot_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  days: Int
  days_not: Int
  days_gt: Int
  days_lt: Int
  days_gte: Int
  days_lte: Int
  days_in: [Int!]
  days_not_in: [Int!]
  protocol: String
  protocol_not: String
  protocol_gt: String
  protocol_lt: String
  protocol_gte: String
  protocol_lte: String
  protocol_in: [String!]
  protocol_not_in: [String!]
  protocol_contains: String
  protocol_contains_nocase: String
  protocol_not_contains: String
  protocol_not_contains_nocase: String
  protocol_starts_with: String
  protocol_starts_with_nocase: String
  protocol_not_starts_with: String
  protocol_not_starts_with_nocase: String
  protocol_ends_with: String
  protocol_ends_with_nocase: String
  protocol_not_ends_with: String
  protocol_not_ends_with_nocase: String
  protocol_: ethereumPrimaryLendingProtocol_filter
  blockNumber: BigInt
  blockNumber_not: BigInt
  blockNumber_gt: BigInt
  blockNumber_lt: BigInt
  blockNumber_gte: BigInt
  blockNumber_lte: BigInt
  blockNumber_in: [BigInt!]
  blockNumber_not_in: [BigInt!]
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  totalValueLockedUSD: ethereumPrimaryBigDecimal
  totalValueLockedUSD_not: ethereumPrimaryBigDecimal
  totalValueLockedUSD_gt: ethereumPrimaryBigDecimal
  totalValueLockedUSD_lt: ethereumPrimaryBigDecimal
  totalValueLockedUSD_gte: ethereumPrimaryBigDecimal
  totalValueLockedUSD_lte: ethereumPrimaryBigDecimal
  totalValueLockedUSD_in: [ethereumPrimaryBigDecimal!]
  totalValueLockedUSD_not_in: [ethereumPrimaryBigDecimal!]
  protocolControlledValueUSD: ethereumPrimaryBigDecimal
  protocolControlledValueUSD_not: ethereumPrimaryBigDecimal
  protocolControlledValueUSD_gt: ethereumPrimaryBigDecimal
  protocolControlledValueUSD_lt: ethereumPrimaryBigDecimal
  protocolControlledValueUSD_gte: ethereumPrimaryBigDecimal
  protocolControlledValueUSD_lte: ethereumPrimaryBigDecimal
  protocolControlledValueUSD_in: [ethereumPrimaryBigDecimal!]
  protocolControlledValueUSD_not_in: [ethereumPrimaryBigDecimal!]
  mintedTokenSupplies: [BigInt!]
  mintedTokenSupplies_not: [BigInt!]
  mintedTokenSupplies_contains: [BigInt!]
  mintedTokenSupplies_contains_nocase: [BigInt!]
  mintedTokenSupplies_not_contains: [BigInt!]
  mintedTokenSupplies_not_contains_nocase: [BigInt!]
  dailySupplySideRevenueUSD: ethereumPrimaryBigDecimal
  dailySupplySideRevenueUSD_not: ethereumPrimaryBigDecimal
  dailySupplySideRevenueUSD_gt: ethereumPrimaryBigDecimal
  dailySupplySideRevenueUSD_lt: ethereumPrimaryBigDecimal
  dailySupplySideRevenueUSD_gte: ethereumPrimaryBigDecimal
  dailySupplySideRevenueUSD_lte: ethereumPrimaryBigDecimal
  dailySupplySideRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  dailySupplySideRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeSupplySideRevenueUSD: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_not: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_gt: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_lt: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_gte: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_lte: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeSupplySideRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyProtocolSideRevenueUSD: ethereumPrimaryBigDecimal
  dailyProtocolSideRevenueUSD_not: ethereumPrimaryBigDecimal
  dailyProtocolSideRevenueUSD_gt: ethereumPrimaryBigDecimal
  dailyProtocolSideRevenueUSD_lt: ethereumPrimaryBigDecimal
  dailyProtocolSideRevenueUSD_gte: ethereumPrimaryBigDecimal
  dailyProtocolSideRevenueUSD_lte: ethereumPrimaryBigDecimal
  dailyProtocolSideRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  dailyProtocolSideRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeProtocolSideRevenueUSD: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_not: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_gt: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_lt: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_gte: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_lte: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeProtocolSideRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyTotalRevenueUSD: ethereumPrimaryBigDecimal
  dailyTotalRevenueUSD_not: ethereumPrimaryBigDecimal
  dailyTotalRevenueUSD_gt: ethereumPrimaryBigDecimal
  dailyTotalRevenueUSD_lt: ethereumPrimaryBigDecimal
  dailyTotalRevenueUSD_gte: ethereumPrimaryBigDecimal
  dailyTotalRevenueUSD_lte: ethereumPrimaryBigDecimal
  dailyTotalRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  dailyTotalRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeTotalRevenueUSD: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_not: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_gt: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_lt: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_gte: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_lte: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeTotalRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  revenueDetail: String
  revenueDetail_not: String
  revenueDetail_gt: String
  revenueDetail_lt: String
  revenueDetail_gte: String
  revenueDetail_lte: String
  revenueDetail_in: [String!]
  revenueDetail_not_in: [String!]
  revenueDetail_contains: String
  revenueDetail_contains_nocase: String
  revenueDetail_not_contains: String
  revenueDetail_not_contains_nocase: String
  revenueDetail_starts_with: String
  revenueDetail_starts_with_nocase: String
  revenueDetail_not_starts_with: String
  revenueDetail_not_starts_with_nocase: String
  revenueDetail_ends_with: String
  revenueDetail_ends_with_nocase: String
  revenueDetail_not_ends_with: String
  revenueDetail_not_ends_with_nocase: String
  revenueDetail_: ethereumPrimaryRevenueDetail_filter
  totalDepositBalanceUSD: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_not: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_gt: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_lt: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_gte: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_lte: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_in: [ethereumPrimaryBigDecimal!]
  totalDepositBalanceUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyDepositUSD: ethereumPrimaryBigDecimal
  dailyDepositUSD_not: ethereumPrimaryBigDecimal
  dailyDepositUSD_gt: ethereumPrimaryBigDecimal
  dailyDepositUSD_lt: ethereumPrimaryBigDecimal
  dailyDepositUSD_gte: ethereumPrimaryBigDecimal
  dailyDepositUSD_lte: ethereumPrimaryBigDecimal
  dailyDepositUSD_in: [ethereumPrimaryBigDecimal!]
  dailyDepositUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeDepositUSD: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_not: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_gt: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_lt: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_gte: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_lte: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeDepositUSD_not_in: [ethereumPrimaryBigDecimal!]
  totalBorrowBalanceUSD: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_not: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_gt: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_lt: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_gte: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_lte: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_in: [ethereumPrimaryBigDecimal!]
  totalBorrowBalanceUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyBorrowUSD: ethereumPrimaryBigDecimal
  dailyBorrowUSD_not: ethereumPrimaryBigDecimal
  dailyBorrowUSD_gt: ethereumPrimaryBigDecimal
  dailyBorrowUSD_lt: ethereumPrimaryBigDecimal
  dailyBorrowUSD_gte: ethereumPrimaryBigDecimal
  dailyBorrowUSD_lte: ethereumPrimaryBigDecimal
  dailyBorrowUSD_in: [ethereumPrimaryBigDecimal!]
  dailyBorrowUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeBorrowUSD: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_not: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_gt: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_lt: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_gte: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_lte: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeBorrowUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyLiquidateUSD: ethereumPrimaryBigDecimal
  dailyLiquidateUSD_not: ethereumPrimaryBigDecimal
  dailyLiquidateUSD_gt: ethereumPrimaryBigDecimal
  dailyLiquidateUSD_lt: ethereumPrimaryBigDecimal
  dailyLiquidateUSD_gte: ethereumPrimaryBigDecimal
  dailyLiquidateUSD_lte: ethereumPrimaryBigDecimal
  dailyLiquidateUSD_in: [ethereumPrimaryBigDecimal!]
  dailyLiquidateUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeLiquidateUSD: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_not: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_gt: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_lt: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_gte: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_lte: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeLiquidateUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyWithdrawUSD: ethereumPrimaryBigDecimal
  dailyWithdrawUSD_not: ethereumPrimaryBigDecimal
  dailyWithdrawUSD_gt: ethereumPrimaryBigDecimal
  dailyWithdrawUSD_lt: ethereumPrimaryBigDecimal
  dailyWithdrawUSD_gte: ethereumPrimaryBigDecimal
  dailyWithdrawUSD_lte: ethereumPrimaryBigDecimal
  dailyWithdrawUSD_in: [ethereumPrimaryBigDecimal!]
  dailyWithdrawUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyRepayUSD: ethereumPrimaryBigDecimal
  dailyRepayUSD_not: ethereumPrimaryBigDecimal
  dailyRepayUSD_gt: ethereumPrimaryBigDecimal
  dailyRepayUSD_lt: ethereumPrimaryBigDecimal
  dailyRepayUSD_gte: ethereumPrimaryBigDecimal
  dailyRepayUSD_lte: ethereumPrimaryBigDecimal
  dailyRepayUSD_in: [ethereumPrimaryBigDecimal!]
  dailyRepayUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyTransferUSD: ethereumPrimaryBigDecimal
  dailyTransferUSD_not: ethereumPrimaryBigDecimal
  dailyTransferUSD_gt: ethereumPrimaryBigDecimal
  dailyTransferUSD_lt: ethereumPrimaryBigDecimal
  dailyTransferUSD_gte: ethereumPrimaryBigDecimal
  dailyTransferUSD_lte: ethereumPrimaryBigDecimal
  dailyTransferUSD_in: [ethereumPrimaryBigDecimal!]
  dailyTransferUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyFlashloanUSD: ethereumPrimaryBigDecimal
  dailyFlashloanUSD_not: ethereumPrimaryBigDecimal
  dailyFlashloanUSD_gt: ethereumPrimaryBigDecimal
  dailyFlashloanUSD_lt: ethereumPrimaryBigDecimal
  dailyFlashloanUSD_gte: ethereumPrimaryBigDecimal
  dailyFlashloanUSD_lte: ethereumPrimaryBigDecimal
  dailyFlashloanUSD_in: [ethereumPrimaryBigDecimal!]
  dailyFlashloanUSD_not_in: [ethereumPrimaryBigDecimal!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryFinancialsDailySnapshot_filter]
  or: [ethereumPrimaryFinancialsDailySnapshot_filter]
}

enum ethereumPrimaryFinancialsDailySnapshot_orderBy {
  id
  days
  protocol
  protocol__id
  protocol__protocol
  protocol__name
  protocol__slug
  protocol__schemaVersion
  protocol__subgraphVersion
  protocol__methodologyVersion
  protocol__network
  protocol__type
  protocol__lendingType
  protocol__lenderPermissionType
  protocol__borrowerPermissionType
  protocol__poolCreatorPermissionType
  protocol__riskType
  protocol__collateralizationType
  protocol__cumulativeUniqueUsers
  protocol__cumulativeUniqueDepositors
  protocol__cumulativeUniqueBorrowers
  protocol__cumulativeUniqueLiquidators
  protocol__cumulativeUniqueLiquidatees
  protocol__totalValueLockedUSD
  protocol__protocolControlledValueUSD
  protocol__cumulativeSupplySideRevenueUSD
  protocol__cumulativeProtocolSideRevenueUSD
  protocol__cumulativeTotalRevenueUSD
  protocol__totalDepositBalanceUSD
  protocol__cumulativeDepositUSD
  protocol__totalBorrowBalanceUSD
  protocol__cumulativeBorrowUSD
  protocol__cumulativeLiquidateUSD
  protocol__totalPoolCount
  protocol__openPositionCount
  protocol__cumulativePositionCount
  protocol__transactionCount
  protocol__depositCount
  protocol__withdrawCount
  protocol__borrowCount
  protocol__repayCount
  protocol__liquidationCount
  protocol__transferCount
  protocol__flashloanCount
  blockNumber
  timestamp
  totalValueLockedUSD
  protocolControlledValueUSD
  mintedTokenSupplies
  dailySupplySideRevenueUSD
  cumulativeSupplySideRevenueUSD
  dailyProtocolSideRevenueUSD
  cumulativeProtocolSideRevenueUSD
  dailyTotalRevenueUSD
  cumulativeTotalRevenueUSD
  revenueDetail
  revenueDetail__id
  totalDepositBalanceUSD
  dailyDepositUSD
  cumulativeDepositUSD
  totalBorrowBalanceUSD
  dailyBorrowUSD
  cumulativeBorrowUSD
  dailyLiquidateUSD
  cumulativeLiquidateUSD
  dailyWithdrawUSD
  dailyRepayUSD
  dailyTransferUSD
  dailyFlashloanUSD
}

type ethereumPrimaryFlashloan implements ethereumPrimaryEvent {
  """ { Transaction hash }{ Log index } """
  id: ethereumPrimaryBytes!
  """ Transaction hash of the transaction that emitted this event """
  hash: ethereumPrimaryBytes!
  """ Nonce of the transaction that emitted this event """
  nonce: BigInt!
  """ Event log index. For transactions that don't emit event, create arbitrary index starting from 0 
  """
  logIndex: Int!
  """ Price of gas in this transaction """
  gasPrice: BigInt
  """ Gas used in this transaction. (Optional because not every chain will support this) 
  """
  gasUsed: BigInt
  """ Gas limit of this transaction. e.g. the amount of gas the sender will pay 
  """
  gasLimit: BigInt
  """ Block number of this event """
  blockNumber: BigInt!
  """ Timestamp of this event """
  timestamp: BigInt!
  """ Account that receives the funds from the flashloan """
  account: ethereumPrimaryAccount!
  """ Account that initiates the flashloan """
  accountActor: ethereumPrimaryAccount
  """ The market in which this flashloan is executed """
  market: ethereumPrimaryMarket!
  """ Asset borrowed """
  asset: ethereumPrimaryToken!
  """ Amount of asset borrowed in native units """
  amount: BigInt!
  """ Amount of asset borrowed in USD """
  amountUSD: ethereumPrimaryBigDecimal!
  """ Amount of asset taken by protocol as a fee in native units """
  feeAmount: BigInt
  """ Amount of asset taken by protocol as a fee in USD """
  feeAmountUSD: ethereumPrimaryBigDecimal
}

input ethereumPrimaryFlashloan_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  hash: ethereumPrimaryBytes
  hash_not: ethereumPrimaryBytes
  hash_gt: ethereumPrimaryBytes
  hash_lt: ethereumPrimaryBytes
  hash_gte: ethereumPrimaryBytes
  hash_lte: ethereumPrimaryBytes
  hash_in: [ethereumPrimaryBytes!]
  hash_not_in: [ethereumPrimaryBytes!]
  hash_contains: ethereumPrimaryBytes
  hash_not_contains: ethereumPrimaryBytes
  nonce: BigInt
  nonce_not: BigInt
  nonce_gt: BigInt
  nonce_lt: BigInt
  nonce_gte: BigInt
  nonce_lte: BigInt
  nonce_in: [BigInt!]
  nonce_not_in: [BigInt!]
  logIndex: Int
  logIndex_not: Int
  logIndex_gt: Int
  logIndex_lt: Int
  logIndex_gte: Int
  logIndex_lte: Int
  logIndex_in: [Int!]
  logIndex_not_in: [Int!]
  gasPrice: BigInt
  gasPrice_not: BigInt
  gasPrice_gt: BigInt
  gasPrice_lt: BigInt
  gasPrice_gte: BigInt
  gasPrice_lte: BigInt
  gasPrice_in: [BigInt!]
  gasPrice_not_in: [BigInt!]
  gasUsed: BigInt
  gasUsed_not: BigInt
  gasUsed_gt: BigInt
  gasUsed_lt: BigInt
  gasUsed_gte: BigInt
  gasUsed_lte: BigInt
  gasUsed_in: [BigInt!]
  gasUsed_not_in: [BigInt!]
  gasLimit: BigInt
  gasLimit_not: BigInt
  gasLimit_gt: BigInt
  gasLimit_lt: BigInt
  gasLimit_gte: BigInt
  gasLimit_lte: BigInt
  gasLimit_in: [BigInt!]
  gasLimit_not_in: [BigInt!]
  blockNumber: BigInt
  blockNumber_not: BigInt
  blockNumber_gt: BigInt
  blockNumber_lt: BigInt
  blockNumber_gte: BigInt
  blockNumber_lte: BigInt
  blockNumber_in: [BigInt!]
  blockNumber_not_in: [BigInt!]
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  account: String
  account_not: String
  account_gt: String
  account_lt: String
  account_gte: String
  account_lte: String
  account_in: [String!]
  account_not_in: [String!]
  account_contains: String
  account_contains_nocase: String
  account_not_contains: String
  account_not_contains_nocase: String
  account_starts_with: String
  account_starts_with_nocase: String
  account_not_starts_with: String
  account_not_starts_with_nocase: String
  account_ends_with: String
  account_ends_with_nocase: String
  account_not_ends_with: String
  account_not_ends_with_nocase: String
  account_: ethereumPrimaryAccount_filter
  accountActor: String
  accountActor_not: String
  accountActor_gt: String
  accountActor_lt: String
  accountActor_gte: String
  accountActor_lte: String
  accountActor_in: [String!]
  accountActor_not_in: [String!]
  accountActor_contains: String
  accountActor_contains_nocase: String
  accountActor_not_contains: String
  accountActor_not_contains_nocase: String
  accountActor_starts_with: String
  accountActor_starts_with_nocase: String
  accountActor_not_starts_with: String
  accountActor_not_starts_with_nocase: String
  accountActor_ends_with: String
  accountActor_ends_with_nocase: String
  accountActor_not_ends_with: String
  accountActor_not_ends_with_nocase: String
  accountActor_: ethereumPrimaryAccount_filter
  market: String
  market_not: String
  market_gt: String
  market_lt: String
  market_gte: String
  market_lte: String
  market_in: [String!]
  market_not_in: [String!]
  market_contains: String
  market_contains_nocase: String
  market_not_contains: String
  market_not_contains_nocase: String
  market_starts_with: String
  market_starts_with_nocase: String
  market_not_starts_with: String
  market_not_starts_with_nocase: String
  market_ends_with: String
  market_ends_with_nocase: String
  market_not_ends_with: String
  market_not_ends_with_nocase: String
  market_: ethereumPrimaryMarket_filter
  asset: String
  asset_not: String
  asset_gt: String
  asset_lt: String
  asset_gte: String
  asset_lte: String
  asset_in: [String!]
  asset_not_in: [String!]
  asset_contains: String
  asset_contains_nocase: String
  asset_not_contains: String
  asset_not_contains_nocase: String
  asset_starts_with: String
  asset_starts_with_nocase: String
  asset_not_starts_with: String
  asset_not_starts_with_nocase: String
  asset_ends_with: String
  asset_ends_with_nocase: String
  asset_not_ends_with: String
  asset_not_ends_with_nocase: String
  asset_: ethereumPrimaryToken_filter
  amount: BigInt
  amount_not: BigInt
  amount_gt: BigInt
  amount_lt: BigInt
  amount_gte: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  amount_not_in: [BigInt!]
  amountUSD: ethereumPrimaryBigDecimal
  amountUSD_not: ethereumPrimaryBigDecimal
  amountUSD_gt: ethereumPrimaryBigDecimal
  amountUSD_lt: ethereumPrimaryBigDecimal
  amountUSD_gte: ethereumPrimaryBigDecimal
  amountUSD_lte: ethereumPrimaryBigDecimal
  amountUSD_in: [ethereumPrimaryBigDecimal!]
  amountUSD_not_in: [ethereumPrimaryBigDecimal!]
  feeAmount: BigInt
  feeAmount_not: BigInt
  feeAmount_gt: BigInt
  feeAmount_lt: BigInt
  feeAmount_gte: BigInt
  feeAmount_lte: BigInt
  feeAmount_in: [BigInt!]
  feeAmount_not_in: [BigInt!]
  feeAmountUSD: ethereumPrimaryBigDecimal
  feeAmountUSD_not: ethereumPrimaryBigDecimal
  feeAmountUSD_gt: ethereumPrimaryBigDecimal
  feeAmountUSD_lt: ethereumPrimaryBigDecimal
  feeAmountUSD_gte: ethereumPrimaryBigDecimal
  feeAmountUSD_lte: ethereumPrimaryBigDecimal
  feeAmountUSD_in: [ethereumPrimaryBigDecimal!]
  feeAmountUSD_not_in: [ethereumPrimaryBigDecimal!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryFlashloan_filter]
  or: [ethereumPrimaryFlashloan_filter]
}

enum ethereumPrimaryFlashloan_orderBy {
  id
  hash
  nonce
  logIndex
  gasPrice
  gasUsed
  gasLimit
  blockNumber
  timestamp
  account
  account__id
  account__positionCount
  account__openPositionCount
  account__closedPositionCount
  account__depositCount
  account__withdrawCount
  account__borrowCount
  account__repayCount
  account__liquidateCount
  account__liquidationCount
  account__transferredCount
  account__receivedCount
  account__flashloanCount
  account__rewardsClaimedUSD
  account___eMode
  accountActor
  accountActor__id
  accountActor__positionCount
  accountActor__openPositionCount
  accountActor__closedPositionCount
  accountActor__depositCount
  accountActor__withdrawCount
  accountActor__borrowCount
  accountActor__repayCount
  accountActor__liquidateCount
  accountActor__liquidationCount
  accountActor__transferredCount
  accountActor__receivedCount
  accountActor__flashloanCount
  accountActor__rewardsClaimedUSD
  accountActor___eMode
  market
  market__id
  market__name
  market__isActive
  market__canBorrowFrom
  market__canUseAsCollateral
  market__maximumLTV
  market__liquidationThreshold
  market__liquidationPenalty
  market__canIsolate
  market__createdTimestamp
  market__createdBlockNumber
  market__relation
  market__stakedOutputTokenAmount
  market__inputTokenBalance
  market__inputTokenPriceUSD
  market__outputTokenSupply
  market__outputTokenPriceUSD
  market__exchangeRate
  market__reserves
  market__reserveFactor
  market__variableBorrowedTokenBalance
  market__stableBorrowedTokenBalance
  market__indexLastUpdatedTimestamp
  market__supplyIndex
  market__supplyCap
  market__borrowIndex
  market__borrowCap
  market__totalValueLockedUSD
  market__cumulativeSupplySideRevenueUSD
  market__cumulativeProtocolSideRevenueUSD
  market__cumulativeTotalRevenueUSD
  market__totalDepositBalanceUSD
  market__cumulativeDepositUSD
  market__totalBorrowBalanceUSD
  market__cumulativeBorrowUSD
  market__cumulativeLiquidateUSD
  market__cumulativeTransferUSD
  market__cumulativeFlashloanUSD
  market__transactionCount
  market__depositCount
  market__withdrawCount
  market__borrowCount
  market__repayCount
  market__liquidationCount
  market__transferCount
  market__flashloanCount
  market__cumulativeUniqueUsers
  market__cumulativeUniqueDepositors
  market__cumulativeUniqueBorrowers
  market__cumulativeUniqueLiquidators
  market__cumulativeUniqueLiquidatees
  market__cumulativeUniqueTransferrers
  market__cumulativeUniqueFlashloaners
  market__positionCount
  market__openPositionCount
  market__closedPositionCount
  market__lendingPositionCount
  market__borrowingPositionCount
  market___baseTrackingBorrowSpeed
  market___baseTrackingSupplySpeed
  market___lastRewardsUpdated
  market___liquidationProtocolFee
  market___siloedBorrowing
  asset
  asset__id
  asset__name
  asset__symbol
  asset__decimals
  asset__lastPriceUSD
  asset__lastPriceBlockNumber
  asset__type
  asset___iavsTokenType
  amount
  amountUSD
  feeAmount
  feeAmountUSD
}

"""
8 bytes signed integer

"""
scalar ethereumPrimaryInt8

type ethereumPrimaryInterestRate {
  """ { Interest rate side }-{ Interest rate type }-{ Market ID }-{ Optional: Tranche }-{ Optional: # days/hours since epoch time } 
  """
  id: ID!
  """ Interest rate in percentage APY. E.g. 5.21% should be stored as 5.21 """
  rate: ethereumPrimaryBigDecimal!
  """ Duration of the loan in days. Only applies to fixed term lending (e.g. Notional) 
  """
  duration: Int
  """ Maturity of the loan in block height. Only applies to fixed term lending (e.g. Notional) 
  """
  maturityBlock: BigInt
  """ The party the interest is paid to / received from """
  side: ethereumPrimaryInterestRateSide!
  """ The type of interest rate (e.g. stable, fixed, variable, etc) """
  type: ethereumPrimaryInterestRateType!
  """ The level of debt priority at this interest rate """
  tranche: ethereumPrimaryTranche
}

enum ethereumPrimaryInterestRateSide {
  """ Interest rate accrued by lenders """
  LENDER
  """ Interest rate paid by borrowers """
  BORROWER
}

enum ethereumPrimaryInterestRateType {
  """ Stable interest rate (e.g. Aave) """
  STABLE
  """ Variable interest rate (e.g. Compound) """
  VARIABLE
  """ Fixed interest rate (e.g. Notional) """
  FIXED
}

input ethereumPrimaryInterestRate_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  rate: ethereumPrimaryBigDecimal
  rate_not: ethereumPrimaryBigDecimal
  rate_gt: ethereumPrimaryBigDecimal
  rate_lt: ethereumPrimaryBigDecimal
  rate_gte: ethereumPrimaryBigDecimal
  rate_lte: ethereumPrimaryBigDecimal
  rate_in: [ethereumPrimaryBigDecimal!]
  rate_not_in: [ethereumPrimaryBigDecimal!]
  duration: Int
  duration_not: Int
  duration_gt: Int
  duration_lt: Int
  duration_gte: Int
  duration_lte: Int
  duration_in: [Int!]
  duration_not_in: [Int!]
  maturityBlock: BigInt
  maturityBlock_not: BigInt
  maturityBlock_gt: BigInt
  maturityBlock_lt: BigInt
  maturityBlock_gte: BigInt
  maturityBlock_lte: BigInt
  maturityBlock_in: [BigInt!]
  maturityBlock_not_in: [BigInt!]
  side: ethereumPrimaryInterestRateSide
  side_not: ethereumPrimaryInterestRateSide
  side_in: [ethereumPrimaryInterestRateSide!]
  side_not_in: [ethereumPrimaryInterestRateSide!]
  type: ethereumPrimaryInterestRateType
  type_not: ethereumPrimaryInterestRateType
  type_in: [ethereumPrimaryInterestRateType!]
  type_not_in: [ethereumPrimaryInterestRateType!]
  tranche: ethereumPrimaryTranche
  tranche_not: ethereumPrimaryTranche
  tranche_in: [ethereumPrimaryTranche!]
  tranche_not_in: [ethereumPrimaryTranche!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryInterestRate_filter]
  or: [ethereumPrimaryInterestRate_filter]
}

enum ethereumPrimaryInterestRate_orderBy {
  id
  rate
  duration
  maturityBlock
  side
  type
  tranche
}

type ethereumPrimaryLendingProtocol implements ethereumPrimaryProtocol {
  """ Smart contract address of the protocol's main contract (Factory, Registry, etc) 
  """
  id: ethereumPrimaryBytes!
  """ Base name of the protocol, excluding transformations. e.g. Aave """
  protocol: String!
  """ Name of the protocol, including version. e.g. Aave v2 """
  name: String!
  """ Slug of protocol, including version. e.g. aave-v2 """
  slug: String!
  """ Version of the subgraph schema, in SemVer format (e.g. 1.0.0) """
  schemaVersion: String!
  """ Version of the subgraph implementation, in SemVer format (e.g. 1.0.0) 
  """
  subgraphVersion: String!
  """ Version of the methodology used to compute metrics, loosely based on SemVer format (e.g. 1.0.0) 
  """
  methodologyVersion: String!
  """ The blockchain network this subgraph is indexing on """
  network: ethereumPrimaryNetwork!
  """ The type of protocol (e.g. DEX, Lending, Yield, etc) """
  type: ethereumPrimaryProtocolType!
  """ The specific lending protocol type """
  lendingType: ethereumPrimaryLendingType
  """ The specific permissions required to lend in this protocol """
  lenderPermissionType: ethereumPrimaryPermissionType
  """ The specific permissions required to borrow from this protocol """
  borrowerPermissionType: ethereumPrimaryPermissionType
  """ The specific permissions required to create a pool (market) in this protocol 
  """
  poolCreatorPermissionType: ethereumPrimaryPermissionType
  """ Risk type of the lending protocol """
  riskType: ethereumPrimaryRiskType
  """ The way a positions can be collateralized """
  collateralizationType: ethereumPrimaryCollateralizationType
  """ Tokens that can be minted. Only applies to CDP (usually stable coins) 
  """
  mintedTokens(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryToken_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryToken_filter): [ethereumPrimaryToken!]
  """ Additional tokens that are given as reward for position in a protocol, usually in liquidity mining programs. 
  """
  rewardTokens(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryRewardToken_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryRewardToken_filter): [ethereumPrimaryRewardToken!]
  """ Number of cumulative unique users. e.g. accounts that spent gas to interact with this protocol 
  """
  cumulativeUniqueUsers: Int!
  """ Number of cumulative depositors """
  cumulativeUniqueDepositors: Int!
  """ Number of cumulative borrowers """
  cumulativeUniqueBorrowers: Int!
  """ Number of cumulative liquidators (accounts that performed liquidation) 
  """
  cumulativeUniqueLiquidators: Int!
  """ Number of cumulative liquidatees (accounts that got liquidated) """
  cumulativeUniqueLiquidatees: Int!
  """ Current TVL (Total Value Locked) of the entire protocol """
  totalValueLockedUSD: ethereumPrimaryBigDecimal!
  """ Current PCV (Protocol Controlled Value). Only relevant for protocols with PCV. 
  """
  protocolControlledValueUSD: ethereumPrimaryBigDecimal
  """ Revenue claimed by suppliers to the protocol. LPs on DEXs (e.g. 0.25% of the swap fee in Sushiswap). Depositors on Lending Protocols. NFT sellers on OpenSea. 
  """
  cumulativeSupplySideRevenueUSD: ethereumPrimaryBigDecimal!
  """ Gross revenue for the protocol (revenue claimed by protocol). Examples: AMM protocol fee (Sushi’s 0.05%). OpenSea 10% sell fee. 
  """
  cumulativeProtocolSideRevenueUSD: ethereumPrimaryBigDecimal!
  """ All revenue generated by the protocol. e.g. 0.30% of swap fee in Sushiswap, all yield generated by Yearn. 
  """
  cumulativeTotalRevenueUSD: ethereumPrimaryBigDecimal!
  """ All fees in the protocol. Fee should be in percentage format. e.g. 0.30% liquidation fee 
  """
  fees(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryFee_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryFee_filter): [ethereumPrimaryFee!]
  """ Details of revenue sources and amounts """
  revenueDetail: ethereumPrimaryRevenueDetail
  """ Current balance of all deposited assets, in USD. Note this metric should be the same as TVL. 
  """
  totalDepositBalanceUSD: ethereumPrimaryBigDecimal!
  """ Sum of all historical deposits in USD (only considers deposits and not withdrawals) 
  """
  cumulativeDepositUSD: ethereumPrimaryBigDecimal!
  """ Current balance of all borrowed/minted assets (not historical cumulative), in USD. 
  """
  totalBorrowBalanceUSD: ethereumPrimaryBigDecimal!
  """ Sum of all historical borrows/mints in USD (i.e. total loan origination). 
  """
  cumulativeBorrowUSD: ethereumPrimaryBigDecimal!
  """ Sum of all historical liquidations in USD """
  cumulativeLiquidateUSD: ethereumPrimaryBigDecimal!
  """ Total supply of minted tokens in native amounts, with same ordering as mintedTokens. Only applies to CDP 
  """
  mintedTokenSupplies: [BigInt!]
  """ Total number of pools """
  totalPoolCount: Int!
  """ Total number of open positions """
  openPositionCount: Int!
  """ Total number of positions (open and closed) """
  cumulativePositionCount: Int!
  """ Total number of transactions """
  transactionCount: Int!
  """ Total number of deposits """
  depositCount: Int!
  """ Total number of withdrawals """
  withdrawCount: Int!
  """ Total number of borrows """
  borrowCount: Int!
  """ Total number of repayments """
  repayCount: Int!
  """ Total number of liquidations """
  liquidationCount: Int!
  """ Total number of transfers """
  transferCount: Int!
  """ Total number of flashloans """
  flashloanCount: Int!
  """ Per-block reward token emission as of the current block normalized to a day, in token's native amount. This should be ideally calculated as the theoretical rate instead of the realized amount. 
  """
  rewardTokenEmissionsAmount: [BigInt!]
  """ Per-block reward token emission as of the current block normalized to a day, in USD value. This should be ideally calculated as the theoretical rate instead of the realized amount. 
  """
  rewardTokenEmissionsUSD: [ethereumPrimaryBigDecimal!]
  """ Daily usage metrics for this protocol """
  dailyUsageMetrics(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryUsageMetricsDailySnapshot_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryUsageMetricsDailySnapshot_filter): [ethereumPrimaryUsageMetricsDailySnapshot!]!
  """ Hourly usage metrics for this protocol """
  hourlyUsageMetrics(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryUsageMetricsHourlySnapshot_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryUsageMetricsHourlySnapshot_filter): [ethereumPrimaryUsageMetricsHourlySnapshot!]!
  """ Daily financial metrics for this protocol """
  financialMetrics(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryFinancialsDailySnapshot_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryFinancialsDailySnapshot_filter): [ethereumPrimaryFinancialsDailySnapshot!]!
  """ All markets that belong to this protocol """
  markets(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryMarket_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryMarket_filter): [ethereumPrimaryMarket!]!
}

input ethereumPrimaryLendingProtocol_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  protocol: String
  protocol_not: String
  protocol_gt: String
  protocol_lt: String
  protocol_gte: String
  protocol_lte: String
  protocol_in: [String!]
  protocol_not_in: [String!]
  protocol_contains: String
  protocol_contains_nocase: String
  protocol_not_contains: String
  protocol_not_contains_nocase: String
  protocol_starts_with: String
  protocol_starts_with_nocase: String
  protocol_not_starts_with: String
  protocol_not_starts_with_nocase: String
  protocol_ends_with: String
  protocol_ends_with_nocase: String
  protocol_not_ends_with: String
  protocol_not_ends_with_nocase: String
  name: String
  name_not: String
  name_gt: String
  name_lt: String
  name_gte: String
  name_lte: String
  name_in: [String!]
  name_not_in: [String!]
  name_contains: String
  name_contains_nocase: String
  name_not_contains: String
  name_not_contains_nocase: String
  name_starts_with: String
  name_starts_with_nocase: String
  name_not_starts_with: String
  name_not_starts_with_nocase: String
  name_ends_with: String
  name_ends_with_nocase: String
  name_not_ends_with: String
  name_not_ends_with_nocase: String
  slug: String
  slug_not: String
  slug_gt: String
  slug_lt: String
  slug_gte: String
  slug_lte: String
  slug_in: [String!]
  slug_not_in: [String!]
  slug_contains: String
  slug_contains_nocase: String
  slug_not_contains: String
  slug_not_contains_nocase: String
  slug_starts_with: String
  slug_starts_with_nocase: String
  slug_not_starts_with: String
  slug_not_starts_with_nocase: String
  slug_ends_with: String
  slug_ends_with_nocase: String
  slug_not_ends_with: String
  slug_not_ends_with_nocase: String
  schemaVersion: String
  schemaVersion_not: String
  schemaVersion_gt: String
  schemaVersion_lt: String
  schemaVersion_gte: String
  schemaVersion_lte: String
  schemaVersion_in: [String!]
  schemaVersion_not_in: [String!]
  schemaVersion_contains: String
  schemaVersion_contains_nocase: String
  schemaVersion_not_contains: String
  schemaVersion_not_contains_nocase: String
  schemaVersion_starts_with: String
  schemaVersion_starts_with_nocase: String
  schemaVersion_not_starts_with: String
  schemaVersion_not_starts_with_nocase: String
  schemaVersion_ends_with: String
  schemaVersion_ends_with_nocase: String
  schemaVersion_not_ends_with: String
  schemaVersion_not_ends_with_nocase: String
  subgraphVersion: String
  subgraphVersion_not: String
  subgraphVersion_gt: String
  subgraphVersion_lt: String
  subgraphVersion_gte: String
  subgraphVersion_lte: String
  subgraphVersion_in: [String!]
  subgraphVersion_not_in: [String!]
  subgraphVersion_contains: String
  subgraphVersion_contains_nocase: String
  subgraphVersion_not_contains: String
  subgraphVersion_not_contains_nocase: String
  subgraphVersion_starts_with: String
  subgraphVersion_starts_with_nocase: String
  subgraphVersion_not_starts_with: String
  subgraphVersion_not_starts_with_nocase: String
  subgraphVersion_ends_with: String
  subgraphVersion_ends_with_nocase: String
  subgraphVersion_not_ends_with: String
  subgraphVersion_not_ends_with_nocase: String
  methodologyVersion: String
  methodologyVersion_not: String
  methodologyVersion_gt: String
  methodologyVersion_lt: String
  methodologyVersion_gte: String
  methodologyVersion_lte: String
  methodologyVersion_in: [String!]
  methodologyVersion_not_in: [String!]
  methodologyVersion_contains: String
  methodologyVersion_contains_nocase: String
  methodologyVersion_not_contains: String
  methodologyVersion_not_contains_nocase: String
  methodologyVersion_starts_with: String
  methodologyVersion_starts_with_nocase: String
  methodologyVersion_not_starts_with: String
  methodologyVersion_not_starts_with_nocase: String
  methodologyVersion_ends_with: String
  methodologyVersion_ends_with_nocase: String
  methodologyVersion_not_ends_with: String
  methodologyVersion_not_ends_with_nocase: String
  network: ethereumPrimaryNetwork
  network_not: ethereumPrimaryNetwork
  network_in: [ethereumPrimaryNetwork!]
  network_not_in: [ethereumPrimaryNetwork!]
  type: ethereumPrimaryProtocolType
  type_not: ethereumPrimaryProtocolType
  type_in: [ethereumPrimaryProtocolType!]
  type_not_in: [ethereumPrimaryProtocolType!]
  lendingType: ethereumPrimaryLendingType
  lendingType_not: ethereumPrimaryLendingType
  lendingType_in: [ethereumPrimaryLendingType!]
  lendingType_not_in: [ethereumPrimaryLendingType!]
  lenderPermissionType: ethereumPrimaryPermissionType
  lenderPermissionType_not: ethereumPrimaryPermissionType
  lenderPermissionType_in: [ethereumPrimaryPermissionType!]
  lenderPermissionType_not_in: [ethereumPrimaryPermissionType!]
  borrowerPermissionType: ethereumPrimaryPermissionType
  borrowerPermissionType_not: ethereumPrimaryPermissionType
  borrowerPermissionType_in: [ethereumPrimaryPermissionType!]
  borrowerPermissionType_not_in: [ethereumPrimaryPermissionType!]
  poolCreatorPermissionType: ethereumPrimaryPermissionType
  poolCreatorPermissionType_not: ethereumPrimaryPermissionType
  poolCreatorPermissionType_in: [ethereumPrimaryPermissionType!]
  poolCreatorPermissionType_not_in: [ethereumPrimaryPermissionType!]
  riskType: ethereumPrimaryRiskType
  riskType_not: ethereumPrimaryRiskType
  riskType_in: [ethereumPrimaryRiskType!]
  riskType_not_in: [ethereumPrimaryRiskType!]
  collateralizationType: ethereumPrimaryCollateralizationType
  collateralizationType_not: ethereumPrimaryCollateralizationType
  collateralizationType_in: [ethereumPrimaryCollateralizationType!]
  collateralizationType_not_in: [ethereumPrimaryCollateralizationType!]
  mintedTokens: [String!]
  mintedTokens_not: [String!]
  mintedTokens_contains: [String!]
  mintedTokens_contains_nocase: [String!]
  mintedTokens_not_contains: [String!]
  mintedTokens_not_contains_nocase: [String!]
  mintedTokens_: ethereumPrimaryToken_filter
  rewardTokens: [String!]
  rewardTokens_not: [String!]
  rewardTokens_contains: [String!]
  rewardTokens_contains_nocase: [String!]
  rewardTokens_not_contains: [String!]
  rewardTokens_not_contains_nocase: [String!]
  rewardTokens_: ethereumPrimaryRewardToken_filter
  cumulativeUniqueUsers: Int
  cumulativeUniqueUsers_not: Int
  cumulativeUniqueUsers_gt: Int
  cumulativeUniqueUsers_lt: Int
  cumulativeUniqueUsers_gte: Int
  cumulativeUniqueUsers_lte: Int
  cumulativeUniqueUsers_in: [Int!]
  cumulativeUniqueUsers_not_in: [Int!]
  cumulativeUniqueDepositors: Int
  cumulativeUniqueDepositors_not: Int
  cumulativeUniqueDepositors_gt: Int
  cumulativeUniqueDepositors_lt: Int
  cumulativeUniqueDepositors_gte: Int
  cumulativeUniqueDepositors_lte: Int
  cumulativeUniqueDepositors_in: [Int!]
  cumulativeUniqueDepositors_not_in: [Int!]
  cumulativeUniqueBorrowers: Int
  cumulativeUniqueBorrowers_not: Int
  cumulativeUniqueBorrowers_gt: Int
  cumulativeUniqueBorrowers_lt: Int
  cumulativeUniqueBorrowers_gte: Int
  cumulativeUniqueBorrowers_lte: Int
  cumulativeUniqueBorrowers_in: [Int!]
  cumulativeUniqueBorrowers_not_in: [Int!]
  cumulativeUniqueLiquidators: Int
  cumulativeUniqueLiquidators_not: Int
  cumulativeUniqueLiquidators_gt: Int
  cumulativeUniqueLiquidators_lt: Int
  cumulativeUniqueLiquidators_gte: Int
  cumulativeUniqueLiquidators_lte: Int
  cumulativeUniqueLiquidators_in: [Int!]
  cumulativeUniqueLiquidators_not_in: [Int!]
  cumulativeUniqueLiquidatees: Int
  cumulativeUniqueLiquidatees_not: Int
  cumulativeUniqueLiquidatees_gt: Int
  cumulativeUniqueLiquidatees_lt: Int
  cumulativeUniqueLiquidatees_gte: Int
  cumulativeUniqueLiquidatees_lte: Int
  cumulativeUniqueLiquidatees_in: [Int!]
  cumulativeUniqueLiquidatees_not_in: [Int!]
  totalValueLockedUSD: ethereumPrimaryBigDecimal
  totalValueLockedUSD_not: ethereumPrimaryBigDecimal
  totalValueLockedUSD_gt: ethereumPrimaryBigDecimal
  totalValueLockedUSD_lt: ethereumPrimaryBigDecimal
  totalValueLockedUSD_gte: ethereumPrimaryBigDecimal
  totalValueLockedUSD_lte: ethereumPrimaryBigDecimal
  totalValueLockedUSD_in: [ethereumPrimaryBigDecimal!]
  totalValueLockedUSD_not_in: [ethereumPrimaryBigDecimal!]
  protocolControlledValueUSD: ethereumPrimaryBigDecimal
  protocolControlledValueUSD_not: ethereumPrimaryBigDecimal
  protocolControlledValueUSD_gt: ethereumPrimaryBigDecimal
  protocolControlledValueUSD_lt: ethereumPrimaryBigDecimal
  protocolControlledValueUSD_gte: ethereumPrimaryBigDecimal
  protocolControlledValueUSD_lte: ethereumPrimaryBigDecimal
  protocolControlledValueUSD_in: [ethereumPrimaryBigDecimal!]
  protocolControlledValueUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeSupplySideRevenueUSD: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_not: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_gt: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_lt: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_gte: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_lte: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeSupplySideRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeProtocolSideRevenueUSD: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_not: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_gt: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_lt: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_gte: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_lte: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeProtocolSideRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeTotalRevenueUSD: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_not: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_gt: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_lt: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_gte: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_lte: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeTotalRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  fees: [String!]
  fees_not: [String!]
  fees_contains: [String!]
  fees_contains_nocase: [String!]
  fees_not_contains: [String!]
  fees_not_contains_nocase: [String!]
  fees_: ethereumPrimaryFee_filter
  revenueDetail: String
  revenueDetail_not: String
  revenueDetail_gt: String
  revenueDetail_lt: String
  revenueDetail_gte: String
  revenueDetail_lte: String
  revenueDetail_in: [String!]
  revenueDetail_not_in: [String!]
  revenueDetail_contains: String
  revenueDetail_contains_nocase: String
  revenueDetail_not_contains: String
  revenueDetail_not_contains_nocase: String
  revenueDetail_starts_with: String
  revenueDetail_starts_with_nocase: String
  revenueDetail_not_starts_with: String
  revenueDetail_not_starts_with_nocase: String
  revenueDetail_ends_with: String
  revenueDetail_ends_with_nocase: String
  revenueDetail_not_ends_with: String
  revenueDetail_not_ends_with_nocase: String
  revenueDetail_: ethereumPrimaryRevenueDetail_filter
  totalDepositBalanceUSD: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_not: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_gt: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_lt: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_gte: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_lte: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_in: [ethereumPrimaryBigDecimal!]
  totalDepositBalanceUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeDepositUSD: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_not: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_gt: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_lt: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_gte: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_lte: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeDepositUSD_not_in: [ethereumPrimaryBigDecimal!]
  totalBorrowBalanceUSD: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_not: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_gt: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_lt: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_gte: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_lte: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_in: [ethereumPrimaryBigDecimal!]
  totalBorrowBalanceUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeBorrowUSD: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_not: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_gt: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_lt: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_gte: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_lte: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeBorrowUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeLiquidateUSD: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_not: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_gt: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_lt: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_gte: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_lte: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeLiquidateUSD_not_in: [ethereumPrimaryBigDecimal!]
  mintedTokenSupplies: [BigInt!]
  mintedTokenSupplies_not: [BigInt!]
  mintedTokenSupplies_contains: [BigInt!]
  mintedTokenSupplies_contains_nocase: [BigInt!]
  mintedTokenSupplies_not_contains: [BigInt!]
  mintedTokenSupplies_not_contains_nocase: [BigInt!]
  totalPoolCount: Int
  totalPoolCount_not: Int
  totalPoolCount_gt: Int
  totalPoolCount_lt: Int
  totalPoolCount_gte: Int
  totalPoolCount_lte: Int
  totalPoolCount_in: [Int!]
  totalPoolCount_not_in: [Int!]
  openPositionCount: Int
  openPositionCount_not: Int
  openPositionCount_gt: Int
  openPositionCount_lt: Int
  openPositionCount_gte: Int
  openPositionCount_lte: Int
  openPositionCount_in: [Int!]
  openPositionCount_not_in: [Int!]
  cumulativePositionCount: Int
  cumulativePositionCount_not: Int
  cumulativePositionCount_gt: Int
  cumulativePositionCount_lt: Int
  cumulativePositionCount_gte: Int
  cumulativePositionCount_lte: Int
  cumulativePositionCount_in: [Int!]
  cumulativePositionCount_not_in: [Int!]
  transactionCount: Int
  transactionCount_not: Int
  transactionCount_gt: Int
  transactionCount_lt: Int
  transactionCount_gte: Int
  transactionCount_lte: Int
  transactionCount_in: [Int!]
  transactionCount_not_in: [Int!]
  depositCount: Int
  depositCount_not: Int
  depositCount_gt: Int
  depositCount_lt: Int
  depositCount_gte: Int
  depositCount_lte: Int
  depositCount_in: [Int!]
  depositCount_not_in: [Int!]
  withdrawCount: Int
  withdrawCount_not: Int
  withdrawCount_gt: Int
  withdrawCount_lt: Int
  withdrawCount_gte: Int
  withdrawCount_lte: Int
  withdrawCount_in: [Int!]
  withdrawCount_not_in: [Int!]
  borrowCount: Int
  borrowCount_not: Int
  borrowCount_gt: Int
  borrowCount_lt: Int
  borrowCount_gte: Int
  borrowCount_lte: Int
  borrowCount_in: [Int!]
  borrowCount_not_in: [Int!]
  repayCount: Int
  repayCount_not: Int
  repayCount_gt: Int
  repayCount_lt: Int
  repayCount_gte: Int
  repayCount_lte: Int
  repayCount_in: [Int!]
  repayCount_not_in: [Int!]
  liquidationCount: Int
  liquidationCount_not: Int
  liquidationCount_gt: Int
  liquidationCount_lt: Int
  liquidationCount_gte: Int
  liquidationCount_lte: Int
  liquidationCount_in: [Int!]
  liquidationCount_not_in: [Int!]
  transferCount: Int
  transferCount_not: Int
  transferCount_gt: Int
  transferCount_lt: Int
  transferCount_gte: Int
  transferCount_lte: Int
  transferCount_in: [Int!]
  transferCount_not_in: [Int!]
  flashloanCount: Int
  flashloanCount_not: Int
  flashloanCount_gt: Int
  flashloanCount_lt: Int
  flashloanCount_gte: Int
  flashloanCount_lte: Int
  flashloanCount_in: [Int!]
  flashloanCount_not_in: [Int!]
  rewardTokenEmissionsAmount: [BigInt!]
  rewardTokenEmissionsAmount_not: [BigInt!]
  rewardTokenEmissionsAmount_contains: [BigInt!]
  rewardTokenEmissionsAmount_contains_nocase: [BigInt!]
  rewardTokenEmissionsAmount_not_contains: [BigInt!]
  rewardTokenEmissionsAmount_not_contains_nocase: [BigInt!]
  rewardTokenEmissionsUSD: [ethereumPrimaryBigDecimal!]
  rewardTokenEmissionsUSD_not: [ethereumPrimaryBigDecimal!]
  rewardTokenEmissionsUSD_contains: [ethereumPrimaryBigDecimal!]
  rewardTokenEmissionsUSD_contains_nocase: [ethereumPrimaryBigDecimal!]
  rewardTokenEmissionsUSD_not_contains: [ethereumPrimaryBigDecimal!]
  rewardTokenEmissionsUSD_not_contains_nocase: [ethereumPrimaryBigDecimal!]
  dailyUsageMetrics_: ethereumPrimaryUsageMetricsDailySnapshot_filter
  hourlyUsageMetrics_: ethereumPrimaryUsageMetricsHourlySnapshot_filter
  financialMetrics_: ethereumPrimaryFinancialsDailySnapshot_filter
  markets_: ethereumPrimaryMarket_filter
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryLendingProtocol_filter]
  or: [ethereumPrimaryLendingProtocol_filter]
}

enum ethereumPrimaryLendingProtocol_orderBy {
  id
  protocol
  name
  slug
  schemaVersion
  subgraphVersion
  methodologyVersion
  network
  type
  lendingType
  lenderPermissionType
  borrowerPermissionType
  poolCreatorPermissionType
  riskType
  collateralizationType
  mintedTokens
  rewardTokens
  cumulativeUniqueUsers
  cumulativeUniqueDepositors
  cumulativeUniqueBorrowers
  cumulativeUniqueLiquidators
  cumulativeUniqueLiquidatees
  totalValueLockedUSD
  protocolControlledValueUSD
  cumulativeSupplySideRevenueUSD
  cumulativeProtocolSideRevenueUSD
  cumulativeTotalRevenueUSD
  fees
  revenueDetail
  revenueDetail__id
  totalDepositBalanceUSD
  cumulativeDepositUSD
  totalBorrowBalanceUSD
  cumulativeBorrowUSD
  cumulativeLiquidateUSD
  mintedTokenSupplies
  totalPoolCount
  openPositionCount
  cumulativePositionCount
  transactionCount
  depositCount
  withdrawCount
  borrowCount
  repayCount
  liquidationCount
  transferCount
  flashloanCount
  rewardTokenEmissionsAmount
  rewardTokenEmissionsUSD
  dailyUsageMetrics
  hourlyUsageMetrics
  financialMetrics
  markets
}

enum ethereumPrimaryLendingType {
  """ Collateralized Debt Position (CDP) protocols have singular isolated positions created by users. We aggregate them to give a single view of a market 
  """
  CDP
  """ Pooled protocols pool all users assets into a single market """
  POOLED
}

type ethereumPrimaryLiquidate implements ethereumPrimaryEvent {
  """ { Transaction hash }{ Log index } """
  id: ethereumPrimaryBytes!
  """ Transaction hash of the transaction that emitted this event """
  hash: ethereumPrimaryBytes!
  """ Nonce of the transaction that emitted this event """
  nonce: BigInt!
  """ Event log index. For transactions that don't emit event, create arbitrary index starting from 0 
  """
  logIndex: Int!
  """ Price of gas in this transaction """
  gasPrice: BigInt
  """ Gas used in this transaction. (Optional because not every chain will support this) 
  """
  gasUsed: BigInt
  """ Gas limit of this transaction. e.g. the amount of gas the sender will pay 
  """
  gasLimit: BigInt
  """ Block number of this event """
  blockNumber: BigInt!
  """ Timestamp of this event """
  timestamp: BigInt!
  """ Account that carried out the liquidation """
  liquidator: ethereumPrimaryAccount!
  """ Account that got liquidated """
  liquidatee: ethereumPrimaryAccount!
  """ The market of the collateral being used """
  market: ethereumPrimaryMarket!
  """ The user position changed by this event """
  positions(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryPosition_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryPosition_filter): [ethereumPrimaryPosition!]!
  """ Asset repaid (borrowed) """
  asset: ethereumPrimaryToken!
  """ Amount of collateral liquidated in native units """
  amount: BigInt!
  """ Amount of collateral liquidated in USD """
  amountUSD: ethereumPrimaryBigDecimal!
  """ Amount of profit from liquidation in USD """
  profitUSD: ethereumPrimaryBigDecimal!
}

input ethereumPrimaryLiquidate_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  hash: ethereumPrimaryBytes
  hash_not: ethereumPrimaryBytes
  hash_gt: ethereumPrimaryBytes
  hash_lt: ethereumPrimaryBytes
  hash_gte: ethereumPrimaryBytes
  hash_lte: ethereumPrimaryBytes
  hash_in: [ethereumPrimaryBytes!]
  hash_not_in: [ethereumPrimaryBytes!]
  hash_contains: ethereumPrimaryBytes
  hash_not_contains: ethereumPrimaryBytes
  nonce: BigInt
  nonce_not: BigInt
  nonce_gt: BigInt
  nonce_lt: BigInt
  nonce_gte: BigInt
  nonce_lte: BigInt
  nonce_in: [BigInt!]
  nonce_not_in: [BigInt!]
  logIndex: Int
  logIndex_not: Int
  logIndex_gt: Int
  logIndex_lt: Int
  logIndex_gte: Int
  logIndex_lte: Int
  logIndex_in: [Int!]
  logIndex_not_in: [Int!]
  gasPrice: BigInt
  gasPrice_not: BigInt
  gasPrice_gt: BigInt
  gasPrice_lt: BigInt
  gasPrice_gte: BigInt
  gasPrice_lte: BigInt
  gasPrice_in: [BigInt!]
  gasPrice_not_in: [BigInt!]
  gasUsed: BigInt
  gasUsed_not: BigInt
  gasUsed_gt: BigInt
  gasUsed_lt: BigInt
  gasUsed_gte: BigInt
  gasUsed_lte: BigInt
  gasUsed_in: [BigInt!]
  gasUsed_not_in: [BigInt!]
  gasLimit: BigInt
  gasLimit_not: BigInt
  gasLimit_gt: BigInt
  gasLimit_lt: BigInt
  gasLimit_gte: BigInt
  gasLimit_lte: BigInt
  gasLimit_in: [BigInt!]
  gasLimit_not_in: [BigInt!]
  blockNumber: BigInt
  blockNumber_not: BigInt
  blockNumber_gt: BigInt
  blockNumber_lt: BigInt
  blockNumber_gte: BigInt
  blockNumber_lte: BigInt
  blockNumber_in: [BigInt!]
  blockNumber_not_in: [BigInt!]
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  liquidator: String
  liquidator_not: String
  liquidator_gt: String
  liquidator_lt: String
  liquidator_gte: String
  liquidator_lte: String
  liquidator_in: [String!]
  liquidator_not_in: [String!]
  liquidator_contains: String
  liquidator_contains_nocase: String
  liquidator_not_contains: String
  liquidator_not_contains_nocase: String
  liquidator_starts_with: String
  liquidator_starts_with_nocase: String
  liquidator_not_starts_with: String
  liquidator_not_starts_with_nocase: String
  liquidator_ends_with: String
  liquidator_ends_with_nocase: String
  liquidator_not_ends_with: String
  liquidator_not_ends_with_nocase: String
  liquidator_: ethereumPrimaryAccount_filter
  liquidatee: String
  liquidatee_not: String
  liquidatee_gt: String
  liquidatee_lt: String
  liquidatee_gte: String
  liquidatee_lte: String
  liquidatee_in: [String!]
  liquidatee_not_in: [String!]
  liquidatee_contains: String
  liquidatee_contains_nocase: String
  liquidatee_not_contains: String
  liquidatee_not_contains_nocase: String
  liquidatee_starts_with: String
  liquidatee_starts_with_nocase: String
  liquidatee_not_starts_with: String
  liquidatee_not_starts_with_nocase: String
  liquidatee_ends_with: String
  liquidatee_ends_with_nocase: String
  liquidatee_not_ends_with: String
  liquidatee_not_ends_with_nocase: String
  liquidatee_: ethereumPrimaryAccount_filter
  market: String
  market_not: String
  market_gt: String
  market_lt: String
  market_gte: String
  market_lte: String
  market_in: [String!]
  market_not_in: [String!]
  market_contains: String
  market_contains_nocase: String
  market_not_contains: String
  market_not_contains_nocase: String
  market_starts_with: String
  market_starts_with_nocase: String
  market_not_starts_with: String
  market_not_starts_with_nocase: String
  market_ends_with: String
  market_ends_with_nocase: String
  market_not_ends_with: String
  market_not_ends_with_nocase: String
  market_: ethereumPrimaryMarket_filter
  positions: [String!]
  positions_not: [String!]
  positions_contains: [String!]
  positions_contains_nocase: [String!]
  positions_not_contains: [String!]
  positions_not_contains_nocase: [String!]
  positions_: ethereumPrimaryPosition_filter
  asset: String
  asset_not: String
  asset_gt: String
  asset_lt: String
  asset_gte: String
  asset_lte: String
  asset_in: [String!]
  asset_not_in: [String!]
  asset_contains: String
  asset_contains_nocase: String
  asset_not_contains: String
  asset_not_contains_nocase: String
  asset_starts_with: String
  asset_starts_with_nocase: String
  asset_not_starts_with: String
  asset_not_starts_with_nocase: String
  asset_ends_with: String
  asset_ends_with_nocase: String
  asset_not_ends_with: String
  asset_not_ends_with_nocase: String
  asset_: ethereumPrimaryToken_filter
  amount: BigInt
  amount_not: BigInt
  amount_gt: BigInt
  amount_lt: BigInt
  amount_gte: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  amount_not_in: [BigInt!]
  amountUSD: ethereumPrimaryBigDecimal
  amountUSD_not: ethereumPrimaryBigDecimal
  amountUSD_gt: ethereumPrimaryBigDecimal
  amountUSD_lt: ethereumPrimaryBigDecimal
  amountUSD_gte: ethereumPrimaryBigDecimal
  amountUSD_lte: ethereumPrimaryBigDecimal
  amountUSD_in: [ethereumPrimaryBigDecimal!]
  amountUSD_not_in: [ethereumPrimaryBigDecimal!]
  profitUSD: ethereumPrimaryBigDecimal
  profitUSD_not: ethereumPrimaryBigDecimal
  profitUSD_gt: ethereumPrimaryBigDecimal
  profitUSD_lt: ethereumPrimaryBigDecimal
  profitUSD_gte: ethereumPrimaryBigDecimal
  profitUSD_lte: ethereumPrimaryBigDecimal
  profitUSD_in: [ethereumPrimaryBigDecimal!]
  profitUSD_not_in: [ethereumPrimaryBigDecimal!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryLiquidate_filter]
  or: [ethereumPrimaryLiquidate_filter]
}

enum ethereumPrimaryLiquidate_orderBy {
  id
  hash
  nonce
  logIndex
  gasPrice
  gasUsed
  gasLimit
  blockNumber
  timestamp
  liquidator
  liquidator__id
  liquidator__positionCount
  liquidator__openPositionCount
  liquidator__closedPositionCount
  liquidator__depositCount
  liquidator__withdrawCount
  liquidator__borrowCount
  liquidator__repayCount
  liquidator__liquidateCount
  liquidator__liquidationCount
  liquidator__transferredCount
  liquidator__receivedCount
  liquidator__flashloanCount
  liquidator__rewardsClaimedUSD
  liquidator___eMode
  liquidatee
  liquidatee__id
  liquidatee__positionCount
  liquidatee__openPositionCount
  liquidatee__closedPositionCount
  liquidatee__depositCount
  liquidatee__withdrawCount
  liquidatee__borrowCount
  liquidatee__repayCount
  liquidatee__liquidateCount
  liquidatee__liquidationCount
  liquidatee__transferredCount
  liquidatee__receivedCount
  liquidatee__flashloanCount
  liquidatee__rewardsClaimedUSD
  liquidatee___eMode
  market
  market__id
  market__name
  market__isActive
  market__canBorrowFrom
  market__canUseAsCollateral
  market__maximumLTV
  market__liquidationThreshold
  market__liquidationPenalty
  market__canIsolate
  market__createdTimestamp
  market__createdBlockNumber
  market__relation
  market__stakedOutputTokenAmount
  market__inputTokenBalance
  market__inputTokenPriceUSD
  market__outputTokenSupply
  market__outputTokenPriceUSD
  market__exchangeRate
  market__reserves
  market__reserveFactor
  market__variableBorrowedTokenBalance
  market__stableBorrowedTokenBalance
  market__indexLastUpdatedTimestamp
  market__supplyIndex
  market__supplyCap
  market__borrowIndex
  market__borrowCap
  market__totalValueLockedUSD
  market__cumulativeSupplySideRevenueUSD
  market__cumulativeProtocolSideRevenueUSD
  market__cumulativeTotalRevenueUSD
  market__totalDepositBalanceUSD
  market__cumulativeDepositUSD
  market__totalBorrowBalanceUSD
  market__cumulativeBorrowUSD
  market__cumulativeLiquidateUSD
  market__cumulativeTransferUSD
  market__cumulativeFlashloanUSD
  market__transactionCount
  market__depositCount
  market__withdrawCount
  market__borrowCount
  market__repayCount
  market__liquidationCount
  market__transferCount
  market__flashloanCount
  market__cumulativeUniqueUsers
  market__cumulativeUniqueDepositors
  market__cumulativeUniqueBorrowers
  market__cumulativeUniqueLiquidators
  market__cumulativeUniqueLiquidatees
  market__cumulativeUniqueTransferrers
  market__cumulativeUniqueFlashloaners
  market__positionCount
  market__openPositionCount
  market__closedPositionCount
  market__lendingPositionCount
  market__borrowingPositionCount
  market___baseTrackingBorrowSpeed
  market___baseTrackingSupplySpeed
  market___lastRewardsUpdated
  market___liquidationProtocolFee
  market___siloedBorrowing
  positions
  asset
  asset__id
  asset__name
  asset__symbol
  asset__decimals
  asset__lastPriceUSD
  asset__lastPriceBlockNumber
  asset__type
  asset___iavsTokenType
  amount
  amountUSD
  profitUSD
}

"""
A market is defined by the input token.
At a minimum that means being able to deposit/withdraw that token.
e.g. there may be related markets as they only act as collateral for other markets.

"""
type ethereumPrimaryMarket {
  """ Smart contract address of the market """
  id: ethereumPrimaryBytes!
  """ The protocol this pool belongs to """
  protocol: ethereumPrimaryLendingProtocol!
  """ Name of market """
  name: String
  """ Is this market active or is it frozen """
  isActive: Boolean!
  """ Can you borrow from this market """
  canBorrowFrom: Boolean!
  """ Can you use the output token as collateral """
  canUseAsCollateral: Boolean!
  """ Maximum loan-to-value ratio as a percentage value (e.g. 75% for DAI in Aave) 
  """
  maximumLTV: ethereumPrimaryBigDecimal!
  """ Liquidation threshold as a percentage value (e.g. 80% for DAI in Aave). When it is reached, the position is defined as undercollateralised and could be liquidated 
  """
  liquidationThreshold: ethereumPrimaryBigDecimal!
  """ Liquidation penalty (or the liquidation bonus for liquidators) as a percentage value. It is the penalty/bonus price on the collateral when liquidators purchase it as part of the liquidation of a loan that has passed the liquidation threshold 
  """
  liquidationPenalty: ethereumPrimaryBigDecimal!
  """ Can the user choose to isolate assets in this market. e.g. only this market's collateral can be used for a borrow in Aave V3 
  """
  canIsolate: Boolean!
  """ Creation timestamp """
  createdTimestamp: BigInt!
  """ Creation block number """
  createdBlockNumber: BigInt!
  """ Details about the price oracle used to get this token's price """
  oracle: ethereumPrimaryOracle
  """ A unique identifier that can relate multiple markets. e.g. a common address that is the same for each related market. This is useful for markets with multiple input tokens 
  """
  relation: ethereumPrimaryBytes
  """ Additional tokens that are given as reward for position in a protocol, usually in liquidity mining programs. e.g. SUSHI in the Onsen program, MATIC for Aave Polygon 
  """
  rewardTokens(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryRewardToken_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryRewardToken_filter): [ethereumPrimaryRewardToken!]
  """ Per-block reward token emission as of the current block normalized to a day, in token's native amount. This should be ideally calculated as the theoretical rate instead of the realized amount. 
  """
  rewardTokenEmissionsAmount: [BigInt!]
  """ Per-block reward token emission as of the current block normalized to a day, in USD value. This should be ideally calculated as the theoretical rate instead of the realized amount. 
  """
  rewardTokenEmissionsUSD: [ethereumPrimaryBigDecimal!]
  """ Total supply of output tokens that are staked. Used to calculate reward APY. 
  """
  stakedOutputTokenAmount: BigInt
  """ Token that need to be deposited in this market to take a position in protocol (should be alphabetized) 
  """
  inputToken: ethereumPrimaryToken!
  """ Amount of input token in the market (same order as inputTokens) """
  inputTokenBalance: BigInt!
  """ Prices in USD of the input token (same order as inputTokens) """
  inputTokenPriceUSD: ethereumPrimaryBigDecimal!
  """ Tokens that are minted to track ownership of position in protocol (e.g. aToken, cToken). Leave as null if doesn't exist (should be alphabetized) 
  """
  outputToken: ethereumPrimaryToken
  """ Total supply of output token (same order as outputTokens) """
  outputTokenSupply: BigInt
  """ Prices in USD of the output token (same order as outputTokens) """
  outputTokenPriceUSD: ethereumPrimaryBigDecimal
  """ Amount of input token per full share of output token. Only applies when the output token exists (note this is a ratio and not a percentage value, i.e. 1.05 instead of 105%) 
  """
  exchangeRate: ethereumPrimaryBigDecimal
  """ All interest rates for this input token. Should be in APR format """
  rates(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryInterestRate_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryInterestRate_filter): [ethereumPrimaryInterestRate!]
  """ Total amount of reserves (in USD) """
  reserves: ethereumPrimaryBigDecimal
  """ The amount of revenue that is converted to reserves at the current time. 20% reserve factor should be in format 0.20 
  """
  reserveFactor: ethereumPrimaryBigDecimal
  """ The token that can be borrowed (e.g. inputToken in POOLED and generally a stable in CDPs) 
  """
  borrowedToken: ethereumPrimaryToken
  """ Amount of input tokens borrowed in this market using variable interest rates (in native terms) 
  """
  variableBorrowedTokenBalance: BigInt
  """ Amount of input tokens borrowed in this market using stable interest rates (in native terms) 
  """
  stableBorrowedTokenBalance: BigInt
  """ Last updated timestamp of supply/borrow index. """
  indexLastUpdatedTimestamp: BigInt
  """ Index used by the protocol to calculate interest generated on the supply token (ie, liquidityIndex in Aave)
  """
  supplyIndex: BigInt
  """ Allowed limit to how much of the underlying asset can be supplied to this market. 
  """
  supplyCap: BigInt
  """ Index used by the protocol to calculate the interest paid on the borrowed token (ie, variableBorrowIndex in Aave))
  """
  borrowIndex: BigInt
  """ Allowed limit for how much of the underlying asset can be borrowed from this market. 
  """
  borrowCap: BigInt
  """ Current TVL (Total Value Locked) of this market """
  totalValueLockedUSD: ethereumPrimaryBigDecimal!
  """ All revenue generated by the market, accrued to the supply side. """
  cumulativeSupplySideRevenueUSD: ethereumPrimaryBigDecimal!
  """ All revenue generated by the market, accrued to the protocol. """
  cumulativeProtocolSideRevenueUSD: ethereumPrimaryBigDecimal!
  """ All revenue generated by the market. """
  cumulativeTotalRevenueUSD: ethereumPrimaryBigDecimal!
  """ Details of revenue sources and amounts """
  revenueDetail: ethereumPrimaryRevenueDetail
  """ Current balance of all deposited assets (not historical cumulative), in USD 
  """
  totalDepositBalanceUSD: ethereumPrimaryBigDecimal!
  """ Sum of all historical deposits in USD (only considers deposits and not withdrawals) 
  """
  cumulativeDepositUSD: ethereumPrimaryBigDecimal!
  """ Current balance of all borrowed/minted assets (not historical cumulative), in USD 
  """
  totalBorrowBalanceUSD: ethereumPrimaryBigDecimal!
  """ Sum of all historical borrows/mints in USD (i.e. total loan origination) 
  """
  cumulativeBorrowUSD: ethereumPrimaryBigDecimal!
  """ Sum of all historical liquidations in USD """
  cumulativeLiquidateUSD: ethereumPrimaryBigDecimal!
  """ Sum of all historical transfers in USD """
  cumulativeTransferUSD: ethereumPrimaryBigDecimal!
  """ Sum of all historical flashloans in USD """
  cumulativeFlashloanUSD: ethereumPrimaryBigDecimal!
  """ Total number of transactions """
  transactionCount: Int!
  """ Total number of deposits """
  depositCount: Int!
  """ Total number of withdrawals """
  withdrawCount: Int!
  """ Total number of borrows """
  borrowCount: Int!
  """ Total number of repayments """
  repayCount: Int!
  """ Total number of liquidations """
  liquidationCount: Int!
  """ Total number of transfers """
  transferCount: Int!
  """ Total number of flashloans """
  flashloanCount: Int!
  """ Number of cumulative unique users. e.g. accounts that spent gas to interact with this market 
  """
  cumulativeUniqueUsers: Int!
  """ Number of cumulative depositors """
  cumulativeUniqueDepositors: Int!
  """ Number of cumulative borrowers """
  cumulativeUniqueBorrowers: Int!
  """ Number of cumulative liquidators (accounts that performed liquidation) 
  """
  cumulativeUniqueLiquidators: Int!
  """ Number of cumulative liquidatees (accounts that got liquidated) """
  cumulativeUniqueLiquidatees: Int!
  """ Number of cumulative accounts that transferred positions (generally in the form of outputToken transfer) 
  """
  cumulativeUniqueTransferrers: Int!
  """ Number of cumulative accounts that performed flashloans """
  cumulativeUniqueFlashloaners: Int!
  """ All positions in this market """
  positions(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryPosition_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryPosition_filter): [ethereumPrimaryPosition!]!
  """ Number of positions in this market """
  positionCount: Int!
  """ Number of open positions in this market """
  openPositionCount: Int!
  """ Number of closed positions in this market """
  closedPositionCount: Int!
  """ Number of lending positions in this market. Note: this is cumulative and strictly increasing 
  """
  lendingPositionCount: Int!
  """ Number of borrowing positions in this market. Note: this is cumulative and strictly increasing 
  """
  borrowingPositionCount: Int!
  """ Market daily snapshots """
  dailySnapshots(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryMarketDailySnapshot_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryMarketDailySnapshot_filter): [ethereumPrimaryMarketDailySnapshot!]!
  """ Market hourly snapshots """
  hourlySnapshots(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryMarketHourlySnapshot_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryMarketHourlySnapshot_filter): [ethereumPrimaryMarketHourlySnapshot!]!
  """ All deposits made to this market """
  deposits(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryDeposit_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryDeposit_filter): [ethereumPrimaryDeposit!]!
  """ All withdrawals made from this market """
  withdraws(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryWithdraw_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryWithdraw_filter): [ethereumPrimaryWithdraw!]!
  """ All borrows from this market """
  borrows(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryBorrow_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryBorrow_filter): [ethereumPrimaryBorrow!]!
  """ All repayments to this market """
  repays(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryRepay_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryRepay_filter): [ethereumPrimaryRepay!]!
  """ All liquidations made to this market """
  liquidates(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryLiquidate_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryLiquidate_filter): [ethereumPrimaryLiquidate!]!
  """ All transfers made in this market """
  transfers(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryTransfer_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryTransfer_filter): [ethereumPrimaryTransfer!]!
  """ All flashloans made in this market"""
  flashloans(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryFlashloan_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryFlashloan_filter): [ethereumPrimaryFlashloan!]!
  """ Rewards borrow speed for this market"""
  _baseTrackingBorrowSpeed: BigInt
  """ Rewards supply speed for this market"""
  _baseTrackingSupplySpeed: BigInt
  """ The variable debt token address correlated to the reserve asset """
  _vToken: ethereumPrimaryToken
  """ The stable debt token address correlated to the reserve asset """
  _sToken: ethereumPrimaryToken
  """ The state of the protocol prior to being paused (isActive / canUseAsCollateral / canBorrowFrom) 
  """
  _prePauseState: [Boolean!]
  """ Aux: Timestamp of the last time rewards were calculated for this market. 
  """
  _lastRewardsUpdated: BigInt
  """ proportion of liquidation bonus (liquidation penalty) going to the protocol 
  """
  _liquidationProtocolFee: ethereumPrimaryBigDecimal
  _siloedBorrowing: Boolean
}

type ethereumPrimaryMarketDailySnapshot {
  """ { Smart contract address of the market }{ # of days since Unix epoch time } 
  """
  id: ethereumPrimaryBytes!
  """ Number of days since Unix epoch time """
  days: Int!
  """ The protocol this snapshot belongs to """
  protocol: ethereumPrimaryLendingProtocol!
  """ The pool this snapshot belongs to """
  market: ethereumPrimaryMarket!
  """ Block number of this snapshot """
  blockNumber: BigInt!
  """ Timestamp of this snapshot """
  timestamp: BigInt!
  """ A unique identifier that can relate multiple markets together. e.g. a common address that they all share. This is useful for markets with multiple input tokens 
  """
  relation: ethereumPrimaryBytes
  """ Additional tokens that are given as reward for position in a protocol, usually in liquidity mining programs. e.g. SUSHI in the Onsen program, MATIC for Aave Polygon 
  """
  rewardTokens(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryRewardToken_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryRewardToken_filter): [ethereumPrimaryRewardToken!]
  """ Per-block reward token emission as of the current block normalized to a day, in token's native amount. This should be ideally calculated as the theoretical rate instead of the realized amount. 
  """
  rewardTokenEmissionsAmount: [BigInt!]
  """ Per-block reward token emission as of the current block normalized to a day, in USD value. This should be ideally calculated as the theoretical rate instead of the realized amount. 
  """
  rewardTokenEmissionsUSD: [ethereumPrimaryBigDecimal!]
  """ Total supply of output tokens that are staked. Used to calculate reward APY. 
  """
  stakedOutputTokenAmount: BigInt
  """ Amount of input token in the market (same order as inputTokens) """
  inputTokenBalance: BigInt!
  """ Prices in USD of the input token (same order as inputTokens) """
  inputTokenPriceUSD: ethereumPrimaryBigDecimal!
  """ Total supply of output token (same order as outputTokens) """
  outputTokenSupply: BigInt
  """ Prices in USD of the output token (same order as outputTokens) """
  outputTokenPriceUSD: ethereumPrimaryBigDecimal
  """ Amount of input token per full share of output token. Only applies when the output token exists (note this is a ratio and not a percentage value, i.e. 1.05 instead of 105%) 
  """
  exchangeRate: ethereumPrimaryBigDecimal
  """ All interest rates for this input token. Should be in APR format """
  rates(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryInterestRate_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryInterestRate_filter): [ethereumPrimaryInterestRate!]
  """ Total amount of reserves (in USD) """
  reserves: ethereumPrimaryBigDecimal
  """ The amount of revenue that is converted to reserves at the current time. 20% reserve factor should be in format 0.20 
  """
  reserveFactor: ethereumPrimaryBigDecimal
  """ Amount of input tokens borrowed in this market using variable interest rates (in native terms) 
  """
  variableBorrowedTokenBalance: BigInt
  """ Amount of input tokens borrowed in this market using stable interest rates (in native terms) 
  """
  stableBorrowedTokenBalance: BigInt
  """ Allowed limit to how much of the underlying asset can be supplied to this market. 
  """
  supplyCap: BigInt
  """ Allowed limit for how much of the underlying asset can be borrowed from this market. 
  """
  borrowCap: BigInt
  """ Current TVL (Total Value Locked) of this market """
  totalValueLockedUSD: ethereumPrimaryBigDecimal!
  """ All revenue generated by the market, accrued to the supply side. """
  cumulativeSupplySideRevenueUSD: ethereumPrimaryBigDecimal!
  """ Daily revenue generated by the market, accrued to the supply side. """
  dailySupplySideRevenueUSD: ethereumPrimaryBigDecimal!
  """ All revenue generated by the market, accrued to the protocol. """
  cumulativeProtocolSideRevenueUSD: ethereumPrimaryBigDecimal!
  """ Daily revenue generated by the market, accrued to the protocol. """
  dailyProtocolSideRevenueUSD: ethereumPrimaryBigDecimal!
  """ All revenue generated by the market. """
  cumulativeTotalRevenueUSD: ethereumPrimaryBigDecimal!
  """ Daily revenue generated by the market. """
  dailyTotalRevenueUSD: ethereumPrimaryBigDecimal!
  """ Details of revenue sources and amounts """
  revenueDetail: ethereumPrimaryRevenueDetail
  """ Current balance of all deposited assets (not historical cumulative), in USD. Same as pool TVL. 
  """
  totalDepositBalanceUSD: ethereumPrimaryBigDecimal!
  """ Sum of all deposits made on a given day, in USD """
  dailyDepositUSD: ethereumPrimaryBigDecimal!
  """ Sum of all the deposits on a given day, in native units """
  dailyNativeDeposit: BigInt!
  """ Sum of all historical deposits in USD (only considers deposits and not withdrawals) 
  """
  cumulativeDepositUSD: ethereumPrimaryBigDecimal!
  """ Current balance of all borrowed/minted assets (not historical cumulative), in USD. 
  """
  totalBorrowBalanceUSD: ethereumPrimaryBigDecimal!
  """ Sum of all borrows/mints made on a given day, in USD """
  dailyBorrowUSD: ethereumPrimaryBigDecimal!
  """ Sum of all the borrows on a given day, in native units """
  dailyNativeBorrow: BigInt!
  """ Sum of all historical borrows/mints in USD (i.e. total loan origination) 
  """
  cumulativeBorrowUSD: ethereumPrimaryBigDecimal!
  """ Total assets liquidated on a given day, in USD. """
  dailyLiquidateUSD: ethereumPrimaryBigDecimal!
  """ Total assets liquidated on a given day, in native units. """
  dailyNativeLiquidate: BigInt!
  """ Sum of all historical liquidations in USD """
  cumulativeLiquidateUSD: ethereumPrimaryBigDecimal!
  """ Total assets withdrawn on a given day, in USD. """
  dailyWithdrawUSD: ethereumPrimaryBigDecimal!
  """ Total assets withdrawn on a given day, in native units. """
  dailyNativeWithdraw: BigInt!
  """ Total assets repaid on a given day, in USD. """
  dailyRepayUSD: ethereumPrimaryBigDecimal!
  """ Total assets repaid on a given day, in native units. """
  dailyNativeRepay: BigInt!
  """ Total assets transferred on a given day, in USD. """
  dailyTransferUSD: ethereumPrimaryBigDecimal!
  """ Total assets transferred on a given day, in native units. """
  dailyNativeTransfer: BigInt!
  """ Sum of all historical transfers in USD """
  cumulativeTransferUSD: ethereumPrimaryBigDecimal!
  """ Total assets flashloaned on a given day, in USD. """
  dailyFlashloanUSD: ethereumPrimaryBigDecimal!
  """ Total assets flashloaned on a given day, in native units. """
  dailyNativeFlashloan: BigInt!
  """ Sum of all historical flashloans in USD """
  cumulativeFlashloanUSD: ethereumPrimaryBigDecimal!
  """ Number of unique daily active users. e.g. accounts that spent gas to interact with this market 
  """
  dailyActiveUsers: Int!
  """ Number of unique daily depositors """
  dailyActiveDepositors: Int!
  """ Number of unique daily borrowers """
  dailyActiveBorrowers: Int!
  """ Number of unique daily liquidators (accounts that performed liquidation) 
  """
  dailyActiveLiquidators: Int!
  """ Number of unique daily liquidatees (accounts that got liquidated) """
  dailyActiveLiquidatees: Int!
  """ Number of unique daily transferrers (the sender in a Transfer) """
  dailyActiveTransferrers: Int!
  """ Number of unique daily accounts that executed a flash loan"""
  dailyActiveFlashloaners: Int!
  """ Total number of deposits in a day """
  dailyDepositCount: Int!
  """ Total number of withdrawals in a day """
  dailyWithdrawCount: Int!
  """ Total number of borrows/mints in a day """
  dailyBorrowCount: Int!
  """ Total number of repayments/burns in a day """
  dailyRepayCount: Int!
  """ Total number of liquidations in a day """
  dailyLiquidateCount: Int!
  """ Total number of transfers in a day """
  dailyTransferCount: Int!
  """ Total number of flashloans in a day """
  dailyFlashloanCount: Int!
  """ Number of positions in this market """
  positionCount: Int!
  """ Number of open positions in this market """
  openPositionCount: Int!
  """ Number of closed positions in this market """
  closedPositionCount: Int!
  """ Number of lending positions in this market. Note: this is cumulative and strictly increasing 
  """
  lendingPositionCount: Int!
  """ Total number of lending positions touched in a day. This includes opening, closing, and modifying positions. 
  """
  dailyActiveLendingPositionCount: Int!
  """ Number of borrowing positions in this market. Note: this is cumulative and strictly increasing 
  """
  borrowingPositionCount: Int!
  """ Total number of borrow positions touched in a day. This includes opening, closing, and modifying positions. 
  """
  dailyActiveBorrowingPositionCount: Int!
}

input ethereumPrimaryMarketDailySnapshot_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  days: Int
  days_not: Int
  days_gt: Int
  days_lt: Int
  days_gte: Int
  days_lte: Int
  days_in: [Int!]
  days_not_in: [Int!]
  protocol: String
  protocol_not: String
  protocol_gt: String
  protocol_lt: String
  protocol_gte: String
  protocol_lte: String
  protocol_in: [String!]
  protocol_not_in: [String!]
  protocol_contains: String
  protocol_contains_nocase: String
  protocol_not_contains: String
  protocol_not_contains_nocase: String
  protocol_starts_with: String
  protocol_starts_with_nocase: String
  protocol_not_starts_with: String
  protocol_not_starts_with_nocase: String
  protocol_ends_with: String
  protocol_ends_with_nocase: String
  protocol_not_ends_with: String
  protocol_not_ends_with_nocase: String
  protocol_: ethereumPrimaryLendingProtocol_filter
  market: String
  market_not: String
  market_gt: String
  market_lt: String
  market_gte: String
  market_lte: String
  market_in: [String!]
  market_not_in: [String!]
  market_contains: String
  market_contains_nocase: String
  market_not_contains: String
  market_not_contains_nocase: String
  market_starts_with: String
  market_starts_with_nocase: String
  market_not_starts_with: String
  market_not_starts_with_nocase: String
  market_ends_with: String
  market_ends_with_nocase: String
  market_not_ends_with: String
  market_not_ends_with_nocase: String
  market_: ethereumPrimaryMarket_filter
  blockNumber: BigInt
  blockNumber_not: BigInt
  blockNumber_gt: BigInt
  blockNumber_lt: BigInt
  blockNumber_gte: BigInt
  blockNumber_lte: BigInt
  blockNumber_in: [BigInt!]
  blockNumber_not_in: [BigInt!]
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  relation: ethereumPrimaryBytes
  relation_not: ethereumPrimaryBytes
  relation_gt: ethereumPrimaryBytes
  relation_lt: ethereumPrimaryBytes
  relation_gte: ethereumPrimaryBytes
  relation_lte: ethereumPrimaryBytes
  relation_in: [ethereumPrimaryBytes!]
  relation_not_in: [ethereumPrimaryBytes!]
  relation_contains: ethereumPrimaryBytes
  relation_not_contains: ethereumPrimaryBytes
  rewardTokens: [String!]
  rewardTokens_not: [String!]
  rewardTokens_contains: [String!]
  rewardTokens_contains_nocase: [String!]
  rewardTokens_not_contains: [String!]
  rewardTokens_not_contains_nocase: [String!]
  rewardTokens_: ethereumPrimaryRewardToken_filter
  rewardTokenEmissionsAmount: [BigInt!]
  rewardTokenEmissionsAmount_not: [BigInt!]
  rewardTokenEmissionsAmount_contains: [BigInt!]
  rewardTokenEmissionsAmount_contains_nocase: [BigInt!]
  rewardTokenEmissionsAmount_not_contains: [BigInt!]
  rewardTokenEmissionsAmount_not_contains_nocase: [BigInt!]
  rewardTokenEmissionsUSD: [ethereumPrimaryBigDecimal!]
  rewardTokenEmissionsUSD_not: [ethereumPrimaryBigDecimal!]
  rewardTokenEmissionsUSD_contains: [ethereumPrimaryBigDecimal!]
  rewardTokenEmissionsUSD_contains_nocase: [ethereumPrimaryBigDecimal!]
  rewardTokenEmissionsUSD_not_contains: [ethereumPrimaryBigDecimal!]
  rewardTokenEmissionsUSD_not_contains_nocase: [ethereumPrimaryBigDecimal!]
  stakedOutputTokenAmount: BigInt
  stakedOutputTokenAmount_not: BigInt
  stakedOutputTokenAmount_gt: BigInt
  stakedOutputTokenAmount_lt: BigInt
  stakedOutputTokenAmount_gte: BigInt
  stakedOutputTokenAmount_lte: BigInt
  stakedOutputTokenAmount_in: [BigInt!]
  stakedOutputTokenAmount_not_in: [BigInt!]
  inputTokenBalance: BigInt
  inputTokenBalance_not: BigInt
  inputTokenBalance_gt: BigInt
  inputTokenBalance_lt: BigInt
  inputTokenBalance_gte: BigInt
  inputTokenBalance_lte: BigInt
  inputTokenBalance_in: [BigInt!]
  inputTokenBalance_not_in: [BigInt!]
  inputTokenPriceUSD: ethereumPrimaryBigDecimal
  inputTokenPriceUSD_not: ethereumPrimaryBigDecimal
  inputTokenPriceUSD_gt: ethereumPrimaryBigDecimal
  inputTokenPriceUSD_lt: ethereumPrimaryBigDecimal
  inputTokenPriceUSD_gte: ethereumPrimaryBigDecimal
  inputTokenPriceUSD_lte: ethereumPrimaryBigDecimal
  inputTokenPriceUSD_in: [ethereumPrimaryBigDecimal!]
  inputTokenPriceUSD_not_in: [ethereumPrimaryBigDecimal!]
  outputTokenSupply: BigInt
  outputTokenSupply_not: BigInt
  outputTokenSupply_gt: BigInt
  outputTokenSupply_lt: BigInt
  outputTokenSupply_gte: BigInt
  outputTokenSupply_lte: BigInt
  outputTokenSupply_in: [BigInt!]
  outputTokenSupply_not_in: [BigInt!]
  outputTokenPriceUSD: ethereumPrimaryBigDecimal
  outputTokenPriceUSD_not: ethereumPrimaryBigDecimal
  outputTokenPriceUSD_gt: ethereumPrimaryBigDecimal
  outputTokenPriceUSD_lt: ethereumPrimaryBigDecimal
  outputTokenPriceUSD_gte: ethereumPrimaryBigDecimal
  outputTokenPriceUSD_lte: ethereumPrimaryBigDecimal
  outputTokenPriceUSD_in: [ethereumPrimaryBigDecimal!]
  outputTokenPriceUSD_not_in: [ethereumPrimaryBigDecimal!]
  exchangeRate: ethereumPrimaryBigDecimal
  exchangeRate_not: ethereumPrimaryBigDecimal
  exchangeRate_gt: ethereumPrimaryBigDecimal
  exchangeRate_lt: ethereumPrimaryBigDecimal
  exchangeRate_gte: ethereumPrimaryBigDecimal
  exchangeRate_lte: ethereumPrimaryBigDecimal
  exchangeRate_in: [ethereumPrimaryBigDecimal!]
  exchangeRate_not_in: [ethereumPrimaryBigDecimal!]
  rates: [String!]
  rates_not: [String!]
  rates_contains: [String!]
  rates_contains_nocase: [String!]
  rates_not_contains: [String!]
  rates_not_contains_nocase: [String!]
  rates_: ethereumPrimaryInterestRate_filter
  reserves: ethereumPrimaryBigDecimal
  reserves_not: ethereumPrimaryBigDecimal
  reserves_gt: ethereumPrimaryBigDecimal
  reserves_lt: ethereumPrimaryBigDecimal
  reserves_gte: ethereumPrimaryBigDecimal
  reserves_lte: ethereumPrimaryBigDecimal
  reserves_in: [ethereumPrimaryBigDecimal!]
  reserves_not_in: [ethereumPrimaryBigDecimal!]
  reserveFactor: ethereumPrimaryBigDecimal
  reserveFactor_not: ethereumPrimaryBigDecimal
  reserveFactor_gt: ethereumPrimaryBigDecimal
  reserveFactor_lt: ethereumPrimaryBigDecimal
  reserveFactor_gte: ethereumPrimaryBigDecimal
  reserveFactor_lte: ethereumPrimaryBigDecimal
  reserveFactor_in: [ethereumPrimaryBigDecimal!]
  reserveFactor_not_in: [ethereumPrimaryBigDecimal!]
  variableBorrowedTokenBalance: BigInt
  variableBorrowedTokenBalance_not: BigInt
  variableBorrowedTokenBalance_gt: BigInt
  variableBorrowedTokenBalance_lt: BigInt
  variableBorrowedTokenBalance_gte: BigInt
  variableBorrowedTokenBalance_lte: BigInt
  variableBorrowedTokenBalance_in: [BigInt!]
  variableBorrowedTokenBalance_not_in: [BigInt!]
  stableBorrowedTokenBalance: BigInt
  stableBorrowedTokenBalance_not: BigInt
  stableBorrowedTokenBalance_gt: BigInt
  stableBorrowedTokenBalance_lt: BigInt
  stableBorrowedTokenBalance_gte: BigInt
  stableBorrowedTokenBalance_lte: BigInt
  stableBorrowedTokenBalance_in: [BigInt!]
  stableBorrowedTokenBalance_not_in: [BigInt!]
  supplyCap: BigInt
  supplyCap_not: BigInt
  supplyCap_gt: BigInt
  supplyCap_lt: BigInt
  supplyCap_gte: BigInt
  supplyCap_lte: BigInt
  supplyCap_in: [BigInt!]
  supplyCap_not_in: [BigInt!]
  borrowCap: BigInt
  borrowCap_not: BigInt
  borrowCap_gt: BigInt
  borrowCap_lt: BigInt
  borrowCap_gte: BigInt
  borrowCap_lte: BigInt
  borrowCap_in: [BigInt!]
  borrowCap_not_in: [BigInt!]
  totalValueLockedUSD: ethereumPrimaryBigDecimal
  totalValueLockedUSD_not: ethereumPrimaryBigDecimal
  totalValueLockedUSD_gt: ethereumPrimaryBigDecimal
  totalValueLockedUSD_lt: ethereumPrimaryBigDecimal
  totalValueLockedUSD_gte: ethereumPrimaryBigDecimal
  totalValueLockedUSD_lte: ethereumPrimaryBigDecimal
  totalValueLockedUSD_in: [ethereumPrimaryBigDecimal!]
  totalValueLockedUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeSupplySideRevenueUSD: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_not: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_gt: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_lt: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_gte: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_lte: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeSupplySideRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailySupplySideRevenueUSD: ethereumPrimaryBigDecimal
  dailySupplySideRevenueUSD_not: ethereumPrimaryBigDecimal
  dailySupplySideRevenueUSD_gt: ethereumPrimaryBigDecimal
  dailySupplySideRevenueUSD_lt: ethereumPrimaryBigDecimal
  dailySupplySideRevenueUSD_gte: ethereumPrimaryBigDecimal
  dailySupplySideRevenueUSD_lte: ethereumPrimaryBigDecimal
  dailySupplySideRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  dailySupplySideRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeProtocolSideRevenueUSD: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_not: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_gt: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_lt: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_gte: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_lte: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeProtocolSideRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyProtocolSideRevenueUSD: ethereumPrimaryBigDecimal
  dailyProtocolSideRevenueUSD_not: ethereumPrimaryBigDecimal
  dailyProtocolSideRevenueUSD_gt: ethereumPrimaryBigDecimal
  dailyProtocolSideRevenueUSD_lt: ethereumPrimaryBigDecimal
  dailyProtocolSideRevenueUSD_gte: ethereumPrimaryBigDecimal
  dailyProtocolSideRevenueUSD_lte: ethereumPrimaryBigDecimal
  dailyProtocolSideRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  dailyProtocolSideRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeTotalRevenueUSD: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_not: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_gt: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_lt: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_gte: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_lte: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeTotalRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyTotalRevenueUSD: ethereumPrimaryBigDecimal
  dailyTotalRevenueUSD_not: ethereumPrimaryBigDecimal
  dailyTotalRevenueUSD_gt: ethereumPrimaryBigDecimal
  dailyTotalRevenueUSD_lt: ethereumPrimaryBigDecimal
  dailyTotalRevenueUSD_gte: ethereumPrimaryBigDecimal
  dailyTotalRevenueUSD_lte: ethereumPrimaryBigDecimal
  dailyTotalRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  dailyTotalRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  revenueDetail: String
  revenueDetail_not: String
  revenueDetail_gt: String
  revenueDetail_lt: String
  revenueDetail_gte: String
  revenueDetail_lte: String
  revenueDetail_in: [String!]
  revenueDetail_not_in: [String!]
  revenueDetail_contains: String
  revenueDetail_contains_nocase: String
  revenueDetail_not_contains: String
  revenueDetail_not_contains_nocase: String
  revenueDetail_starts_with: String
  revenueDetail_starts_with_nocase: String
  revenueDetail_not_starts_with: String
  revenueDetail_not_starts_with_nocase: String
  revenueDetail_ends_with: String
  revenueDetail_ends_with_nocase: String
  revenueDetail_not_ends_with: String
  revenueDetail_not_ends_with_nocase: String
  revenueDetail_: ethereumPrimaryRevenueDetail_filter
  totalDepositBalanceUSD: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_not: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_gt: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_lt: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_gte: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_lte: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_in: [ethereumPrimaryBigDecimal!]
  totalDepositBalanceUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyDepositUSD: ethereumPrimaryBigDecimal
  dailyDepositUSD_not: ethereumPrimaryBigDecimal
  dailyDepositUSD_gt: ethereumPrimaryBigDecimal
  dailyDepositUSD_lt: ethereumPrimaryBigDecimal
  dailyDepositUSD_gte: ethereumPrimaryBigDecimal
  dailyDepositUSD_lte: ethereumPrimaryBigDecimal
  dailyDepositUSD_in: [ethereumPrimaryBigDecimal!]
  dailyDepositUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyNativeDeposit: BigInt
  dailyNativeDeposit_not: BigInt
  dailyNativeDeposit_gt: BigInt
  dailyNativeDeposit_lt: BigInt
  dailyNativeDeposit_gte: BigInt
  dailyNativeDeposit_lte: BigInt
  dailyNativeDeposit_in: [BigInt!]
  dailyNativeDeposit_not_in: [BigInt!]
  cumulativeDepositUSD: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_not: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_gt: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_lt: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_gte: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_lte: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeDepositUSD_not_in: [ethereumPrimaryBigDecimal!]
  totalBorrowBalanceUSD: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_not: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_gt: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_lt: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_gte: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_lte: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_in: [ethereumPrimaryBigDecimal!]
  totalBorrowBalanceUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyBorrowUSD: ethereumPrimaryBigDecimal
  dailyBorrowUSD_not: ethereumPrimaryBigDecimal
  dailyBorrowUSD_gt: ethereumPrimaryBigDecimal
  dailyBorrowUSD_lt: ethereumPrimaryBigDecimal
  dailyBorrowUSD_gte: ethereumPrimaryBigDecimal
  dailyBorrowUSD_lte: ethereumPrimaryBigDecimal
  dailyBorrowUSD_in: [ethereumPrimaryBigDecimal!]
  dailyBorrowUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyNativeBorrow: BigInt
  dailyNativeBorrow_not: BigInt
  dailyNativeBorrow_gt: BigInt
  dailyNativeBorrow_lt: BigInt
  dailyNativeBorrow_gte: BigInt
  dailyNativeBorrow_lte: BigInt
  dailyNativeBorrow_in: [BigInt!]
  dailyNativeBorrow_not_in: [BigInt!]
  cumulativeBorrowUSD: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_not: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_gt: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_lt: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_gte: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_lte: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeBorrowUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyLiquidateUSD: ethereumPrimaryBigDecimal
  dailyLiquidateUSD_not: ethereumPrimaryBigDecimal
  dailyLiquidateUSD_gt: ethereumPrimaryBigDecimal
  dailyLiquidateUSD_lt: ethereumPrimaryBigDecimal
  dailyLiquidateUSD_gte: ethereumPrimaryBigDecimal
  dailyLiquidateUSD_lte: ethereumPrimaryBigDecimal
  dailyLiquidateUSD_in: [ethereumPrimaryBigDecimal!]
  dailyLiquidateUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyNativeLiquidate: BigInt
  dailyNativeLiquidate_not: BigInt
  dailyNativeLiquidate_gt: BigInt
  dailyNativeLiquidate_lt: BigInt
  dailyNativeLiquidate_gte: BigInt
  dailyNativeLiquidate_lte: BigInt
  dailyNativeLiquidate_in: [BigInt!]
  dailyNativeLiquidate_not_in: [BigInt!]
  cumulativeLiquidateUSD: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_not: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_gt: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_lt: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_gte: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_lte: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeLiquidateUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyWithdrawUSD: ethereumPrimaryBigDecimal
  dailyWithdrawUSD_not: ethereumPrimaryBigDecimal
  dailyWithdrawUSD_gt: ethereumPrimaryBigDecimal
  dailyWithdrawUSD_lt: ethereumPrimaryBigDecimal
  dailyWithdrawUSD_gte: ethereumPrimaryBigDecimal
  dailyWithdrawUSD_lte: ethereumPrimaryBigDecimal
  dailyWithdrawUSD_in: [ethereumPrimaryBigDecimal!]
  dailyWithdrawUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyNativeWithdraw: BigInt
  dailyNativeWithdraw_not: BigInt
  dailyNativeWithdraw_gt: BigInt
  dailyNativeWithdraw_lt: BigInt
  dailyNativeWithdraw_gte: BigInt
  dailyNativeWithdraw_lte: BigInt
  dailyNativeWithdraw_in: [BigInt!]
  dailyNativeWithdraw_not_in: [BigInt!]
  dailyRepayUSD: ethereumPrimaryBigDecimal
  dailyRepayUSD_not: ethereumPrimaryBigDecimal
  dailyRepayUSD_gt: ethereumPrimaryBigDecimal
  dailyRepayUSD_lt: ethereumPrimaryBigDecimal
  dailyRepayUSD_gte: ethereumPrimaryBigDecimal
  dailyRepayUSD_lte: ethereumPrimaryBigDecimal
  dailyRepayUSD_in: [ethereumPrimaryBigDecimal!]
  dailyRepayUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyNativeRepay: BigInt
  dailyNativeRepay_not: BigInt
  dailyNativeRepay_gt: BigInt
  dailyNativeRepay_lt: BigInt
  dailyNativeRepay_gte: BigInt
  dailyNativeRepay_lte: BigInt
  dailyNativeRepay_in: [BigInt!]
  dailyNativeRepay_not_in: [BigInt!]
  dailyTransferUSD: ethereumPrimaryBigDecimal
  dailyTransferUSD_not: ethereumPrimaryBigDecimal
  dailyTransferUSD_gt: ethereumPrimaryBigDecimal
  dailyTransferUSD_lt: ethereumPrimaryBigDecimal
  dailyTransferUSD_gte: ethereumPrimaryBigDecimal
  dailyTransferUSD_lte: ethereumPrimaryBigDecimal
  dailyTransferUSD_in: [ethereumPrimaryBigDecimal!]
  dailyTransferUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyNativeTransfer: BigInt
  dailyNativeTransfer_not: BigInt
  dailyNativeTransfer_gt: BigInt
  dailyNativeTransfer_lt: BigInt
  dailyNativeTransfer_gte: BigInt
  dailyNativeTransfer_lte: BigInt
  dailyNativeTransfer_in: [BigInt!]
  dailyNativeTransfer_not_in: [BigInt!]
  cumulativeTransferUSD: ethereumPrimaryBigDecimal
  cumulativeTransferUSD_not: ethereumPrimaryBigDecimal
  cumulativeTransferUSD_gt: ethereumPrimaryBigDecimal
  cumulativeTransferUSD_lt: ethereumPrimaryBigDecimal
  cumulativeTransferUSD_gte: ethereumPrimaryBigDecimal
  cumulativeTransferUSD_lte: ethereumPrimaryBigDecimal
  cumulativeTransferUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeTransferUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyFlashloanUSD: ethereumPrimaryBigDecimal
  dailyFlashloanUSD_not: ethereumPrimaryBigDecimal
  dailyFlashloanUSD_gt: ethereumPrimaryBigDecimal
  dailyFlashloanUSD_lt: ethereumPrimaryBigDecimal
  dailyFlashloanUSD_gte: ethereumPrimaryBigDecimal
  dailyFlashloanUSD_lte: ethereumPrimaryBigDecimal
  dailyFlashloanUSD_in: [ethereumPrimaryBigDecimal!]
  dailyFlashloanUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyNativeFlashloan: BigInt
  dailyNativeFlashloan_not: BigInt
  dailyNativeFlashloan_gt: BigInt
  dailyNativeFlashloan_lt: BigInt
  dailyNativeFlashloan_gte: BigInt
  dailyNativeFlashloan_lte: BigInt
  dailyNativeFlashloan_in: [BigInt!]
  dailyNativeFlashloan_not_in: [BigInt!]
  cumulativeFlashloanUSD: ethereumPrimaryBigDecimal
  cumulativeFlashloanUSD_not: ethereumPrimaryBigDecimal
  cumulativeFlashloanUSD_gt: ethereumPrimaryBigDecimal
  cumulativeFlashloanUSD_lt: ethereumPrimaryBigDecimal
  cumulativeFlashloanUSD_gte: ethereumPrimaryBigDecimal
  cumulativeFlashloanUSD_lte: ethereumPrimaryBigDecimal
  cumulativeFlashloanUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeFlashloanUSD_not_in: [ethereumPrimaryBigDecimal!]
  dailyActiveUsers: Int
  dailyActiveUsers_not: Int
  dailyActiveUsers_gt: Int
  dailyActiveUsers_lt: Int
  dailyActiveUsers_gte: Int
  dailyActiveUsers_lte: Int
  dailyActiveUsers_in: [Int!]
  dailyActiveUsers_not_in: [Int!]
  dailyActiveDepositors: Int
  dailyActiveDepositors_not: Int
  dailyActiveDepositors_gt: Int
  dailyActiveDepositors_lt: Int
  dailyActiveDepositors_gte: Int
  dailyActiveDepositors_lte: Int
  dailyActiveDepositors_in: [Int!]
  dailyActiveDepositors_not_in: [Int!]
  dailyActiveBorrowers: Int
  dailyActiveBorrowers_not: Int
  dailyActiveBorrowers_gt: Int
  dailyActiveBorrowers_lt: Int
  dailyActiveBorrowers_gte: Int
  dailyActiveBorrowers_lte: Int
  dailyActiveBorrowers_in: [Int!]
  dailyActiveBorrowers_not_in: [Int!]
  dailyActiveLiquidators: Int
  dailyActiveLiquidators_not: Int
  dailyActiveLiquidators_gt: Int
  dailyActiveLiquidators_lt: Int
  dailyActiveLiquidators_gte: Int
  dailyActiveLiquidators_lte: Int
  dailyActiveLiquidators_in: [Int!]
  dailyActiveLiquidators_not_in: [Int!]
  dailyActiveLiquidatees: Int
  dailyActiveLiquidatees_not: Int
  dailyActiveLiquidatees_gt: Int
  dailyActiveLiquidatees_lt: Int
  dailyActiveLiquidatees_gte: Int
  dailyActiveLiquidatees_lte: Int
  dailyActiveLiquidatees_in: [Int!]
  dailyActiveLiquidatees_not_in: [Int!]
  dailyActiveTransferrers: Int
  dailyActiveTransferrers_not: Int
  dailyActiveTransferrers_gt: Int
  dailyActiveTransferrers_lt: Int
  dailyActiveTransferrers_gte: Int
  dailyActiveTransferrers_lte: Int
  dailyActiveTransferrers_in: [Int!]
  dailyActiveTransferrers_not_in: [Int!]
  dailyActiveFlashloaners: Int
  dailyActiveFlashloaners_not: Int
  dailyActiveFlashloaners_gt: Int
  dailyActiveFlashloaners_lt: Int
  dailyActiveFlashloaners_gte: Int
  dailyActiveFlashloaners_lte: Int
  dailyActiveFlashloaners_in: [Int!]
  dailyActiveFlashloaners_not_in: [Int!]
  dailyDepositCount: Int
  dailyDepositCount_not: Int
  dailyDepositCount_gt: Int
  dailyDepositCount_lt: Int
  dailyDepositCount_gte: Int
  dailyDepositCount_lte: Int
  dailyDepositCount_in: [Int!]
  dailyDepositCount_not_in: [Int!]
  dailyWithdrawCount: Int
  dailyWithdrawCount_not: Int
  dailyWithdrawCount_gt: Int
  dailyWithdrawCount_lt: Int
  dailyWithdrawCount_gte: Int
  dailyWithdrawCount_lte: Int
  dailyWithdrawCount_in: [Int!]
  dailyWithdrawCount_not_in: [Int!]
  dailyBorrowCount: Int
  dailyBorrowCount_not: Int
  dailyBorrowCount_gt: Int
  dailyBorrowCount_lt: Int
  dailyBorrowCount_gte: Int
  dailyBorrowCount_lte: Int
  dailyBorrowCount_in: [Int!]
  dailyBorrowCount_not_in: [Int!]
  dailyRepayCount: Int
  dailyRepayCount_not: Int
  dailyRepayCount_gt: Int
  dailyRepayCount_lt: Int
  dailyRepayCount_gte: Int
  dailyRepayCount_lte: Int
  dailyRepayCount_in: [Int!]
  dailyRepayCount_not_in: [Int!]
  dailyLiquidateCount: Int
  dailyLiquidateCount_not: Int
  dailyLiquidateCount_gt: Int
  dailyLiquidateCount_lt: Int
  dailyLiquidateCount_gte: Int
  dailyLiquidateCount_lte: Int
  dailyLiquidateCount_in: [Int!]
  dailyLiquidateCount_not_in: [Int!]
  dailyTransferCount: Int
  dailyTransferCount_not: Int
  dailyTransferCount_gt: Int
  dailyTransferCount_lt: Int
  dailyTransferCount_gte: Int
  dailyTransferCount_lte: Int
  dailyTransferCount_in: [Int!]
  dailyTransferCount_not_in: [Int!]
  dailyFlashloanCount: Int
  dailyFlashloanCount_not: Int
  dailyFlashloanCount_gt: Int
  dailyFlashloanCount_lt: Int
  dailyFlashloanCount_gte: Int
  dailyFlashloanCount_lte: Int
  dailyFlashloanCount_in: [Int!]
  dailyFlashloanCount_not_in: [Int!]
  positionCount: Int
  positionCount_not: Int
  positionCount_gt: Int
  positionCount_lt: Int
  positionCount_gte: Int
  positionCount_lte: Int
  positionCount_in: [Int!]
  positionCount_not_in: [Int!]
  openPositionCount: Int
  openPositionCount_not: Int
  openPositionCount_gt: Int
  openPositionCount_lt: Int
  openPositionCount_gte: Int
  openPositionCount_lte: Int
  openPositionCount_in: [Int!]
  openPositionCount_not_in: [Int!]
  closedPositionCount: Int
  closedPositionCount_not: Int
  closedPositionCount_gt: Int
  closedPositionCount_lt: Int
  closedPositionCount_gte: Int
  closedPositionCount_lte: Int
  closedPositionCount_in: [Int!]
  closedPositionCount_not_in: [Int!]
  lendingPositionCount: Int
  lendingPositionCount_not: Int
  lendingPositionCount_gt: Int
  lendingPositionCount_lt: Int
  lendingPositionCount_gte: Int
  lendingPositionCount_lte: Int
  lendingPositionCount_in: [Int!]
  lendingPositionCount_not_in: [Int!]
  dailyActiveLendingPositionCount: Int
  dailyActiveLendingPositionCount_not: Int
  dailyActiveLendingPositionCount_gt: Int
  dailyActiveLendingPositionCount_lt: Int
  dailyActiveLendingPositionCount_gte: Int
  dailyActiveLendingPositionCount_lte: Int
  dailyActiveLendingPositionCount_in: [Int!]
  dailyActiveLendingPositionCount_not_in: [Int!]
  borrowingPositionCount: Int
  borrowingPositionCount_not: Int
  borrowingPositionCount_gt: Int
  borrowingPositionCount_lt: Int
  borrowingPositionCount_gte: Int
  borrowingPositionCount_lte: Int
  borrowingPositionCount_in: [Int!]
  borrowingPositionCount_not_in: [Int!]
  dailyActiveBorrowingPositionCount: Int
  dailyActiveBorrowingPositionCount_not: Int
  dailyActiveBorrowingPositionCount_gt: Int
  dailyActiveBorrowingPositionCount_lt: Int
  dailyActiveBorrowingPositionCount_gte: Int
  dailyActiveBorrowingPositionCount_lte: Int
  dailyActiveBorrowingPositionCount_in: [Int!]
  dailyActiveBorrowingPositionCount_not_in: [Int!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryMarketDailySnapshot_filter]
  or: [ethereumPrimaryMarketDailySnapshot_filter]
}

enum ethereumPrimaryMarketDailySnapshot_orderBy {
  id
  days
  protocol
  protocol__id
  protocol__protocol
  protocol__name
  protocol__slug
  protocol__schemaVersion
  protocol__subgraphVersion
  protocol__methodologyVersion
  protocol__network
  protocol__type
  protocol__lendingType
  protocol__lenderPermissionType
  protocol__borrowerPermissionType
  protocol__poolCreatorPermissionType
  protocol__riskType
  protocol__collateralizationType
  protocol__cumulativeUniqueUsers
  protocol__cumulativeUniqueDepositors
  protocol__cumulativeUniqueBorrowers
  protocol__cumulativeUniqueLiquidators
  protocol__cumulativeUniqueLiquidatees
  protocol__totalValueLockedUSD
  protocol__protocolControlledValueUSD
  protocol__cumulativeSupplySideRevenueUSD
  protocol__cumulativeProtocolSideRevenueUSD
  protocol__cumulativeTotalRevenueUSD
  protocol__totalDepositBalanceUSD
  protocol__cumulativeDepositUSD
  protocol__totalBorrowBalanceUSD
  protocol__cumulativeBorrowUSD
  protocol__cumulativeLiquidateUSD
  protocol__totalPoolCount
  protocol__openPositionCount
  protocol__cumulativePositionCount
  protocol__transactionCount
  protocol__depositCount
  protocol__withdrawCount
  protocol__borrowCount
  protocol__repayCount
  protocol__liquidationCount
  protocol__transferCount
  protocol__flashloanCount
  market
  market__id
  market__name
  market__isActive
  market__canBorrowFrom
  market__canUseAsCollateral
  market__maximumLTV
  market__liquidationThreshold
  market__liquidationPenalty
  market__canIsolate
  market__createdTimestamp
  market__createdBlockNumber
  market__relation
  market__stakedOutputTokenAmount
  market__inputTokenBalance
  market__inputTokenPriceUSD
  market__outputTokenSupply
  market__outputTokenPriceUSD
  market__exchangeRate
  market__reserves
  market__reserveFactor
  market__variableBorrowedTokenBalance
  market__stableBorrowedTokenBalance
  market__indexLastUpdatedTimestamp
  market__supplyIndex
  market__supplyCap
  market__borrowIndex
  market__borrowCap
  market__totalValueLockedUSD
  market__cumulativeSupplySideRevenueUSD
  market__cumulativeProtocolSideRevenueUSD
  market__cumulativeTotalRevenueUSD
  market__totalDepositBalanceUSD
  market__cumulativeDepositUSD
  market__totalBorrowBalanceUSD
  market__cumulativeBorrowUSD
  market__cumulativeLiquidateUSD
  market__cumulativeTransferUSD
  market__cumulativeFlashloanUSD
  market__transactionCount
  market__depositCount
  market__withdrawCount
  market__borrowCount
  market__repayCount
  market__liquidationCount
  market__transferCount
  market__flashloanCount
  market__cumulativeUniqueUsers
  market__cumulativeUniqueDepositors
  market__cumulativeUniqueBorrowers
  market__cumulativeUniqueLiquidators
  market__cumulativeUniqueLiquidatees
  market__cumulativeUniqueTransferrers
  market__cumulativeUniqueFlashloaners
  market__positionCount
  market__openPositionCount
  market__closedPositionCount
  market__lendingPositionCount
  market__borrowingPositionCount
  market___baseTrackingBorrowSpeed
  market___baseTrackingSupplySpeed
  market___lastRewardsUpdated
  market___liquidationProtocolFee
  market___siloedBorrowing
  blockNumber
  timestamp
  relation
  rewardTokens
  rewardTokenEmissionsAmount
  rewardTokenEmissionsUSD
  stakedOutputTokenAmount
  inputTokenBalance
  inputTokenPriceUSD
  outputTokenSupply
  outputTokenPriceUSD
  exchangeRate
  rates
  reserves
  reserveFactor
  variableBorrowedTokenBalance
  stableBorrowedTokenBalance
  supplyCap
  borrowCap
  totalValueLockedUSD
  cumulativeSupplySideRevenueUSD
  dailySupplySideRevenueUSD
  cumulativeProtocolSideRevenueUSD
  dailyProtocolSideRevenueUSD
  cumulativeTotalRevenueUSD
  dailyTotalRevenueUSD
  revenueDetail
  revenueDetail__id
  totalDepositBalanceUSD
  dailyDepositUSD
  dailyNativeDeposit
  cumulativeDepositUSD
  totalBorrowBalanceUSD
  dailyBorrowUSD
  dailyNativeBorrow
  cumulativeBorrowUSD
  dailyLiquidateUSD
  dailyNativeLiquidate
  cumulativeLiquidateUSD
  dailyWithdrawUSD
  dailyNativeWithdraw
  dailyRepayUSD
  dailyNativeRepay
  dailyTransferUSD
  dailyNativeTransfer
  cumulativeTransferUSD
  dailyFlashloanUSD
  dailyNativeFlashloan
  cumulativeFlashloanUSD
  dailyActiveUsers
  dailyActiveDepositors
  dailyActiveBorrowers
  dailyActiveLiquidators
  dailyActiveLiquidatees
  dailyActiveTransferrers
  dailyActiveFlashloaners
  dailyDepositCount
  dailyWithdrawCount
  dailyBorrowCount
  dailyRepayCount
  dailyLiquidateCount
  dailyTransferCount
  dailyFlashloanCount
  positionCount
  openPositionCount
  closedPositionCount
  lendingPositionCount
  dailyActiveLendingPositionCount
  borrowingPositionCount
  dailyActiveBorrowingPositionCount
}

type ethereumPrimaryMarketHourlySnapshot {
  """ { Smart contract address of the market }{ # of hours since Unix epoch time } 
  """
  id: ethereumPrimaryBytes!
  """ Number of hours since Unix epoch time """
  hours: Int!
  """ The protocol this snapshot belongs to """
  protocol: ethereumPrimaryLendingProtocol!
  """ The pool this snapshot belongs to """
  market: ethereumPrimaryMarket!
  """ Block number of this snapshot """
  blockNumber: BigInt!
  """ Timestamp of this snapshot """
  timestamp: BigInt!
  """ A unique identifier that can relate multiple markets together. e.g. a common address that they all share. This is useful for markets with multiple input tokens 
  """
  relation: ethereumPrimaryBytes
  """ Additional tokens that are given as reward for position in a protocol, usually in liquidity mining programs. e.g. SUSHI in the Onsen program, MATIC for Aave Polygon 
  """
  rewardTokens(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryRewardToken_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryRewardToken_filter): [ethereumPrimaryRewardToken!]
  """ Per-block reward token emission as of the current block normalized to a day, in token's native amount. This should be ideally calculated as the theoretical rate instead of the realized amount. 
  """
  rewardTokenEmissionsAmount: [BigInt!]
  """ Per-block reward token emission as of the current block normalized to a day, in USD value. This should be ideally calculated as the theoretical rate instead of the realized amount. 
  """
  rewardTokenEmissionsUSD: [ethereumPrimaryBigDecimal!]
  """ Total supply of output tokens that are staked. Used to calculate reward APY. 
  """
  stakedOutputTokenAmount: BigInt
  """ Amount of input token in the market (same order as inputTokens) """
  inputTokenBalance: BigInt!
  """ Prices in USD of the input token (same order as inputTokens) """
  inputTokenPriceUSD: ethereumPrimaryBigDecimal!
  """ Total supply of output token (same order as outputTokens) """
  outputTokenSupply: BigInt
  """ Prices in USD of the output token (same order as outputTokens) """
  outputTokenPriceUSD: ethereumPrimaryBigDecimal
  """ Amount of input token per full share of output token. Only applies when the output token exists (note this is a ratio and not a percentage value, i.e. 1.05 instead of 105%) 
  """
  exchangeRate: ethereumPrimaryBigDecimal
  """ All interest rates for this input token. Should be in APR format """
  rates(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryInterestRate_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryInterestRate_filter): [ethereumPrimaryInterestRate!]
  """ Total amount of reserves (in USD) """
  reserves: ethereumPrimaryBigDecimal
  """ Amount of input tokens borrowed in this market using variable interest rates (in native terms) 
  """
  variableBorrowedTokenBalance: BigInt
  """ Amount of input tokens borrowed in this market using stable interest rates (in native terms) 
  """
  stableBorrowedTokenBalance: BigInt
  """ Current TVL (Total Value Locked) of this market """
  totalValueLockedUSD: ethereumPrimaryBigDecimal!
  """ All revenue generated by the market, accrued to the supply side. """
  cumulativeSupplySideRevenueUSD: ethereumPrimaryBigDecimal!
  """ Hourly revenue generated by the market, accrued to the supply side. """
  hourlySupplySideRevenueUSD: ethereumPrimaryBigDecimal!
  """ All revenue generated by the market, accrued to the protocol. """
  cumulativeProtocolSideRevenueUSD: ethereumPrimaryBigDecimal!
  """ Hourly revenue generated by the market, accrued to the protocol. """
  hourlyProtocolSideRevenueUSD: ethereumPrimaryBigDecimal!
  """ All revenue generated by the market. """
  cumulativeTotalRevenueUSD: ethereumPrimaryBigDecimal!
  """ Hourly revenue generated by the market. """
  hourlyTotalRevenueUSD: ethereumPrimaryBigDecimal!
  """ Current balance of all deposited assets (not historical cumulative), in USD. Same as pool TVL. 
  """
  totalDepositBalanceUSD: ethereumPrimaryBigDecimal!
  """ Sum of all deposits made in a given hour, in USD """
  hourlyDepositUSD: ethereumPrimaryBigDecimal!
  """ Sum of all historical deposits in USD (only considers deposits and not withdrawals) 
  """
  cumulativeDepositUSD: ethereumPrimaryBigDecimal!
  """ Current balance of all borrowed/minted assets (not historical cumulative), in USD. 
  """
  totalBorrowBalanceUSD: ethereumPrimaryBigDecimal!
  """ Sum of all borrows/mints made in a given hour, in USD """
  hourlyBorrowUSD: ethereumPrimaryBigDecimal!
  """ Sum of all historical borrows/mints in USD (i.e. total loan origination) 
  """
  cumulativeBorrowUSD: ethereumPrimaryBigDecimal!
  """ Total assets liquidated in a given hour, in USD. """
  hourlyLiquidateUSD: ethereumPrimaryBigDecimal!
  """ Sum of all historical liquidations in USD """
  cumulativeLiquidateUSD: ethereumPrimaryBigDecimal!
  """ Total assets withdrawn on a given hour, in USD. """
  hourlyWithdrawUSD: ethereumPrimaryBigDecimal!
  """ Total assets repaid on a given hour, in USD. """
  hourlyRepayUSD: ethereumPrimaryBigDecimal!
  """ Total assets transferred on a given hour, in USD. """
  hourlyTransferUSD: ethereumPrimaryBigDecimal!
  """ Total assets flashloaned on a given hour, in USD. """
  hourlyFlashloanUSD: ethereumPrimaryBigDecimal!
}

input ethereumPrimaryMarketHourlySnapshot_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  hours: Int
  hours_not: Int
  hours_gt: Int
  hours_lt: Int
  hours_gte: Int
  hours_lte: Int
  hours_in: [Int!]
  hours_not_in: [Int!]
  protocol: String
  protocol_not: String
  protocol_gt: String
  protocol_lt: String
  protocol_gte: String
  protocol_lte: String
  protocol_in: [String!]
  protocol_not_in: [String!]
  protocol_contains: String
  protocol_contains_nocase: String
  protocol_not_contains: String
  protocol_not_contains_nocase: String
  protocol_starts_with: String
  protocol_starts_with_nocase: String
  protocol_not_starts_with: String
  protocol_not_starts_with_nocase: String
  protocol_ends_with: String
  protocol_ends_with_nocase: String
  protocol_not_ends_with: String
  protocol_not_ends_with_nocase: String
  protocol_: ethereumPrimaryLendingProtocol_filter
  market: String
  market_not: String
  market_gt: String
  market_lt: String
  market_gte: String
  market_lte: String
  market_in: [String!]
  market_not_in: [String!]
  market_contains: String
  market_contains_nocase: String
  market_not_contains: String
  market_not_contains_nocase: String
  market_starts_with: String
  market_starts_with_nocase: String
  market_not_starts_with: String
  market_not_starts_with_nocase: String
  market_ends_with: String
  market_ends_with_nocase: String
  market_not_ends_with: String
  market_not_ends_with_nocase: String
  market_: ethereumPrimaryMarket_filter
  blockNumber: BigInt
  blockNumber_not: BigInt
  blockNumber_gt: BigInt
  blockNumber_lt: BigInt
  blockNumber_gte: BigInt
  blockNumber_lte: BigInt
  blockNumber_in: [BigInt!]
  blockNumber_not_in: [BigInt!]
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  relation: ethereumPrimaryBytes
  relation_not: ethereumPrimaryBytes
  relation_gt: ethereumPrimaryBytes
  relation_lt: ethereumPrimaryBytes
  relation_gte: ethereumPrimaryBytes
  relation_lte: ethereumPrimaryBytes
  relation_in: [ethereumPrimaryBytes!]
  relation_not_in: [ethereumPrimaryBytes!]
  relation_contains: ethereumPrimaryBytes
  relation_not_contains: ethereumPrimaryBytes
  rewardTokens: [String!]
  rewardTokens_not: [String!]
  rewardTokens_contains: [String!]
  rewardTokens_contains_nocase: [String!]
  rewardTokens_not_contains: [String!]
  rewardTokens_not_contains_nocase: [String!]
  rewardTokens_: ethereumPrimaryRewardToken_filter
  rewardTokenEmissionsAmount: [BigInt!]
  rewardTokenEmissionsAmount_not: [BigInt!]
  rewardTokenEmissionsAmount_contains: [BigInt!]
  rewardTokenEmissionsAmount_contains_nocase: [BigInt!]
  rewardTokenEmissionsAmount_not_contains: [BigInt!]
  rewardTokenEmissionsAmount_not_contains_nocase: [BigInt!]
  rewardTokenEmissionsUSD: [ethereumPrimaryBigDecimal!]
  rewardTokenEmissionsUSD_not: [ethereumPrimaryBigDecimal!]
  rewardTokenEmissionsUSD_contains: [ethereumPrimaryBigDecimal!]
  rewardTokenEmissionsUSD_contains_nocase: [ethereumPrimaryBigDecimal!]
  rewardTokenEmissionsUSD_not_contains: [ethereumPrimaryBigDecimal!]
  rewardTokenEmissionsUSD_not_contains_nocase: [ethereumPrimaryBigDecimal!]
  stakedOutputTokenAmount: BigInt
  stakedOutputTokenAmount_not: BigInt
  stakedOutputTokenAmount_gt: BigInt
  stakedOutputTokenAmount_lt: BigInt
  stakedOutputTokenAmount_gte: BigInt
  stakedOutputTokenAmount_lte: BigInt
  stakedOutputTokenAmount_in: [BigInt!]
  stakedOutputTokenAmount_not_in: [BigInt!]
  inputTokenBalance: BigInt
  inputTokenBalance_not: BigInt
  inputTokenBalance_gt: BigInt
  inputTokenBalance_lt: BigInt
  inputTokenBalance_gte: BigInt
  inputTokenBalance_lte: BigInt
  inputTokenBalance_in: [BigInt!]
  inputTokenBalance_not_in: [BigInt!]
  inputTokenPriceUSD: ethereumPrimaryBigDecimal
  inputTokenPriceUSD_not: ethereumPrimaryBigDecimal
  inputTokenPriceUSD_gt: ethereumPrimaryBigDecimal
  inputTokenPriceUSD_lt: ethereumPrimaryBigDecimal
  inputTokenPriceUSD_gte: ethereumPrimaryBigDecimal
  inputTokenPriceUSD_lte: ethereumPrimaryBigDecimal
  inputTokenPriceUSD_in: [ethereumPrimaryBigDecimal!]
  inputTokenPriceUSD_not_in: [ethereumPrimaryBigDecimal!]
  outputTokenSupply: BigInt
  outputTokenSupply_not: BigInt
  outputTokenSupply_gt: BigInt
  outputTokenSupply_lt: BigInt
  outputTokenSupply_gte: BigInt
  outputTokenSupply_lte: BigInt
  outputTokenSupply_in: [BigInt!]
  outputTokenSupply_not_in: [BigInt!]
  outputTokenPriceUSD: ethereumPrimaryBigDecimal
  outputTokenPriceUSD_not: ethereumPrimaryBigDecimal
  outputTokenPriceUSD_gt: ethereumPrimaryBigDecimal
  outputTokenPriceUSD_lt: ethereumPrimaryBigDecimal
  outputTokenPriceUSD_gte: ethereumPrimaryBigDecimal
  outputTokenPriceUSD_lte: ethereumPrimaryBigDecimal
  outputTokenPriceUSD_in: [ethereumPrimaryBigDecimal!]
  outputTokenPriceUSD_not_in: [ethereumPrimaryBigDecimal!]
  exchangeRate: ethereumPrimaryBigDecimal
  exchangeRate_not: ethereumPrimaryBigDecimal
  exchangeRate_gt: ethereumPrimaryBigDecimal
  exchangeRate_lt: ethereumPrimaryBigDecimal
  exchangeRate_gte: ethereumPrimaryBigDecimal
  exchangeRate_lte: ethereumPrimaryBigDecimal
  exchangeRate_in: [ethereumPrimaryBigDecimal!]
  exchangeRate_not_in: [ethereumPrimaryBigDecimal!]
  rates: [String!]
  rates_not: [String!]
  rates_contains: [String!]
  rates_contains_nocase: [String!]
  rates_not_contains: [String!]
  rates_not_contains_nocase: [String!]
  rates_: ethereumPrimaryInterestRate_filter
  reserves: ethereumPrimaryBigDecimal
  reserves_not: ethereumPrimaryBigDecimal
  reserves_gt: ethereumPrimaryBigDecimal
  reserves_lt: ethereumPrimaryBigDecimal
  reserves_gte: ethereumPrimaryBigDecimal
  reserves_lte: ethereumPrimaryBigDecimal
  reserves_in: [ethereumPrimaryBigDecimal!]
  reserves_not_in: [ethereumPrimaryBigDecimal!]
  variableBorrowedTokenBalance: BigInt
  variableBorrowedTokenBalance_not: BigInt
  variableBorrowedTokenBalance_gt: BigInt
  variableBorrowedTokenBalance_lt: BigInt
  variableBorrowedTokenBalance_gte: BigInt
  variableBorrowedTokenBalance_lte: BigInt
  variableBorrowedTokenBalance_in: [BigInt!]
  variableBorrowedTokenBalance_not_in: [BigInt!]
  stableBorrowedTokenBalance: BigInt
  stableBorrowedTokenBalance_not: BigInt
  stableBorrowedTokenBalance_gt: BigInt
  stableBorrowedTokenBalance_lt: BigInt
  stableBorrowedTokenBalance_gte: BigInt
  stableBorrowedTokenBalance_lte: BigInt
  stableBorrowedTokenBalance_in: [BigInt!]
  stableBorrowedTokenBalance_not_in: [BigInt!]
  totalValueLockedUSD: ethereumPrimaryBigDecimal
  totalValueLockedUSD_not: ethereumPrimaryBigDecimal
  totalValueLockedUSD_gt: ethereumPrimaryBigDecimal
  totalValueLockedUSD_lt: ethereumPrimaryBigDecimal
  totalValueLockedUSD_gte: ethereumPrimaryBigDecimal
  totalValueLockedUSD_lte: ethereumPrimaryBigDecimal
  totalValueLockedUSD_in: [ethereumPrimaryBigDecimal!]
  totalValueLockedUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeSupplySideRevenueUSD: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_not: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_gt: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_lt: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_gte: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_lte: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeSupplySideRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  hourlySupplySideRevenueUSD: ethereumPrimaryBigDecimal
  hourlySupplySideRevenueUSD_not: ethereumPrimaryBigDecimal
  hourlySupplySideRevenueUSD_gt: ethereumPrimaryBigDecimal
  hourlySupplySideRevenueUSD_lt: ethereumPrimaryBigDecimal
  hourlySupplySideRevenueUSD_gte: ethereumPrimaryBigDecimal
  hourlySupplySideRevenueUSD_lte: ethereumPrimaryBigDecimal
  hourlySupplySideRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  hourlySupplySideRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeProtocolSideRevenueUSD: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_not: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_gt: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_lt: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_gte: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_lte: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeProtocolSideRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  hourlyProtocolSideRevenueUSD: ethereumPrimaryBigDecimal
  hourlyProtocolSideRevenueUSD_not: ethereumPrimaryBigDecimal
  hourlyProtocolSideRevenueUSD_gt: ethereumPrimaryBigDecimal
  hourlyProtocolSideRevenueUSD_lt: ethereumPrimaryBigDecimal
  hourlyProtocolSideRevenueUSD_gte: ethereumPrimaryBigDecimal
  hourlyProtocolSideRevenueUSD_lte: ethereumPrimaryBigDecimal
  hourlyProtocolSideRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  hourlyProtocolSideRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeTotalRevenueUSD: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_not: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_gt: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_lt: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_gte: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_lte: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeTotalRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  hourlyTotalRevenueUSD: ethereumPrimaryBigDecimal
  hourlyTotalRevenueUSD_not: ethereumPrimaryBigDecimal
  hourlyTotalRevenueUSD_gt: ethereumPrimaryBigDecimal
  hourlyTotalRevenueUSD_lt: ethereumPrimaryBigDecimal
  hourlyTotalRevenueUSD_gte: ethereumPrimaryBigDecimal
  hourlyTotalRevenueUSD_lte: ethereumPrimaryBigDecimal
  hourlyTotalRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  hourlyTotalRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  totalDepositBalanceUSD: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_not: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_gt: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_lt: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_gte: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_lte: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_in: [ethereumPrimaryBigDecimal!]
  totalDepositBalanceUSD_not_in: [ethereumPrimaryBigDecimal!]
  hourlyDepositUSD: ethereumPrimaryBigDecimal
  hourlyDepositUSD_not: ethereumPrimaryBigDecimal
  hourlyDepositUSD_gt: ethereumPrimaryBigDecimal
  hourlyDepositUSD_lt: ethereumPrimaryBigDecimal
  hourlyDepositUSD_gte: ethereumPrimaryBigDecimal
  hourlyDepositUSD_lte: ethereumPrimaryBigDecimal
  hourlyDepositUSD_in: [ethereumPrimaryBigDecimal!]
  hourlyDepositUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeDepositUSD: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_not: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_gt: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_lt: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_gte: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_lte: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeDepositUSD_not_in: [ethereumPrimaryBigDecimal!]
  totalBorrowBalanceUSD: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_not: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_gt: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_lt: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_gte: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_lte: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_in: [ethereumPrimaryBigDecimal!]
  totalBorrowBalanceUSD_not_in: [ethereumPrimaryBigDecimal!]
  hourlyBorrowUSD: ethereumPrimaryBigDecimal
  hourlyBorrowUSD_not: ethereumPrimaryBigDecimal
  hourlyBorrowUSD_gt: ethereumPrimaryBigDecimal
  hourlyBorrowUSD_lt: ethereumPrimaryBigDecimal
  hourlyBorrowUSD_gte: ethereumPrimaryBigDecimal
  hourlyBorrowUSD_lte: ethereumPrimaryBigDecimal
  hourlyBorrowUSD_in: [ethereumPrimaryBigDecimal!]
  hourlyBorrowUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeBorrowUSD: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_not: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_gt: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_lt: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_gte: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_lte: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeBorrowUSD_not_in: [ethereumPrimaryBigDecimal!]
  hourlyLiquidateUSD: ethereumPrimaryBigDecimal
  hourlyLiquidateUSD_not: ethereumPrimaryBigDecimal
  hourlyLiquidateUSD_gt: ethereumPrimaryBigDecimal
  hourlyLiquidateUSD_lt: ethereumPrimaryBigDecimal
  hourlyLiquidateUSD_gte: ethereumPrimaryBigDecimal
  hourlyLiquidateUSD_lte: ethereumPrimaryBigDecimal
  hourlyLiquidateUSD_in: [ethereumPrimaryBigDecimal!]
  hourlyLiquidateUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeLiquidateUSD: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_not: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_gt: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_lt: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_gte: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_lte: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeLiquidateUSD_not_in: [ethereumPrimaryBigDecimal!]
  hourlyWithdrawUSD: ethereumPrimaryBigDecimal
  hourlyWithdrawUSD_not: ethereumPrimaryBigDecimal
  hourlyWithdrawUSD_gt: ethereumPrimaryBigDecimal
  hourlyWithdrawUSD_lt: ethereumPrimaryBigDecimal
  hourlyWithdrawUSD_gte: ethereumPrimaryBigDecimal
  hourlyWithdrawUSD_lte: ethereumPrimaryBigDecimal
  hourlyWithdrawUSD_in: [ethereumPrimaryBigDecimal!]
  hourlyWithdrawUSD_not_in: [ethereumPrimaryBigDecimal!]
  hourlyRepayUSD: ethereumPrimaryBigDecimal
  hourlyRepayUSD_not: ethereumPrimaryBigDecimal
  hourlyRepayUSD_gt: ethereumPrimaryBigDecimal
  hourlyRepayUSD_lt: ethereumPrimaryBigDecimal
  hourlyRepayUSD_gte: ethereumPrimaryBigDecimal
  hourlyRepayUSD_lte: ethereumPrimaryBigDecimal
  hourlyRepayUSD_in: [ethereumPrimaryBigDecimal!]
  hourlyRepayUSD_not_in: [ethereumPrimaryBigDecimal!]
  hourlyTransferUSD: ethereumPrimaryBigDecimal
  hourlyTransferUSD_not: ethereumPrimaryBigDecimal
  hourlyTransferUSD_gt: ethereumPrimaryBigDecimal
  hourlyTransferUSD_lt: ethereumPrimaryBigDecimal
  hourlyTransferUSD_gte: ethereumPrimaryBigDecimal
  hourlyTransferUSD_lte: ethereumPrimaryBigDecimal
  hourlyTransferUSD_in: [ethereumPrimaryBigDecimal!]
  hourlyTransferUSD_not_in: [ethereumPrimaryBigDecimal!]
  hourlyFlashloanUSD: ethereumPrimaryBigDecimal
  hourlyFlashloanUSD_not: ethereumPrimaryBigDecimal
  hourlyFlashloanUSD_gt: ethereumPrimaryBigDecimal
  hourlyFlashloanUSD_lt: ethereumPrimaryBigDecimal
  hourlyFlashloanUSD_gte: ethereumPrimaryBigDecimal
  hourlyFlashloanUSD_lte: ethereumPrimaryBigDecimal
  hourlyFlashloanUSD_in: [ethereumPrimaryBigDecimal!]
  hourlyFlashloanUSD_not_in: [ethereumPrimaryBigDecimal!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryMarketHourlySnapshot_filter]
  or: [ethereumPrimaryMarketHourlySnapshot_filter]
}

enum ethereumPrimaryMarketHourlySnapshot_orderBy {
  id
  hours
  protocol
  protocol__id
  protocol__protocol
  protocol__name
  protocol__slug
  protocol__schemaVersion
  protocol__subgraphVersion
  protocol__methodologyVersion
  protocol__network
  protocol__type
  protocol__lendingType
  protocol__lenderPermissionType
  protocol__borrowerPermissionType
  protocol__poolCreatorPermissionType
  protocol__riskType
  protocol__collateralizationType
  protocol__cumulativeUniqueUsers
  protocol__cumulativeUniqueDepositors
  protocol__cumulativeUniqueBorrowers
  protocol__cumulativeUniqueLiquidators
  protocol__cumulativeUniqueLiquidatees
  protocol__totalValueLockedUSD
  protocol__protocolControlledValueUSD
  protocol__cumulativeSupplySideRevenueUSD
  protocol__cumulativeProtocolSideRevenueUSD
  protocol__cumulativeTotalRevenueUSD
  protocol__totalDepositBalanceUSD
  protocol__cumulativeDepositUSD
  protocol__totalBorrowBalanceUSD
  protocol__cumulativeBorrowUSD
  protocol__cumulativeLiquidateUSD
  protocol__totalPoolCount
  protocol__openPositionCount
  protocol__cumulativePositionCount
  protocol__transactionCount
  protocol__depositCount
  protocol__withdrawCount
  protocol__borrowCount
  protocol__repayCount
  protocol__liquidationCount
  protocol__transferCount
  protocol__flashloanCount
  market
  market__id
  market__name
  market__isActive
  market__canBorrowFrom
  market__canUseAsCollateral
  market__maximumLTV
  market__liquidationThreshold
  market__liquidationPenalty
  market__canIsolate
  market__createdTimestamp
  market__createdBlockNumber
  market__relation
  market__stakedOutputTokenAmount
  market__inputTokenBalance
  market__inputTokenPriceUSD
  market__outputTokenSupply
  market__outputTokenPriceUSD
  market__exchangeRate
  market__reserves
  market__reserveFactor
  market__variableBorrowedTokenBalance
  market__stableBorrowedTokenBalance
  market__indexLastUpdatedTimestamp
  market__supplyIndex
  market__supplyCap
  market__borrowIndex
  market__borrowCap
  market__totalValueLockedUSD
  market__cumulativeSupplySideRevenueUSD
  market__cumulativeProtocolSideRevenueUSD
  market__cumulativeTotalRevenueUSD
  market__totalDepositBalanceUSD
  market__cumulativeDepositUSD
  market__totalBorrowBalanceUSD
  market__cumulativeBorrowUSD
  market__cumulativeLiquidateUSD
  market__cumulativeTransferUSD
  market__cumulativeFlashloanUSD
  market__transactionCount
  market__depositCount
  market__withdrawCount
  market__borrowCount
  market__repayCount
  market__liquidationCount
  market__transferCount
  market__flashloanCount
  market__cumulativeUniqueUsers
  market__cumulativeUniqueDepositors
  market__cumulativeUniqueBorrowers
  market__cumulativeUniqueLiquidators
  market__cumulativeUniqueLiquidatees
  market__cumulativeUniqueTransferrers
  market__cumulativeUniqueFlashloaners
  market__positionCount
  market__openPositionCount
  market__closedPositionCount
  market__lendingPositionCount
  market__borrowingPositionCount
  market___baseTrackingBorrowSpeed
  market___baseTrackingSupplySpeed
  market___lastRewardsUpdated
  market___liquidationProtocolFee
  market___siloedBorrowing
  blockNumber
  timestamp
  relation
  rewardTokens
  rewardTokenEmissionsAmount
  rewardTokenEmissionsUSD
  stakedOutputTokenAmount
  inputTokenBalance
  inputTokenPriceUSD
  outputTokenSupply
  outputTokenPriceUSD
  exchangeRate
  rates
  reserves
  variableBorrowedTokenBalance
  stableBorrowedTokenBalance
  totalValueLockedUSD
  cumulativeSupplySideRevenueUSD
  hourlySupplySideRevenueUSD
  cumulativeProtocolSideRevenueUSD
  hourlyProtocolSideRevenueUSD
  cumulativeTotalRevenueUSD
  hourlyTotalRevenueUSD
  totalDepositBalanceUSD
  hourlyDepositUSD
  cumulativeDepositUSD
  totalBorrowBalanceUSD
  hourlyBorrowUSD
  cumulativeBorrowUSD
  hourlyLiquidateUSD
  cumulativeLiquidateUSD
  hourlyWithdrawUSD
  hourlyRepayUSD
  hourlyTransferUSD
  hourlyFlashloanUSD
}

input ethereumPrimaryMarket_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  protocol: String
  protocol_not: String
  protocol_gt: String
  protocol_lt: String
  protocol_gte: String
  protocol_lte: String
  protocol_in: [String!]
  protocol_not_in: [String!]
  protocol_contains: String
  protocol_contains_nocase: String
  protocol_not_contains: String
  protocol_not_contains_nocase: String
  protocol_starts_with: String
  protocol_starts_with_nocase: String
  protocol_not_starts_with: String
  protocol_not_starts_with_nocase: String
  protocol_ends_with: String
  protocol_ends_with_nocase: String
  protocol_not_ends_with: String
  protocol_not_ends_with_nocase: String
  protocol_: ethereumPrimaryLendingProtocol_filter
  name: String
  name_not: String
  name_gt: String
  name_lt: String
  name_gte: String
  name_lte: String
  name_in: [String!]
  name_not_in: [String!]
  name_contains: String
  name_contains_nocase: String
  name_not_contains: String
  name_not_contains_nocase: String
  name_starts_with: String
  name_starts_with_nocase: String
  name_not_starts_with: String
  name_not_starts_with_nocase: String
  name_ends_with: String
  name_ends_with_nocase: String
  name_not_ends_with: String
  name_not_ends_with_nocase: String
  isActive: Boolean
  isActive_not: Boolean
  isActive_in: [Boolean!]
  isActive_not_in: [Boolean!]
  canBorrowFrom: Boolean
  canBorrowFrom_not: Boolean
  canBorrowFrom_in: [Boolean!]
  canBorrowFrom_not_in: [Boolean!]
  canUseAsCollateral: Boolean
  canUseAsCollateral_not: Boolean
  canUseAsCollateral_in: [Boolean!]
  canUseAsCollateral_not_in: [Boolean!]
  maximumLTV: ethereumPrimaryBigDecimal
  maximumLTV_not: ethereumPrimaryBigDecimal
  maximumLTV_gt: ethereumPrimaryBigDecimal
  maximumLTV_lt: ethereumPrimaryBigDecimal
  maximumLTV_gte: ethereumPrimaryBigDecimal
  maximumLTV_lte: ethereumPrimaryBigDecimal
  maximumLTV_in: [ethereumPrimaryBigDecimal!]
  maximumLTV_not_in: [ethereumPrimaryBigDecimal!]
  liquidationThreshold: ethereumPrimaryBigDecimal
  liquidationThreshold_not: ethereumPrimaryBigDecimal
  liquidationThreshold_gt: ethereumPrimaryBigDecimal
  liquidationThreshold_lt: ethereumPrimaryBigDecimal
  liquidationThreshold_gte: ethereumPrimaryBigDecimal
  liquidationThreshold_lte: ethereumPrimaryBigDecimal
  liquidationThreshold_in: [ethereumPrimaryBigDecimal!]
  liquidationThreshold_not_in: [ethereumPrimaryBigDecimal!]
  liquidationPenalty: ethereumPrimaryBigDecimal
  liquidationPenalty_not: ethereumPrimaryBigDecimal
  liquidationPenalty_gt: ethereumPrimaryBigDecimal
  liquidationPenalty_lt: ethereumPrimaryBigDecimal
  liquidationPenalty_gte: ethereumPrimaryBigDecimal
  liquidationPenalty_lte: ethereumPrimaryBigDecimal
  liquidationPenalty_in: [ethereumPrimaryBigDecimal!]
  liquidationPenalty_not_in: [ethereumPrimaryBigDecimal!]
  canIsolate: Boolean
  canIsolate_not: Boolean
  canIsolate_in: [Boolean!]
  canIsolate_not_in: [Boolean!]
  createdTimestamp: BigInt
  createdTimestamp_not: BigInt
  createdTimestamp_gt: BigInt
  createdTimestamp_lt: BigInt
  createdTimestamp_gte: BigInt
  createdTimestamp_lte: BigInt
  createdTimestamp_in: [BigInt!]
  createdTimestamp_not_in: [BigInt!]
  createdBlockNumber: BigInt
  createdBlockNumber_not: BigInt
  createdBlockNumber_gt: BigInt
  createdBlockNumber_lt: BigInt
  createdBlockNumber_gte: BigInt
  createdBlockNumber_lte: BigInt
  createdBlockNumber_in: [BigInt!]
  createdBlockNumber_not_in: [BigInt!]
  oracle: String
  oracle_not: String
  oracle_gt: String
  oracle_lt: String
  oracle_gte: String
  oracle_lte: String
  oracle_in: [String!]
  oracle_not_in: [String!]
  oracle_contains: String
  oracle_contains_nocase: String
  oracle_not_contains: String
  oracle_not_contains_nocase: String
  oracle_starts_with: String
  oracle_starts_with_nocase: String
  oracle_not_starts_with: String
  oracle_not_starts_with_nocase: String
  oracle_ends_with: String
  oracle_ends_with_nocase: String
  oracle_not_ends_with: String
  oracle_not_ends_with_nocase: String
  oracle_: ethereumPrimaryOracle_filter
  relation: ethereumPrimaryBytes
  relation_not: ethereumPrimaryBytes
  relation_gt: ethereumPrimaryBytes
  relation_lt: ethereumPrimaryBytes
  relation_gte: ethereumPrimaryBytes
  relation_lte: ethereumPrimaryBytes
  relation_in: [ethereumPrimaryBytes!]
  relation_not_in: [ethereumPrimaryBytes!]
  relation_contains: ethereumPrimaryBytes
  relation_not_contains: ethereumPrimaryBytes
  rewardTokens: [String!]
  rewardTokens_not: [String!]
  rewardTokens_contains: [String!]
  rewardTokens_contains_nocase: [String!]
  rewardTokens_not_contains: [String!]
  rewardTokens_not_contains_nocase: [String!]
  rewardTokens_: ethereumPrimaryRewardToken_filter
  rewardTokenEmissionsAmount: [BigInt!]
  rewardTokenEmissionsAmount_not: [BigInt!]
  rewardTokenEmissionsAmount_contains: [BigInt!]
  rewardTokenEmissionsAmount_contains_nocase: [BigInt!]
  rewardTokenEmissionsAmount_not_contains: [BigInt!]
  rewardTokenEmissionsAmount_not_contains_nocase: [BigInt!]
  rewardTokenEmissionsUSD: [ethereumPrimaryBigDecimal!]
  rewardTokenEmissionsUSD_not: [ethereumPrimaryBigDecimal!]
  rewardTokenEmissionsUSD_contains: [ethereumPrimaryBigDecimal!]
  rewardTokenEmissionsUSD_contains_nocase: [ethereumPrimaryBigDecimal!]
  rewardTokenEmissionsUSD_not_contains: [ethereumPrimaryBigDecimal!]
  rewardTokenEmissionsUSD_not_contains_nocase: [ethereumPrimaryBigDecimal!]
  stakedOutputTokenAmount: BigInt
  stakedOutputTokenAmount_not: BigInt
  stakedOutputTokenAmount_gt: BigInt
  stakedOutputTokenAmount_lt: BigInt
  stakedOutputTokenAmount_gte: BigInt
  stakedOutputTokenAmount_lte: BigInt
  stakedOutputTokenAmount_in: [BigInt!]
  stakedOutputTokenAmount_not_in: [BigInt!]
  inputToken: String
  inputToken_not: String
  inputToken_gt: String
  inputToken_lt: String
  inputToken_gte: String
  inputToken_lte: String
  inputToken_in: [String!]
  inputToken_not_in: [String!]
  inputToken_contains: String
  inputToken_contains_nocase: String
  inputToken_not_contains: String
  inputToken_not_contains_nocase: String
  inputToken_starts_with: String
  inputToken_starts_with_nocase: String
  inputToken_not_starts_with: String
  inputToken_not_starts_with_nocase: String
  inputToken_ends_with: String
  inputToken_ends_with_nocase: String
  inputToken_not_ends_with: String
  inputToken_not_ends_with_nocase: String
  inputToken_: ethereumPrimaryToken_filter
  inputTokenBalance: BigInt
  inputTokenBalance_not: BigInt
  inputTokenBalance_gt: BigInt
  inputTokenBalance_lt: BigInt
  inputTokenBalance_gte: BigInt
  inputTokenBalance_lte: BigInt
  inputTokenBalance_in: [BigInt!]
  inputTokenBalance_not_in: [BigInt!]
  inputTokenPriceUSD: ethereumPrimaryBigDecimal
  inputTokenPriceUSD_not: ethereumPrimaryBigDecimal
  inputTokenPriceUSD_gt: ethereumPrimaryBigDecimal
  inputTokenPriceUSD_lt: ethereumPrimaryBigDecimal
  inputTokenPriceUSD_gte: ethereumPrimaryBigDecimal
  inputTokenPriceUSD_lte: ethereumPrimaryBigDecimal
  inputTokenPriceUSD_in: [ethereumPrimaryBigDecimal!]
  inputTokenPriceUSD_not_in: [ethereumPrimaryBigDecimal!]
  outputToken: String
  outputToken_not: String
  outputToken_gt: String
  outputToken_lt: String
  outputToken_gte: String
  outputToken_lte: String
  outputToken_in: [String!]
  outputToken_not_in: [String!]
  outputToken_contains: String
  outputToken_contains_nocase: String
  outputToken_not_contains: String
  outputToken_not_contains_nocase: String
  outputToken_starts_with: String
  outputToken_starts_with_nocase: String
  outputToken_not_starts_with: String
  outputToken_not_starts_with_nocase: String
  outputToken_ends_with: String
  outputToken_ends_with_nocase: String
  outputToken_not_ends_with: String
  outputToken_not_ends_with_nocase: String
  outputToken_: ethereumPrimaryToken_filter
  outputTokenSupply: BigInt
  outputTokenSupply_not: BigInt
  outputTokenSupply_gt: BigInt
  outputTokenSupply_lt: BigInt
  outputTokenSupply_gte: BigInt
  outputTokenSupply_lte: BigInt
  outputTokenSupply_in: [BigInt!]
  outputTokenSupply_not_in: [BigInt!]
  outputTokenPriceUSD: ethereumPrimaryBigDecimal
  outputTokenPriceUSD_not: ethereumPrimaryBigDecimal
  outputTokenPriceUSD_gt: ethereumPrimaryBigDecimal
  outputTokenPriceUSD_lt: ethereumPrimaryBigDecimal
  outputTokenPriceUSD_gte: ethereumPrimaryBigDecimal
  outputTokenPriceUSD_lte: ethereumPrimaryBigDecimal
  outputTokenPriceUSD_in: [ethereumPrimaryBigDecimal!]
  outputTokenPriceUSD_not_in: [ethereumPrimaryBigDecimal!]
  exchangeRate: ethereumPrimaryBigDecimal
  exchangeRate_not: ethereumPrimaryBigDecimal
  exchangeRate_gt: ethereumPrimaryBigDecimal
  exchangeRate_lt: ethereumPrimaryBigDecimal
  exchangeRate_gte: ethereumPrimaryBigDecimal
  exchangeRate_lte: ethereumPrimaryBigDecimal
  exchangeRate_in: [ethereumPrimaryBigDecimal!]
  exchangeRate_not_in: [ethereumPrimaryBigDecimal!]
  rates: [String!]
  rates_not: [String!]
  rates_contains: [String!]
  rates_contains_nocase: [String!]
  rates_not_contains: [String!]
  rates_not_contains_nocase: [String!]
  rates_: ethereumPrimaryInterestRate_filter
  reserves: ethereumPrimaryBigDecimal
  reserves_not: ethereumPrimaryBigDecimal
  reserves_gt: ethereumPrimaryBigDecimal
  reserves_lt: ethereumPrimaryBigDecimal
  reserves_gte: ethereumPrimaryBigDecimal
  reserves_lte: ethereumPrimaryBigDecimal
  reserves_in: [ethereumPrimaryBigDecimal!]
  reserves_not_in: [ethereumPrimaryBigDecimal!]
  reserveFactor: ethereumPrimaryBigDecimal
  reserveFactor_not: ethereumPrimaryBigDecimal
  reserveFactor_gt: ethereumPrimaryBigDecimal
  reserveFactor_lt: ethereumPrimaryBigDecimal
  reserveFactor_gte: ethereumPrimaryBigDecimal
  reserveFactor_lte: ethereumPrimaryBigDecimal
  reserveFactor_in: [ethereumPrimaryBigDecimal!]
  reserveFactor_not_in: [ethereumPrimaryBigDecimal!]
  borrowedToken: String
  borrowedToken_not: String
  borrowedToken_gt: String
  borrowedToken_lt: String
  borrowedToken_gte: String
  borrowedToken_lte: String
  borrowedToken_in: [String!]
  borrowedToken_not_in: [String!]
  borrowedToken_contains: String
  borrowedToken_contains_nocase: String
  borrowedToken_not_contains: String
  borrowedToken_not_contains_nocase: String
  borrowedToken_starts_with: String
  borrowedToken_starts_with_nocase: String
  borrowedToken_not_starts_with: String
  borrowedToken_not_starts_with_nocase: String
  borrowedToken_ends_with: String
  borrowedToken_ends_with_nocase: String
  borrowedToken_not_ends_with: String
  borrowedToken_not_ends_with_nocase: String
  borrowedToken_: ethereumPrimaryToken_filter
  variableBorrowedTokenBalance: BigInt
  variableBorrowedTokenBalance_not: BigInt
  variableBorrowedTokenBalance_gt: BigInt
  variableBorrowedTokenBalance_lt: BigInt
  variableBorrowedTokenBalance_gte: BigInt
  variableBorrowedTokenBalance_lte: BigInt
  variableBorrowedTokenBalance_in: [BigInt!]
  variableBorrowedTokenBalance_not_in: [BigInt!]
  stableBorrowedTokenBalance: BigInt
  stableBorrowedTokenBalance_not: BigInt
  stableBorrowedTokenBalance_gt: BigInt
  stableBorrowedTokenBalance_lt: BigInt
  stableBorrowedTokenBalance_gte: BigInt
  stableBorrowedTokenBalance_lte: BigInt
  stableBorrowedTokenBalance_in: [BigInt!]
  stableBorrowedTokenBalance_not_in: [BigInt!]
  indexLastUpdatedTimestamp: BigInt
  indexLastUpdatedTimestamp_not: BigInt
  indexLastUpdatedTimestamp_gt: BigInt
  indexLastUpdatedTimestamp_lt: BigInt
  indexLastUpdatedTimestamp_gte: BigInt
  indexLastUpdatedTimestamp_lte: BigInt
  indexLastUpdatedTimestamp_in: [BigInt!]
  indexLastUpdatedTimestamp_not_in: [BigInt!]
  supplyIndex: BigInt
  supplyIndex_not: BigInt
  supplyIndex_gt: BigInt
  supplyIndex_lt: BigInt
  supplyIndex_gte: BigInt
  supplyIndex_lte: BigInt
  supplyIndex_in: [BigInt!]
  supplyIndex_not_in: [BigInt!]
  supplyCap: BigInt
  supplyCap_not: BigInt
  supplyCap_gt: BigInt
  supplyCap_lt: BigInt
  supplyCap_gte: BigInt
  supplyCap_lte: BigInt
  supplyCap_in: [BigInt!]
  supplyCap_not_in: [BigInt!]
  borrowIndex: BigInt
  borrowIndex_not: BigInt
  borrowIndex_gt: BigInt
  borrowIndex_lt: BigInt
  borrowIndex_gte: BigInt
  borrowIndex_lte: BigInt
  borrowIndex_in: [BigInt!]
  borrowIndex_not_in: [BigInt!]
  borrowCap: BigInt
  borrowCap_not: BigInt
  borrowCap_gt: BigInt
  borrowCap_lt: BigInt
  borrowCap_gte: BigInt
  borrowCap_lte: BigInt
  borrowCap_in: [BigInt!]
  borrowCap_not_in: [BigInt!]
  totalValueLockedUSD: ethereumPrimaryBigDecimal
  totalValueLockedUSD_not: ethereumPrimaryBigDecimal
  totalValueLockedUSD_gt: ethereumPrimaryBigDecimal
  totalValueLockedUSD_lt: ethereumPrimaryBigDecimal
  totalValueLockedUSD_gte: ethereumPrimaryBigDecimal
  totalValueLockedUSD_lte: ethereumPrimaryBigDecimal
  totalValueLockedUSD_in: [ethereumPrimaryBigDecimal!]
  totalValueLockedUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeSupplySideRevenueUSD: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_not: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_gt: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_lt: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_gte: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_lte: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeSupplySideRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeProtocolSideRevenueUSD: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_not: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_gt: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_lt: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_gte: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_lte: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeProtocolSideRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeTotalRevenueUSD: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_not: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_gt: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_lt: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_gte: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_lte: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeTotalRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  revenueDetail: String
  revenueDetail_not: String
  revenueDetail_gt: String
  revenueDetail_lt: String
  revenueDetail_gte: String
  revenueDetail_lte: String
  revenueDetail_in: [String!]
  revenueDetail_not_in: [String!]
  revenueDetail_contains: String
  revenueDetail_contains_nocase: String
  revenueDetail_not_contains: String
  revenueDetail_not_contains_nocase: String
  revenueDetail_starts_with: String
  revenueDetail_starts_with_nocase: String
  revenueDetail_not_starts_with: String
  revenueDetail_not_starts_with_nocase: String
  revenueDetail_ends_with: String
  revenueDetail_ends_with_nocase: String
  revenueDetail_not_ends_with: String
  revenueDetail_not_ends_with_nocase: String
  revenueDetail_: ethereumPrimaryRevenueDetail_filter
  totalDepositBalanceUSD: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_not: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_gt: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_lt: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_gte: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_lte: ethereumPrimaryBigDecimal
  totalDepositBalanceUSD_in: [ethereumPrimaryBigDecimal!]
  totalDepositBalanceUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeDepositUSD: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_not: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_gt: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_lt: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_gte: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_lte: ethereumPrimaryBigDecimal
  cumulativeDepositUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeDepositUSD_not_in: [ethereumPrimaryBigDecimal!]
  totalBorrowBalanceUSD: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_not: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_gt: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_lt: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_gte: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_lte: ethereumPrimaryBigDecimal
  totalBorrowBalanceUSD_in: [ethereumPrimaryBigDecimal!]
  totalBorrowBalanceUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeBorrowUSD: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_not: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_gt: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_lt: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_gte: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_lte: ethereumPrimaryBigDecimal
  cumulativeBorrowUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeBorrowUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeLiquidateUSD: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_not: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_gt: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_lt: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_gte: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_lte: ethereumPrimaryBigDecimal
  cumulativeLiquidateUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeLiquidateUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeTransferUSD: ethereumPrimaryBigDecimal
  cumulativeTransferUSD_not: ethereumPrimaryBigDecimal
  cumulativeTransferUSD_gt: ethereumPrimaryBigDecimal
  cumulativeTransferUSD_lt: ethereumPrimaryBigDecimal
  cumulativeTransferUSD_gte: ethereumPrimaryBigDecimal
  cumulativeTransferUSD_lte: ethereumPrimaryBigDecimal
  cumulativeTransferUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeTransferUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeFlashloanUSD: ethereumPrimaryBigDecimal
  cumulativeFlashloanUSD_not: ethereumPrimaryBigDecimal
  cumulativeFlashloanUSD_gt: ethereumPrimaryBigDecimal
  cumulativeFlashloanUSD_lt: ethereumPrimaryBigDecimal
  cumulativeFlashloanUSD_gte: ethereumPrimaryBigDecimal
  cumulativeFlashloanUSD_lte: ethereumPrimaryBigDecimal
  cumulativeFlashloanUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeFlashloanUSD_not_in: [ethereumPrimaryBigDecimal!]
  transactionCount: Int
  transactionCount_not: Int
  transactionCount_gt: Int
  transactionCount_lt: Int
  transactionCount_gte: Int
  transactionCount_lte: Int
  transactionCount_in: [Int!]
  transactionCount_not_in: [Int!]
  depositCount: Int
  depositCount_not: Int
  depositCount_gt: Int
  depositCount_lt: Int
  depositCount_gte: Int
  depositCount_lte: Int
  depositCount_in: [Int!]
  depositCount_not_in: [Int!]
  withdrawCount: Int
  withdrawCount_not: Int
  withdrawCount_gt: Int
  withdrawCount_lt: Int
  withdrawCount_gte: Int
  withdrawCount_lte: Int
  withdrawCount_in: [Int!]
  withdrawCount_not_in: [Int!]
  borrowCount: Int
  borrowCount_not: Int
  borrowCount_gt: Int
  borrowCount_lt: Int
  borrowCount_gte: Int
  borrowCount_lte: Int
  borrowCount_in: [Int!]
  borrowCount_not_in: [Int!]
  repayCount: Int
  repayCount_not: Int
  repayCount_gt: Int
  repayCount_lt: Int
  repayCount_gte: Int
  repayCount_lte: Int
  repayCount_in: [Int!]
  repayCount_not_in: [Int!]
  liquidationCount: Int
  liquidationCount_not: Int
  liquidationCount_gt: Int
  liquidationCount_lt: Int
  liquidationCount_gte: Int
  liquidationCount_lte: Int
  liquidationCount_in: [Int!]
  liquidationCount_not_in: [Int!]
  transferCount: Int
  transferCount_not: Int
  transferCount_gt: Int
  transferCount_lt: Int
  transferCount_gte: Int
  transferCount_lte: Int
  transferCount_in: [Int!]
  transferCount_not_in: [Int!]
  flashloanCount: Int
  flashloanCount_not: Int
  flashloanCount_gt: Int
  flashloanCount_lt: Int
  flashloanCount_gte: Int
  flashloanCount_lte: Int
  flashloanCount_in: [Int!]
  flashloanCount_not_in: [Int!]
  cumulativeUniqueUsers: Int
  cumulativeUniqueUsers_not: Int
  cumulativeUniqueUsers_gt: Int
  cumulativeUniqueUsers_lt: Int
  cumulativeUniqueUsers_gte: Int
  cumulativeUniqueUsers_lte: Int
  cumulativeUniqueUsers_in: [Int!]
  cumulativeUniqueUsers_not_in: [Int!]
  cumulativeUniqueDepositors: Int
  cumulativeUniqueDepositors_not: Int
  cumulativeUniqueDepositors_gt: Int
  cumulativeUniqueDepositors_lt: Int
  cumulativeUniqueDepositors_gte: Int
  cumulativeUniqueDepositors_lte: Int
  cumulativeUniqueDepositors_in: [Int!]
  cumulativeUniqueDepositors_not_in: [Int!]
  cumulativeUniqueBorrowers: Int
  cumulativeUniqueBorrowers_not: Int
  cumulativeUniqueBorrowers_gt: Int
  cumulativeUniqueBorrowers_lt: Int
  cumulativeUniqueBorrowers_gte: Int
  cumulativeUniqueBorrowers_lte: Int
  cumulativeUniqueBorrowers_in: [Int!]
  cumulativeUniqueBorrowers_not_in: [Int!]
  cumulativeUniqueLiquidators: Int
  cumulativeUniqueLiquidators_not: Int
  cumulativeUniqueLiquidators_gt: Int
  cumulativeUniqueLiquidators_lt: Int
  cumulativeUniqueLiquidators_gte: Int
  cumulativeUniqueLiquidators_lte: Int
  cumulativeUniqueLiquidators_in: [Int!]
  cumulativeUniqueLiquidators_not_in: [Int!]
  cumulativeUniqueLiquidatees: Int
  cumulativeUniqueLiquidatees_not: Int
  cumulativeUniqueLiquidatees_gt: Int
  cumulativeUniqueLiquidatees_lt: Int
  cumulativeUniqueLiquidatees_gte: Int
  cumulativeUniqueLiquidatees_lte: Int
  cumulativeUniqueLiquidatees_in: [Int!]
  cumulativeUniqueLiquidatees_not_in: [Int!]
  cumulativeUniqueTransferrers: Int
  cumulativeUniqueTransferrers_not: Int
  cumulativeUniqueTransferrers_gt: Int
  cumulativeUniqueTransferrers_lt: Int
  cumulativeUniqueTransferrers_gte: Int
  cumulativeUniqueTransferrers_lte: Int
  cumulativeUniqueTransferrers_in: [Int!]
  cumulativeUniqueTransferrers_not_in: [Int!]
  cumulativeUniqueFlashloaners: Int
  cumulativeUniqueFlashloaners_not: Int
  cumulativeUniqueFlashloaners_gt: Int
  cumulativeUniqueFlashloaners_lt: Int
  cumulativeUniqueFlashloaners_gte: Int
  cumulativeUniqueFlashloaners_lte: Int
  cumulativeUniqueFlashloaners_in: [Int!]
  cumulativeUniqueFlashloaners_not_in: [Int!]
  positions_: ethereumPrimaryPosition_filter
  positionCount: Int
  positionCount_not: Int
  positionCount_gt: Int
  positionCount_lt: Int
  positionCount_gte: Int
  positionCount_lte: Int
  positionCount_in: [Int!]
  positionCount_not_in: [Int!]
  openPositionCount: Int
  openPositionCount_not: Int
  openPositionCount_gt: Int
  openPositionCount_lt: Int
  openPositionCount_gte: Int
  openPositionCount_lte: Int
  openPositionCount_in: [Int!]
  openPositionCount_not_in: [Int!]
  closedPositionCount: Int
  closedPositionCount_not: Int
  closedPositionCount_gt: Int
  closedPositionCount_lt: Int
  closedPositionCount_gte: Int
  closedPositionCount_lte: Int
  closedPositionCount_in: [Int!]
  closedPositionCount_not_in: [Int!]
  lendingPositionCount: Int
  lendingPositionCount_not: Int
  lendingPositionCount_gt: Int
  lendingPositionCount_lt: Int
  lendingPositionCount_gte: Int
  lendingPositionCount_lte: Int
  lendingPositionCount_in: [Int!]
  lendingPositionCount_not_in: [Int!]
  borrowingPositionCount: Int
  borrowingPositionCount_not: Int
  borrowingPositionCount_gt: Int
  borrowingPositionCount_lt: Int
  borrowingPositionCount_gte: Int
  borrowingPositionCount_lte: Int
  borrowingPositionCount_in: [Int!]
  borrowingPositionCount_not_in: [Int!]
  dailySnapshots_: ethereumPrimaryMarketDailySnapshot_filter
  hourlySnapshots_: ethereumPrimaryMarketHourlySnapshot_filter
  deposits_: ethereumPrimaryDeposit_filter
  withdraws_: ethereumPrimaryWithdraw_filter
  borrows_: ethereumPrimaryBorrow_filter
  repays_: ethereumPrimaryRepay_filter
  liquidates_: ethereumPrimaryLiquidate_filter
  transfers_: ethereumPrimaryTransfer_filter
  flashloans_: ethereumPrimaryFlashloan_filter
  _baseTrackingBorrowSpeed: BigInt
  _baseTrackingBorrowSpeed_not: BigInt
  _baseTrackingBorrowSpeed_gt: BigInt
  _baseTrackingBorrowSpeed_lt: BigInt
  _baseTrackingBorrowSpeed_gte: BigInt
  _baseTrackingBorrowSpeed_lte: BigInt
  _baseTrackingBorrowSpeed_in: [BigInt!]
  _baseTrackingBorrowSpeed_not_in: [BigInt!]
  _baseTrackingSupplySpeed: BigInt
  _baseTrackingSupplySpeed_not: BigInt
  _baseTrackingSupplySpeed_gt: BigInt
  _baseTrackingSupplySpeed_lt: BigInt
  _baseTrackingSupplySpeed_gte: BigInt
  _baseTrackingSupplySpeed_lte: BigInt
  _baseTrackingSupplySpeed_in: [BigInt!]
  _baseTrackingSupplySpeed_not_in: [BigInt!]
  _vToken: String
  _vToken_not: String
  _vToken_gt: String
  _vToken_lt: String
  _vToken_gte: String
  _vToken_lte: String
  _vToken_in: [String!]
  _vToken_not_in: [String!]
  _vToken_contains: String
  _vToken_contains_nocase: String
  _vToken_not_contains: String
  _vToken_not_contains_nocase: String
  _vToken_starts_with: String
  _vToken_starts_with_nocase: String
  _vToken_not_starts_with: String
  _vToken_not_starts_with_nocase: String
  _vToken_ends_with: String
  _vToken_ends_with_nocase: String
  _vToken_not_ends_with: String
  _vToken_not_ends_with_nocase: String
  _vToken_: ethereumPrimaryToken_filter
  _sToken: String
  _sToken_not: String
  _sToken_gt: String
  _sToken_lt: String
  _sToken_gte: String
  _sToken_lte: String
  _sToken_in: [String!]
  _sToken_not_in: [String!]
  _sToken_contains: String
  _sToken_contains_nocase: String
  _sToken_not_contains: String
  _sToken_not_contains_nocase: String
  _sToken_starts_with: String
  _sToken_starts_with_nocase: String
  _sToken_not_starts_with: String
  _sToken_not_starts_with_nocase: String
  _sToken_ends_with: String
  _sToken_ends_with_nocase: String
  _sToken_not_ends_with: String
  _sToken_not_ends_with_nocase: String
  _sToken_: ethereumPrimaryToken_filter
  _prePauseState: [Boolean!]
  _prePauseState_not: [Boolean!]
  _prePauseState_contains: [Boolean!]
  _prePauseState_contains_nocase: [Boolean!]
  _prePauseState_not_contains: [Boolean!]
  _prePauseState_not_contains_nocase: [Boolean!]
  _lastRewardsUpdated: BigInt
  _lastRewardsUpdated_not: BigInt
  _lastRewardsUpdated_gt: BigInt
  _lastRewardsUpdated_lt: BigInt
  _lastRewardsUpdated_gte: BigInt
  _lastRewardsUpdated_lte: BigInt
  _lastRewardsUpdated_in: [BigInt!]
  _lastRewardsUpdated_not_in: [BigInt!]
  _liquidationProtocolFee: ethereumPrimaryBigDecimal
  _liquidationProtocolFee_not: ethereumPrimaryBigDecimal
  _liquidationProtocolFee_gt: ethereumPrimaryBigDecimal
  _liquidationProtocolFee_lt: ethereumPrimaryBigDecimal
  _liquidationProtocolFee_gte: ethereumPrimaryBigDecimal
  _liquidationProtocolFee_lte: ethereumPrimaryBigDecimal
  _liquidationProtocolFee_in: [ethereumPrimaryBigDecimal!]
  _liquidationProtocolFee_not_in: [ethereumPrimaryBigDecimal!]
  _siloedBorrowing: Boolean
  _siloedBorrowing_not: Boolean
  _siloedBorrowing_in: [Boolean!]
  _siloedBorrowing_not_in: [Boolean!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryMarket_filter]
  or: [ethereumPrimaryMarket_filter]
}

enum ethereumPrimaryMarket_orderBy {
  id
  protocol
  protocol__id
  protocol__protocol
  protocol__name
  protocol__slug
  protocol__schemaVersion
  protocol__subgraphVersion
  protocol__methodologyVersion
  protocol__network
  protocol__type
  protocol__lendingType
  protocol__lenderPermissionType
  protocol__borrowerPermissionType
  protocol__poolCreatorPermissionType
  protocol__riskType
  protocol__collateralizationType
  protocol__cumulativeUniqueUsers
  protocol__cumulativeUniqueDepositors
  protocol__cumulativeUniqueBorrowers
  protocol__cumulativeUniqueLiquidators
  protocol__cumulativeUniqueLiquidatees
  protocol__totalValueLockedUSD
  protocol__protocolControlledValueUSD
  protocol__cumulativeSupplySideRevenueUSD
  protocol__cumulativeProtocolSideRevenueUSD
  protocol__cumulativeTotalRevenueUSD
  protocol__totalDepositBalanceUSD
  protocol__cumulativeDepositUSD
  protocol__totalBorrowBalanceUSD
  protocol__cumulativeBorrowUSD
  protocol__cumulativeLiquidateUSD
  protocol__totalPoolCount
  protocol__openPositionCount
  protocol__cumulativePositionCount
  protocol__transactionCount
  protocol__depositCount
  protocol__withdrawCount
  protocol__borrowCount
  protocol__repayCount
  protocol__liquidationCount
  protocol__transferCount
  protocol__flashloanCount
  name
  isActive
  canBorrowFrom
  canUseAsCollateral
  maximumLTV
  liquidationThreshold
  liquidationPenalty
  canIsolate
  createdTimestamp
  createdBlockNumber
  oracle
  oracle__id
  oracle__oracleAddress
  oracle__blockCreated
  oracle__timestampCreated
  oracle__isActive
  oracle__isUSD
  oracle__hashEnded
  oracle__oracleSource
  relation
  rewardTokens
  rewardTokenEmissionsAmount
  rewardTokenEmissionsUSD
  stakedOutputTokenAmount
  inputToken
  inputToken__id
  inputToken__name
  inputToken__symbol
  inputToken__decimals
  inputToken__lastPriceUSD
  inputToken__lastPriceBlockNumber
  inputToken__type
  inputToken___iavsTokenType
  inputTokenBalance
  inputTokenPriceUSD
  outputToken
  outputToken__id
  outputToken__name
  outputToken__symbol
  outputToken__decimals
  outputToken__lastPriceUSD
  outputToken__lastPriceBlockNumber
  outputToken__type
  outputToken___iavsTokenType
  outputTokenSupply
  outputTokenPriceUSD
  exchangeRate
  rates
  reserves
  reserveFactor
  borrowedToken
  borrowedToken__id
  borrowedToken__name
  borrowedToken__symbol
  borrowedToken__decimals
  borrowedToken__lastPriceUSD
  borrowedToken__lastPriceBlockNumber
  borrowedToken__type
  borrowedToken___iavsTokenType
  variableBorrowedTokenBalance
  stableBorrowedTokenBalance
  indexLastUpdatedTimestamp
  supplyIndex
  supplyCap
  borrowIndex
  borrowCap
  totalValueLockedUSD
  cumulativeSupplySideRevenueUSD
  cumulativeProtocolSideRevenueUSD
  cumulativeTotalRevenueUSD
  revenueDetail
  revenueDetail__id
  totalDepositBalanceUSD
  cumulativeDepositUSD
  totalBorrowBalanceUSD
  cumulativeBorrowUSD
  cumulativeLiquidateUSD
  cumulativeTransferUSD
  cumulativeFlashloanUSD
  transactionCount
  depositCount
  withdrawCount
  borrowCount
  repayCount
  liquidationCount
  transferCount
  flashloanCount
  cumulativeUniqueUsers
  cumulativeUniqueDepositors
  cumulativeUniqueBorrowers
  cumulativeUniqueLiquidators
  cumulativeUniqueLiquidatees
  cumulativeUniqueTransferrers
  cumulativeUniqueFlashloaners
  positions
  positionCount
  openPositionCount
  closedPositionCount
  lendingPositionCount
  borrowingPositionCount
  dailySnapshots
  hourlySnapshots
  deposits
  withdraws
  borrows
  repays
  liquidates
  transfers
  flashloans
  _baseTrackingBorrowSpeed
  _baseTrackingSupplySpeed
  _vToken
  _vToken__id
  _vToken__name
  _vToken__symbol
  _vToken__decimals
  _vToken__lastPriceUSD
  _vToken__lastPriceBlockNumber
  _vToken__type
  _vToken___iavsTokenType
  _sToken
  _sToken__id
  _sToken__name
  _sToken__symbol
  _sToken__decimals
  _sToken__lastPriceUSD
  _sToken__lastPriceBlockNumber
  _sToken__type
  _sToken___iavsTokenType
  _prePauseState
  _lastRewardsUpdated
  _liquidationProtocolFee
  _siloedBorrowing
}

enum ethereumPrimaryNetwork {
  ARBITRUM_ONE
  ARWEAVE_MAINNET
  AURORA
  AVALANCHE
  BOBA
  BSC
  CELO
  COSMOS
  CRONOS
  MAINNET
  FANTOM
  FUSE
  HARMONY
  JUNO
  MOONBEAM
  MOONRIVER
  NEAR_MAINNET
  OPTIMISM
  OSMOSIS
  MATIC
  GNOSIS
  ANDROMEDA
  BASE
}

type ethereumPrimaryOracle {
  """ { Market Address }{ Token Address } """
  id: ethereumPrimaryBytes!
  oracleAddress: ethereumPrimaryBytes!
  """ The market that this oracle is used for pricing """
  market: ethereumPrimaryMarket!
  """ The block this oracle was adopted for a market """
  blockCreated: BigInt!
  """ The timestamp this oracle was adopted for a market """
  timestampCreated: BigInt!
  """ Is the Oracle currently used as the source of truth for a market"""
  isActive: Boolean!
  """ True if the oracle returns prices in USD (e.g. generally the other case is the network's native token) 
  """
  isUSD: Boolean!
  """ The hash where the oracle was no longer used """
  hashEnded: ethereumPrimaryBytes
  """ The Protocol that is providing the oracle (nullable if non-standard source)
  """
  oracleSource: ethereumPrimaryOracleSource
}

enum ethereumPrimaryOracleSource {
  UNISWAP
  BALANCER
  CHAINLINK
  YEARN
  SUSHISWAP
  CURVE
}

input ethereumPrimaryOracle_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  oracleAddress: ethereumPrimaryBytes
  oracleAddress_not: ethereumPrimaryBytes
  oracleAddress_gt: ethereumPrimaryBytes
  oracleAddress_lt: ethereumPrimaryBytes
  oracleAddress_gte: ethereumPrimaryBytes
  oracleAddress_lte: ethereumPrimaryBytes
  oracleAddress_in: [ethereumPrimaryBytes!]
  oracleAddress_not_in: [ethereumPrimaryBytes!]
  oracleAddress_contains: ethereumPrimaryBytes
  oracleAddress_not_contains: ethereumPrimaryBytes
  market: String
  market_not: String
  market_gt: String
  market_lt: String
  market_gte: String
  market_lte: String
  market_in: [String!]
  market_not_in: [String!]
  market_contains: String
  market_contains_nocase: String
  market_not_contains: String
  market_not_contains_nocase: String
  market_starts_with: String
  market_starts_with_nocase: String
  market_not_starts_with: String
  market_not_starts_with_nocase: String
  market_ends_with: String
  market_ends_with_nocase: String
  market_not_ends_with: String
  market_not_ends_with_nocase: String
  market_: ethereumPrimaryMarket_filter
  blockCreated: BigInt
  blockCreated_not: BigInt
  blockCreated_gt: BigInt
  blockCreated_lt: BigInt
  blockCreated_gte: BigInt
  blockCreated_lte: BigInt
  blockCreated_in: [BigInt!]
  blockCreated_not_in: [BigInt!]
  timestampCreated: BigInt
  timestampCreated_not: BigInt
  timestampCreated_gt: BigInt
  timestampCreated_lt: BigInt
  timestampCreated_gte: BigInt
  timestampCreated_lte: BigInt
  timestampCreated_in: [BigInt!]
  timestampCreated_not_in: [BigInt!]
  isActive: Boolean
  isActive_not: Boolean
  isActive_in: [Boolean!]
  isActive_not_in: [Boolean!]
  isUSD: Boolean
  isUSD_not: Boolean
  isUSD_in: [Boolean!]
  isUSD_not_in: [Boolean!]
  hashEnded: ethereumPrimaryBytes
  hashEnded_not: ethereumPrimaryBytes
  hashEnded_gt: ethereumPrimaryBytes
  hashEnded_lt: ethereumPrimaryBytes
  hashEnded_gte: ethereumPrimaryBytes
  hashEnded_lte: ethereumPrimaryBytes
  hashEnded_in: [ethereumPrimaryBytes!]
  hashEnded_not_in: [ethereumPrimaryBytes!]
  hashEnded_contains: ethereumPrimaryBytes
  hashEnded_not_contains: ethereumPrimaryBytes
  oracleSource: ethereumPrimaryOracleSource
  oracleSource_not: ethereumPrimaryOracleSource
  oracleSource_in: [ethereumPrimaryOracleSource!]
  oracleSource_not_in: [ethereumPrimaryOracleSource!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryOracle_filter]
  or: [ethereumPrimaryOracle_filter]
}

enum ethereumPrimaryOracle_orderBy {
  id
  oracleAddress
  market
  market__id
  market__name
  market__isActive
  market__canBorrowFrom
  market__canUseAsCollateral
  market__maximumLTV
  market__liquidationThreshold
  market__liquidationPenalty
  market__canIsolate
  market__createdTimestamp
  market__createdBlockNumber
  market__relation
  market__stakedOutputTokenAmount
  market__inputTokenBalance
  market__inputTokenPriceUSD
  market__outputTokenSupply
  market__outputTokenPriceUSD
  market__exchangeRate
  market__reserves
  market__reserveFactor
  market__variableBorrowedTokenBalance
  market__stableBorrowedTokenBalance
  market__indexLastUpdatedTimestamp
  market__supplyIndex
  market__supplyCap
  market__borrowIndex
  market__borrowCap
  market__totalValueLockedUSD
  market__cumulativeSupplySideRevenueUSD
  market__cumulativeProtocolSideRevenueUSD
  market__cumulativeTotalRevenueUSD
  market__totalDepositBalanceUSD
  market__cumulativeDepositUSD
  market__totalBorrowBalanceUSD
  market__cumulativeBorrowUSD
  market__cumulativeLiquidateUSD
  market__cumulativeTransferUSD
  market__cumulativeFlashloanUSD
  market__transactionCount
  market__depositCount
  market__withdrawCount
  market__borrowCount
  market__repayCount
  market__liquidationCount
  market__transferCount
  market__flashloanCount
  market__cumulativeUniqueUsers
  market__cumulativeUniqueDepositors
  market__cumulativeUniqueBorrowers
  market__cumulativeUniqueLiquidators
  market__cumulativeUniqueLiquidatees
  market__cumulativeUniqueTransferrers
  market__cumulativeUniqueFlashloaners
  market__positionCount
  market__openPositionCount
  market__closedPositionCount
  market__lendingPositionCount
  market__borrowingPositionCount
  market___baseTrackingBorrowSpeed
  market___baseTrackingSupplySpeed
  market___lastRewardsUpdated
  market___liquidationProtocolFee
  market___siloedBorrowing
  blockCreated
  timestampCreated
  isActive
  isUSD
  hashEnded
  oracleSource
}

"""Defines the order direction, either ascending or descending"""
enum ethereumPrimaryOrderDirection {
  asc
  desc
}

enum ethereumPrimaryPermissionType {
  """ Only users that have been whitelisted can interact. e.g. Only approved institutions can borrow 
  """
  WHITELIST_ONLY
  """ To interact a user must be KYC'd """
  PERMISSIONED
  """ Protocols that do not KYC. Can be used by any account """
  PERMISSIONLESS
  """ Only the protocol admin address can make do the defined actions """
  ADMIN
}

type ethereumPrimaryPosition {
  """ { Account address }-{ Market address }-{ Position Side }-{ Optional: Interest Rate Type}-{ Counter } 
  """
  id: ID!
  """ Account that owns this position """
  account: ethereumPrimaryAccount!
  """ The market in which this position was opened """
  market: ethereumPrimaryMarket!
  """ The asset in which this position was opened with """
  asset: ethereumPrimaryToken!
  """ The hash of the transaction that opened this position """
  hashOpened: ethereumPrimaryBytes!
  """ The hash of the transaction that closed this position """
  hashClosed: ethereumPrimaryBytes
  """ Block number of when the position was opened """
  blockNumberOpened: BigInt!
  """ Timestamp when the position was opened """
  timestampOpened: BigInt!
  """ Block number of when the position was closed (0 if still open) """
  blockNumberClosed: BigInt
  """ Timestamp when the position was closed (0 if still open) """
  timestampClosed: BigInt
  """ Side of the position (either lender or borrower) """
  side: ethereumPrimaryPositionSide!
  """ Type of interest rate used for this position (stable or variable). Generally for borrow side positions.
  """
  type: ethereumPrimaryInterestRateType
  """ Whether this position has been enabled as a collateral (only applies to LENDER positions). For protocols (e.g. MakerDAO) that doesn't require enabling explicitly, this will always be true. 
  """
  isCollateral: Boolean
  """ Whether this position is being isolated from risk from other positions (only applies to LENDER positions). For protocols (e.g. Aave V3) this reduces risk exposure from other user positions. 
  """
  isIsolated: Boolean
  """ Token balance in this position, in native amounts """
  balance: BigInt!
  """ The token balance of this position without interest generated (Used to calculate interest generated on a position) 
  """
  principal: BigInt
  """ Number of deposits related to this position """
  depositCount: Int!
  """ All deposit events of this position """
  deposits(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryDeposit_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryDeposit_filter): [ethereumPrimaryDeposit!]!
  """ Number of withdrawals related to this position """
  withdrawCount: Int!
  """ All withdraw events of this position """
  withdraws(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryWithdraw_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryWithdraw_filter): [ethereumPrimaryWithdraw!]!
  """ Number of borrows related to this position """
  borrowCount: Int!
  """ All borrow events of this position """
  borrows(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryBorrow_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryBorrow_filter): [ethereumPrimaryBorrow!]!
  """ Number of repays related to this position """
  repayCount: Int!
  """ All repay events of this position """
  repays(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryRepay_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryRepay_filter): [ethereumPrimaryRepay!]!
  """ Number of liquidations related to this position (incremented when this position is liquidated) 
  """
  liquidationCount: Int!
  """ Liquidation event related to this position (if exists) """
  liquidations(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryLiquidate_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryLiquidate_filter): [ethereumPrimaryLiquidate!]!
  """ Number of times this position has transferred """
  transferredCount: Int!
  """ Number of times this position has received a transfer """
  receivedCount: Int!
  """ All transfer events related to this position """
  transfers(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryTransfer_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryTransfer_filter): [ethereumPrimaryTransfer!]!
  """ Position daily snapshots for open positions """
  snapshots(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryPositionSnapshot_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryPositionSnapshot_filter): [ethereumPrimaryPositionSnapshot!]!
  """ efficient mode flag """
  _eMode: Boolean
}

enum ethereumPrimaryPositionSide {
  """ Position opened as a lender (used as collateral) """
  COLLATERAL
  """ Position opened as a borrower """
  BORROWER
}

type ethereumPrimaryPositionSnapshot {
  """ { Position ID }-{ Transaction hash }-{ Log index } """
  id: ID!
  """ Transaction hash of the transaction that triggered this snapshot """
  hash: ethereumPrimaryBytes!
  """ Event log index. For transactions that don't emit event, create arbitrary index starting from 0 
  """
  logIndex: Int!
  """ Nonce of the transaction that triggered this snapshot """
  nonce: BigInt!
  """ Account that owns this position """
  account: ethereumPrimaryAccount!
  """ Position of this snapshot """
  position: ethereumPrimaryPosition!
  """ Token balance in this position, in native amounts """
  balance: BigInt!
  """ Token balance in this position, in USD """
  balanceUSD: ethereumPrimaryBigDecimal!
  """ Block number of this snapshot """
  blockNumber: BigInt!
  """ Timestamp of this snapshot """
  timestamp: BigInt!
  """ The principal value without interest accrued. Used to calculate interest per position. 
  """
  principal: BigInt
  """ Base borrow OR supply index (based on the position side). Used to calculate interest across snapshots. 
  """
  index: BigInt
}

input ethereumPrimaryPositionSnapshot_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  hash: ethereumPrimaryBytes
  hash_not: ethereumPrimaryBytes
  hash_gt: ethereumPrimaryBytes
  hash_lt: ethereumPrimaryBytes
  hash_gte: ethereumPrimaryBytes
  hash_lte: ethereumPrimaryBytes
  hash_in: [ethereumPrimaryBytes!]
  hash_not_in: [ethereumPrimaryBytes!]
  hash_contains: ethereumPrimaryBytes
  hash_not_contains: ethereumPrimaryBytes
  logIndex: Int
  logIndex_not: Int
  logIndex_gt: Int
  logIndex_lt: Int
  logIndex_gte: Int
  logIndex_lte: Int
  logIndex_in: [Int!]
  logIndex_not_in: [Int!]
  nonce: BigInt
  nonce_not: BigInt
  nonce_gt: BigInt
  nonce_lt: BigInt
  nonce_gte: BigInt
  nonce_lte: BigInt
  nonce_in: [BigInt!]
  nonce_not_in: [BigInt!]
  account: String
  account_not: String
  account_gt: String
  account_lt: String
  account_gte: String
  account_lte: String
  account_in: [String!]
  account_not_in: [String!]
  account_contains: String
  account_contains_nocase: String
  account_not_contains: String
  account_not_contains_nocase: String
  account_starts_with: String
  account_starts_with_nocase: String
  account_not_starts_with: String
  account_not_starts_with_nocase: String
  account_ends_with: String
  account_ends_with_nocase: String
  account_not_ends_with: String
  account_not_ends_with_nocase: String
  account_: ethereumPrimaryAccount_filter
  position: String
  position_not: String
  position_gt: String
  position_lt: String
  position_gte: String
  position_lte: String
  position_in: [String!]
  position_not_in: [String!]
  position_contains: String
  position_contains_nocase: String
  position_not_contains: String
  position_not_contains_nocase: String
  position_starts_with: String
  position_starts_with_nocase: String
  position_not_starts_with: String
  position_not_starts_with_nocase: String
  position_ends_with: String
  position_ends_with_nocase: String
  position_not_ends_with: String
  position_not_ends_with_nocase: String
  position_: ethereumPrimaryPosition_filter
  balance: BigInt
  balance_not: BigInt
  balance_gt: BigInt
  balance_lt: BigInt
  balance_gte: BigInt
  balance_lte: BigInt
  balance_in: [BigInt!]
  balance_not_in: [BigInt!]
  balanceUSD: ethereumPrimaryBigDecimal
  balanceUSD_not: ethereumPrimaryBigDecimal
  balanceUSD_gt: ethereumPrimaryBigDecimal
  balanceUSD_lt: ethereumPrimaryBigDecimal
  balanceUSD_gte: ethereumPrimaryBigDecimal
  balanceUSD_lte: ethereumPrimaryBigDecimal
  balanceUSD_in: [ethereumPrimaryBigDecimal!]
  balanceUSD_not_in: [ethereumPrimaryBigDecimal!]
  blockNumber: BigInt
  blockNumber_not: BigInt
  blockNumber_gt: BigInt
  blockNumber_lt: BigInt
  blockNumber_gte: BigInt
  blockNumber_lte: BigInt
  blockNumber_in: [BigInt!]
  blockNumber_not_in: [BigInt!]
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  principal: BigInt
  principal_not: BigInt
  principal_gt: BigInt
  principal_lt: BigInt
  principal_gte: BigInt
  principal_lte: BigInt
  principal_in: [BigInt!]
  principal_not_in: [BigInt!]
  index: BigInt
  index_not: BigInt
  index_gt: BigInt
  index_lt: BigInt
  index_gte: BigInt
  index_lte: BigInt
  index_in: [BigInt!]
  index_not_in: [BigInt!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryPositionSnapshot_filter]
  or: [ethereumPrimaryPositionSnapshot_filter]
}

enum ethereumPrimaryPositionSnapshot_orderBy {
  id
  hash
  logIndex
  nonce
  account
  account__id
  account__positionCount
  account__openPositionCount
  account__closedPositionCount
  account__depositCount
  account__withdrawCount
  account__borrowCount
  account__repayCount
  account__liquidateCount
  account__liquidationCount
  account__transferredCount
  account__receivedCount
  account__flashloanCount
  account__rewardsClaimedUSD
  account___eMode
  position
  position__id
  position__hashOpened
  position__hashClosed
  position__blockNumberOpened
  position__timestampOpened
  position__blockNumberClosed
  position__timestampClosed
  position__side
  position__type
  position__isCollateral
  position__isIsolated
  position__balance
  position__principal
  position__depositCount
  position__withdrawCount
  position__borrowCount
  position__repayCount
  position__liquidationCount
  position__transferredCount
  position__receivedCount
  position___eMode
  balance
  balanceUSD
  blockNumber
  timestamp
  principal
  index
}

input ethereumPrimaryPosition_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  account: String
  account_not: String
  account_gt: String
  account_lt: String
  account_gte: String
  account_lte: String
  account_in: [String!]
  account_not_in: [String!]
  account_contains: String
  account_contains_nocase: String
  account_not_contains: String
  account_not_contains_nocase: String
  account_starts_with: String
  account_starts_with_nocase: String
  account_not_starts_with: String
  account_not_starts_with_nocase: String
  account_ends_with: String
  account_ends_with_nocase: String
  account_not_ends_with: String
  account_not_ends_with_nocase: String
  account_: ethereumPrimaryAccount_filter
  market: String
  market_not: String
  market_gt: String
  market_lt: String
  market_gte: String
  market_lte: String
  market_in: [String!]
  market_not_in: [String!]
  market_contains: String
  market_contains_nocase: String
  market_not_contains: String
  market_not_contains_nocase: String
  market_starts_with: String
  market_starts_with_nocase: String
  market_not_starts_with: String
  market_not_starts_with_nocase: String
  market_ends_with: String
  market_ends_with_nocase: String
  market_not_ends_with: String
  market_not_ends_with_nocase: String
  market_: ethereumPrimaryMarket_filter
  asset: String
  asset_not: String
  asset_gt: String
  asset_lt: String
  asset_gte: String
  asset_lte: String
  asset_in: [String!]
  asset_not_in: [String!]
  asset_contains: String
  asset_contains_nocase: String
  asset_not_contains: String
  asset_not_contains_nocase: String
  asset_starts_with: String
  asset_starts_with_nocase: String
  asset_not_starts_with: String
  asset_not_starts_with_nocase: String
  asset_ends_with: String
  asset_ends_with_nocase: String
  asset_not_ends_with: String
  asset_not_ends_with_nocase: String
  asset_: ethereumPrimaryToken_filter
  hashOpened: ethereumPrimaryBytes
  hashOpened_not: ethereumPrimaryBytes
  hashOpened_gt: ethereumPrimaryBytes
  hashOpened_lt: ethereumPrimaryBytes
  hashOpened_gte: ethereumPrimaryBytes
  hashOpened_lte: ethereumPrimaryBytes
  hashOpened_in: [ethereumPrimaryBytes!]
  hashOpened_not_in: [ethereumPrimaryBytes!]
  hashOpened_contains: ethereumPrimaryBytes
  hashOpened_not_contains: ethereumPrimaryBytes
  hashClosed: ethereumPrimaryBytes
  hashClosed_not: ethereumPrimaryBytes
  hashClosed_gt: ethereumPrimaryBytes
  hashClosed_lt: ethereumPrimaryBytes
  hashClosed_gte: ethereumPrimaryBytes
  hashClosed_lte: ethereumPrimaryBytes
  hashClosed_in: [ethereumPrimaryBytes!]
  hashClosed_not_in: [ethereumPrimaryBytes!]
  hashClosed_contains: ethereumPrimaryBytes
  hashClosed_not_contains: ethereumPrimaryBytes
  blockNumberOpened: BigInt
  blockNumberOpened_not: BigInt
  blockNumberOpened_gt: BigInt
  blockNumberOpened_lt: BigInt
  blockNumberOpened_gte: BigInt
  blockNumberOpened_lte: BigInt
  blockNumberOpened_in: [BigInt!]
  blockNumberOpened_not_in: [BigInt!]
  timestampOpened: BigInt
  timestampOpened_not: BigInt
  timestampOpened_gt: BigInt
  timestampOpened_lt: BigInt
  timestampOpened_gte: BigInt
  timestampOpened_lte: BigInt
  timestampOpened_in: [BigInt!]
  timestampOpened_not_in: [BigInt!]
  blockNumberClosed: BigInt
  blockNumberClosed_not: BigInt
  blockNumberClosed_gt: BigInt
  blockNumberClosed_lt: BigInt
  blockNumberClosed_gte: BigInt
  blockNumberClosed_lte: BigInt
  blockNumberClosed_in: [BigInt!]
  blockNumberClosed_not_in: [BigInt!]
  timestampClosed: BigInt
  timestampClosed_not: BigInt
  timestampClosed_gt: BigInt
  timestampClosed_lt: BigInt
  timestampClosed_gte: BigInt
  timestampClosed_lte: BigInt
  timestampClosed_in: [BigInt!]
  timestampClosed_not_in: [BigInt!]
  side: ethereumPrimaryPositionSide
  side_not: ethereumPrimaryPositionSide
  side_in: [ethereumPrimaryPositionSide!]
  side_not_in: [ethereumPrimaryPositionSide!]
  type: ethereumPrimaryInterestRateType
  type_not: ethereumPrimaryInterestRateType
  type_in: [ethereumPrimaryInterestRateType!]
  type_not_in: [ethereumPrimaryInterestRateType!]
  isCollateral: Boolean
  isCollateral_not: Boolean
  isCollateral_in: [Boolean!]
  isCollateral_not_in: [Boolean!]
  isIsolated: Boolean
  isIsolated_not: Boolean
  isIsolated_in: [Boolean!]
  isIsolated_not_in: [Boolean!]
  balance: BigInt
  balance_not: BigInt
  balance_gt: BigInt
  balance_lt: BigInt
  balance_gte: BigInt
  balance_lte: BigInt
  balance_in: [BigInt!]
  balance_not_in: [BigInt!]
  principal: BigInt
  principal_not: BigInt
  principal_gt: BigInt
  principal_lt: BigInt
  principal_gte: BigInt
  principal_lte: BigInt
  principal_in: [BigInt!]
  principal_not_in: [BigInt!]
  depositCount: Int
  depositCount_not: Int
  depositCount_gt: Int
  depositCount_lt: Int
  depositCount_gte: Int
  depositCount_lte: Int
  depositCount_in: [Int!]
  depositCount_not_in: [Int!]
  deposits_: ethereumPrimaryDeposit_filter
  withdrawCount: Int
  withdrawCount_not: Int
  withdrawCount_gt: Int
  withdrawCount_lt: Int
  withdrawCount_gte: Int
  withdrawCount_lte: Int
  withdrawCount_in: [Int!]
  withdrawCount_not_in: [Int!]
  withdraws_: ethereumPrimaryWithdraw_filter
  borrowCount: Int
  borrowCount_not: Int
  borrowCount_gt: Int
  borrowCount_lt: Int
  borrowCount_gte: Int
  borrowCount_lte: Int
  borrowCount_in: [Int!]
  borrowCount_not_in: [Int!]
  borrows_: ethereumPrimaryBorrow_filter
  repayCount: Int
  repayCount_not: Int
  repayCount_gt: Int
  repayCount_lt: Int
  repayCount_gte: Int
  repayCount_lte: Int
  repayCount_in: [Int!]
  repayCount_not_in: [Int!]
  repays_: ethereumPrimaryRepay_filter
  liquidationCount: Int
  liquidationCount_not: Int
  liquidationCount_gt: Int
  liquidationCount_lt: Int
  liquidationCount_gte: Int
  liquidationCount_lte: Int
  liquidationCount_in: [Int!]
  liquidationCount_not_in: [Int!]
  liquidations_: ethereumPrimaryLiquidate_filter
  transferredCount: Int
  transferredCount_not: Int
  transferredCount_gt: Int
  transferredCount_lt: Int
  transferredCount_gte: Int
  transferredCount_lte: Int
  transferredCount_in: [Int!]
  transferredCount_not_in: [Int!]
  receivedCount: Int
  receivedCount_not: Int
  receivedCount_gt: Int
  receivedCount_lt: Int
  receivedCount_gte: Int
  receivedCount_lte: Int
  receivedCount_in: [Int!]
  receivedCount_not_in: [Int!]
  transfers_: ethereumPrimaryTransfer_filter
  snapshots_: ethereumPrimaryPositionSnapshot_filter
  _eMode: Boolean
  _eMode_not: Boolean
  _eMode_in: [Boolean!]
  _eMode_not_in: [Boolean!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryPosition_filter]
  or: [ethereumPrimaryPosition_filter]
}

enum ethereumPrimaryPosition_orderBy {
  id
  account
  account__id
  account__positionCount
  account__openPositionCount
  account__closedPositionCount
  account__depositCount
  account__withdrawCount
  account__borrowCount
  account__repayCount
  account__liquidateCount
  account__liquidationCount
  account__transferredCount
  account__receivedCount
  account__flashloanCount
  account__rewardsClaimedUSD
  account___eMode
  market
  market__id
  market__name
  market__isActive
  market__canBorrowFrom
  market__canUseAsCollateral
  market__maximumLTV
  market__liquidationThreshold
  market__liquidationPenalty
  market__canIsolate
  market__createdTimestamp
  market__createdBlockNumber
  market__relation
  market__stakedOutputTokenAmount
  market__inputTokenBalance
  market__inputTokenPriceUSD
  market__outputTokenSupply
  market__outputTokenPriceUSD
  market__exchangeRate
  market__reserves
  market__reserveFactor
  market__variableBorrowedTokenBalance
  market__stableBorrowedTokenBalance
  market__indexLastUpdatedTimestamp
  market__supplyIndex
  market__supplyCap
  market__borrowIndex
  market__borrowCap
  market__totalValueLockedUSD
  market__cumulativeSupplySideRevenueUSD
  market__cumulativeProtocolSideRevenueUSD
  market__cumulativeTotalRevenueUSD
  market__totalDepositBalanceUSD
  market__cumulativeDepositUSD
  market__totalBorrowBalanceUSD
  market__cumulativeBorrowUSD
  market__cumulativeLiquidateUSD
  market__cumulativeTransferUSD
  market__cumulativeFlashloanUSD
  market__transactionCount
  market__depositCount
  market__withdrawCount
  market__borrowCount
  market__repayCount
  market__liquidationCount
  market__transferCount
  market__flashloanCount
  market__cumulativeUniqueUsers
  market__cumulativeUniqueDepositors
  market__cumulativeUniqueBorrowers
  market__cumulativeUniqueLiquidators
  market__cumulativeUniqueLiquidatees
  market__cumulativeUniqueTransferrers
  market__cumulativeUniqueFlashloaners
  market__positionCount
  market__openPositionCount
  market__closedPositionCount
  market__lendingPositionCount
  market__borrowingPositionCount
  market___baseTrackingBorrowSpeed
  market___baseTrackingSupplySpeed
  market___lastRewardsUpdated
  market___liquidationProtocolFee
  market___siloedBorrowing
  asset
  asset__id
  asset__name
  asset__symbol
  asset__decimals
  asset__lastPriceUSD
  asset__lastPriceBlockNumber
  asset__type
  asset___iavsTokenType
  hashOpened
  hashClosed
  blockNumberOpened
  timestampOpened
  blockNumberClosed
  timestampClosed
  side
  type
  isCollateral
  isIsolated
  balance
  principal
  depositCount
  deposits
  withdrawCount
  withdraws
  borrowCount
  borrows
  repayCount
  repays
  liquidationCount
  liquidations
  transferredCount
  receivedCount
  transfers
  snapshots
  _eMode
}

interface ethereumPrimaryProtocol {
  """ Smart contract address of the protocol's main contract (Factory, Registry, etc) 
  """
  id: ethereumPrimaryBytes!
  """ Base name of the protocol, excluding transformations. e.g. Aave """
  protocol: String!
  """ Name of the protocol, including version. e.g. Aave v2 """
  name: String!
  """ Slug of protocol, including version. e.g. aave-v2 """
  slug: String!
  """ Version of the subgraph schema, in SemVer format (e.g. 1.0.0) """
  schemaVersion: String!
  """ Version of the subgraph implementation, in SemVer format (e.g. 1.0.0) 
  """
  subgraphVersion: String!
  """ Version of the methodology used to compute metrics, loosely based on SemVer format (e.g. 1.0.0) 
  """
  methodologyVersion: String!
  """ The blockchain network this subgraph is indexing on """
  network: ethereumPrimaryNetwork!
  """ The type of protocol (e.g. DEX, Lending, Yield, etc) """
  type: ethereumPrimaryProtocolType!
  """ The specific lending protocol type """
  lendingType: ethereumPrimaryLendingType
  """ The specific permissions required to lend in this protocol """
  lenderPermissionType: ethereumPrimaryPermissionType
  """ The specific permissions required to borrow from this protocol """
  borrowerPermissionType: ethereumPrimaryPermissionType
  """ The specific permissions required to create a pool (market) in this protocol 
  """
  poolCreatorPermissionType: ethereumPrimaryPermissionType
  """ Risk type of the lending protocol """
  riskType: ethereumPrimaryRiskType
  """ The way a positions can be collateralized """
  collateralizationType: ethereumPrimaryCollateralizationType
  """ Current TVL (Total Value Locked) of the entire protocol """
  totalValueLockedUSD: ethereumPrimaryBigDecimal!
  """ Current PCV (Protocol Controlled Value). Only relevant for protocols with PCV. 
  """
  protocolControlledValueUSD: ethereumPrimaryBigDecimal
  """ Number of cumulative unique users. e.g. accounts that spent gas to interact with this protocol 
  """
  cumulativeUniqueUsers: Int!
  """ Revenue claimed by suppliers to the protocol. LPs on DEXs (e.g. 0.25% of the swap fee in Sushiswap). Depositors on Lending Protocols. NFT sellers on OpenSea. 
  """
  cumulativeSupplySideRevenueUSD: ethereumPrimaryBigDecimal!
  """ Gross revenue for the protocol (revenue claimed by protocol). Examples: AMM protocol fee (Sushi’s 0.05%). OpenSea 10% sell fee. 
  """
  cumulativeProtocolSideRevenueUSD: ethereumPrimaryBigDecimal!
  """ All revenue generated by the protocol. e.g. 0.30% of swap fee in Sushiswap, all yield generated by Yearn. 
  """
  cumulativeTotalRevenueUSD: ethereumPrimaryBigDecimal!
  """ Total number of pools """
  totalPoolCount: Int!
  """ Daily usage metrics for this protocol """
  dailyUsageMetrics(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryUsageMetricsDailySnapshot_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryUsageMetricsDailySnapshot_filter): [ethereumPrimaryUsageMetricsDailySnapshot!]!
  """ Hourly usage metrics for this protocol """
  hourlyUsageMetrics(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryUsageMetricsHourlySnapshot_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryUsageMetricsHourlySnapshot_filter): [ethereumPrimaryUsageMetricsHourlySnapshot!]!
  """ Daily financial metrics for this protocol """
  financialMetrics(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryFinancialsDailySnapshot_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryFinancialsDailySnapshot_filter): [ethereumPrimaryFinancialsDailySnapshot!]!
}

enum ethereumPrimaryProtocolType {
  EXCHANGE
  LENDING
  YIELD
  BRIDGE
  GENERIC
}

input ethereumPrimaryProtocol_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  protocol: String
  protocol_not: String
  protocol_gt: String
  protocol_lt: String
  protocol_gte: String
  protocol_lte: String
  protocol_in: [String!]
  protocol_not_in: [String!]
  protocol_contains: String
  protocol_contains_nocase: String
  protocol_not_contains: String
  protocol_not_contains_nocase: String
  protocol_starts_with: String
  protocol_starts_with_nocase: String
  protocol_not_starts_with: String
  protocol_not_starts_with_nocase: String
  protocol_ends_with: String
  protocol_ends_with_nocase: String
  protocol_not_ends_with: String
  protocol_not_ends_with_nocase: String
  name: String
  name_not: String
  name_gt: String
  name_lt: String
  name_gte: String
  name_lte: String
  name_in: [String!]
  name_not_in: [String!]
  name_contains: String
  name_contains_nocase: String
  name_not_contains: String
  name_not_contains_nocase: String
  name_starts_with: String
  name_starts_with_nocase: String
  name_not_starts_with: String
  name_not_starts_with_nocase: String
  name_ends_with: String
  name_ends_with_nocase: String
  name_not_ends_with: String
  name_not_ends_with_nocase: String
  slug: String
  slug_not: String
  slug_gt: String
  slug_lt: String
  slug_gte: String
  slug_lte: String
  slug_in: [String!]
  slug_not_in: [String!]
  slug_contains: String
  slug_contains_nocase: String
  slug_not_contains: String
  slug_not_contains_nocase: String
  slug_starts_with: String
  slug_starts_with_nocase: String
  slug_not_starts_with: String
  slug_not_starts_with_nocase: String
  slug_ends_with: String
  slug_ends_with_nocase: String
  slug_not_ends_with: String
  slug_not_ends_with_nocase: String
  schemaVersion: String
  schemaVersion_not: String
  schemaVersion_gt: String
  schemaVersion_lt: String
  schemaVersion_gte: String
  schemaVersion_lte: String
  schemaVersion_in: [String!]
  schemaVersion_not_in: [String!]
  schemaVersion_contains: String
  schemaVersion_contains_nocase: String
  schemaVersion_not_contains: String
  schemaVersion_not_contains_nocase: String
  schemaVersion_starts_with: String
  schemaVersion_starts_with_nocase: String
  schemaVersion_not_starts_with: String
  schemaVersion_not_starts_with_nocase: String
  schemaVersion_ends_with: String
  schemaVersion_ends_with_nocase: String
  schemaVersion_not_ends_with: String
  schemaVersion_not_ends_with_nocase: String
  subgraphVersion: String
  subgraphVersion_not: String
  subgraphVersion_gt: String
  subgraphVersion_lt: String
  subgraphVersion_gte: String
  subgraphVersion_lte: String
  subgraphVersion_in: [String!]
  subgraphVersion_not_in: [String!]
  subgraphVersion_contains: String
  subgraphVersion_contains_nocase: String
  subgraphVersion_not_contains: String
  subgraphVersion_not_contains_nocase: String
  subgraphVersion_starts_with: String
  subgraphVersion_starts_with_nocase: String
  subgraphVersion_not_starts_with: String
  subgraphVersion_not_starts_with_nocase: String
  subgraphVersion_ends_with: String
  subgraphVersion_ends_with_nocase: String
  subgraphVersion_not_ends_with: String
  subgraphVersion_not_ends_with_nocase: String
  methodologyVersion: String
  methodologyVersion_not: String
  methodologyVersion_gt: String
  methodologyVersion_lt: String
  methodologyVersion_gte: String
  methodologyVersion_lte: String
  methodologyVersion_in: [String!]
  methodologyVersion_not_in: [String!]
  methodologyVersion_contains: String
  methodologyVersion_contains_nocase: String
  methodologyVersion_not_contains: String
  methodologyVersion_not_contains_nocase: String
  methodologyVersion_starts_with: String
  methodologyVersion_starts_with_nocase: String
  methodologyVersion_not_starts_with: String
  methodologyVersion_not_starts_with_nocase: String
  methodologyVersion_ends_with: String
  methodologyVersion_ends_with_nocase: String
  methodologyVersion_not_ends_with: String
  methodologyVersion_not_ends_with_nocase: String
  network: ethereumPrimaryNetwork
  network_not: ethereumPrimaryNetwork
  network_in: [ethereumPrimaryNetwork!]
  network_not_in: [ethereumPrimaryNetwork!]
  type: ethereumPrimaryProtocolType
  type_not: ethereumPrimaryProtocolType
  type_in: [ethereumPrimaryProtocolType!]
  type_not_in: [ethereumPrimaryProtocolType!]
  lendingType: ethereumPrimaryLendingType
  lendingType_not: ethereumPrimaryLendingType
  lendingType_in: [ethereumPrimaryLendingType!]
  lendingType_not_in: [ethereumPrimaryLendingType!]
  lenderPermissionType: ethereumPrimaryPermissionType
  lenderPermissionType_not: ethereumPrimaryPermissionType
  lenderPermissionType_in: [ethereumPrimaryPermissionType!]
  lenderPermissionType_not_in: [ethereumPrimaryPermissionType!]
  borrowerPermissionType: ethereumPrimaryPermissionType
  borrowerPermissionType_not: ethereumPrimaryPermissionType
  borrowerPermissionType_in: [ethereumPrimaryPermissionType!]
  borrowerPermissionType_not_in: [ethereumPrimaryPermissionType!]
  poolCreatorPermissionType: ethereumPrimaryPermissionType
  poolCreatorPermissionType_not: ethereumPrimaryPermissionType
  poolCreatorPermissionType_in: [ethereumPrimaryPermissionType!]
  poolCreatorPermissionType_not_in: [ethereumPrimaryPermissionType!]
  riskType: ethereumPrimaryRiskType
  riskType_not: ethereumPrimaryRiskType
  riskType_in: [ethereumPrimaryRiskType!]
  riskType_not_in: [ethereumPrimaryRiskType!]
  collateralizationType: ethereumPrimaryCollateralizationType
  collateralizationType_not: ethereumPrimaryCollateralizationType
  collateralizationType_in: [ethereumPrimaryCollateralizationType!]
  collateralizationType_not_in: [ethereumPrimaryCollateralizationType!]
  totalValueLockedUSD: ethereumPrimaryBigDecimal
  totalValueLockedUSD_not: ethereumPrimaryBigDecimal
  totalValueLockedUSD_gt: ethereumPrimaryBigDecimal
  totalValueLockedUSD_lt: ethereumPrimaryBigDecimal
  totalValueLockedUSD_gte: ethereumPrimaryBigDecimal
  totalValueLockedUSD_lte: ethereumPrimaryBigDecimal
  totalValueLockedUSD_in: [ethereumPrimaryBigDecimal!]
  totalValueLockedUSD_not_in: [ethereumPrimaryBigDecimal!]
  protocolControlledValueUSD: ethereumPrimaryBigDecimal
  protocolControlledValueUSD_not: ethereumPrimaryBigDecimal
  protocolControlledValueUSD_gt: ethereumPrimaryBigDecimal
  protocolControlledValueUSD_lt: ethereumPrimaryBigDecimal
  protocolControlledValueUSD_gte: ethereumPrimaryBigDecimal
  protocolControlledValueUSD_lte: ethereumPrimaryBigDecimal
  protocolControlledValueUSD_in: [ethereumPrimaryBigDecimal!]
  protocolControlledValueUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeUniqueUsers: Int
  cumulativeUniqueUsers_not: Int
  cumulativeUniqueUsers_gt: Int
  cumulativeUniqueUsers_lt: Int
  cumulativeUniqueUsers_gte: Int
  cumulativeUniqueUsers_lte: Int
  cumulativeUniqueUsers_in: [Int!]
  cumulativeUniqueUsers_not_in: [Int!]
  cumulativeSupplySideRevenueUSD: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_not: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_gt: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_lt: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_gte: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_lte: ethereumPrimaryBigDecimal
  cumulativeSupplySideRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeSupplySideRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeProtocolSideRevenueUSD: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_not: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_gt: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_lt: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_gte: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_lte: ethereumPrimaryBigDecimal
  cumulativeProtocolSideRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeProtocolSideRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  cumulativeTotalRevenueUSD: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_not: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_gt: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_lt: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_gte: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_lte: ethereumPrimaryBigDecimal
  cumulativeTotalRevenueUSD_in: [ethereumPrimaryBigDecimal!]
  cumulativeTotalRevenueUSD_not_in: [ethereumPrimaryBigDecimal!]
  totalPoolCount: Int
  totalPoolCount_not: Int
  totalPoolCount_gt: Int
  totalPoolCount_lt: Int
  totalPoolCount_gte: Int
  totalPoolCount_lte: Int
  totalPoolCount_in: [Int!]
  totalPoolCount_not_in: [Int!]
  dailyUsageMetrics_: ethereumPrimaryUsageMetricsDailySnapshot_filter
  hourlyUsageMetrics_: ethereumPrimaryUsageMetricsHourlySnapshot_filter
  financialMetrics_: ethereumPrimaryFinancialsDailySnapshot_filter
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryProtocol_filter]
  or: [ethereumPrimaryProtocol_filter]
}

enum ethereumPrimaryProtocol_orderBy {
  id
  protocol
  name
  slug
  schemaVersion
  subgraphVersion
  methodologyVersion
  network
  type
  lendingType
  lenderPermissionType
  borrowerPermissionType
  poolCreatorPermissionType
  riskType
  collateralizationType
  totalValueLockedUSD
  protocolControlledValueUSD
  cumulativeUniqueUsers
  cumulativeSupplySideRevenueUSD
  cumulativeProtocolSideRevenueUSD
  cumulativeTotalRevenueUSD
  totalPoolCount
  dailyUsageMetrics
  hourlyUsageMetrics
  financialMetrics
}

type Query {
  ethereumPrimarytoken(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryToken
  ethereumPrimarytokens(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryToken_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryToken_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryToken!]!
  ethereumPrimaryrewardToken(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryRewardToken
  ethereumPrimaryrewardTokens(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryRewardToken_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryRewardToken_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryRewardToken!]!
  ethereumPrimaryinterestRate(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryInterestRate
  ethereumPrimaryinterestRates(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryInterestRate_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryInterestRate_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryInterestRate!]!
  ethereumPrimaryfee(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryFee
  ethereumPrimaryfees(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryFee_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryFee_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryFee!]!
  ethereumPrimaryrevenueDetail(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryRevenueDetail
  ethereumPrimaryrevenueDetails(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryRevenueDetail_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryRevenueDetail_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryRevenueDetail!]!
  ethereumPrimaryoracle(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryOracle
  ethereumPrimaryoracles(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryOracle_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryOracle_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryOracle!]!
  ethereumPrimarylendingProtocol(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryLendingProtocol
  ethereumPrimarylendingProtocols(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryLendingProtocol_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryLendingProtocol_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryLendingProtocol!]!
  ethereumPrimarymarketList(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimary_MarketList
  ethereumPrimarymarketLists(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimary_MarketList_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimary_MarketList_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimary_MarketList!]!
  ethereumPrimaryusageMetricsDailySnapshot(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryUsageMetricsDailySnapshot
  ethereumPrimaryusageMetricsDailySnapshots(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryUsageMetricsDailySnapshot_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryUsageMetricsDailySnapshot_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryUsageMetricsDailySnapshot!]!
  ethereumPrimaryusageMetricsHourlySnapshot(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryUsageMetricsHourlySnapshot
  ethereumPrimaryusageMetricsHourlySnapshots(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryUsageMetricsHourlySnapshot_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryUsageMetricsHourlySnapshot_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryUsageMetricsHourlySnapshot!]!
  ethereumPrimaryfinancialsDailySnapshot(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryFinancialsDailySnapshot
  ethereumPrimaryfinancialsDailySnapshots(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryFinancialsDailySnapshot_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryFinancialsDailySnapshot_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryFinancialsDailySnapshot!]!
  ethereumPrimarymarket(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryMarket
  ethereumPrimarymarkets(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryMarket_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryMarket_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryMarket!]!
  ethereumPrimarymarketDailySnapshot(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryMarketDailySnapshot
  ethereumPrimarymarketDailySnapshots(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryMarketDailySnapshot_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryMarketDailySnapshot_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryMarketDailySnapshot!]!
  ethereumPrimarymarketHourlySnapshot(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryMarketHourlySnapshot
  ethereumPrimarymarketHourlySnapshots(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryMarketHourlySnapshot_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryMarketHourlySnapshot_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryMarketHourlySnapshot!]!
  ethereumPrimaryaccount(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryAccount
  ethereumPrimaryaccounts(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryAccount_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryAccount_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryAccount!]!
  ethereumPrimaryposition(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryPosition
  ethereumPrimarypositions(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryPosition_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryPosition_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryPosition!]!
  ethereumPrimarypositionSnapshot(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryPositionSnapshot
  ethereumPrimarypositionSnapshots(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryPositionSnapshot_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryPositionSnapshot_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryPositionSnapshot!]!
  ethereumPrimaryactiveAccount(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimary_ActiveAccount
  ethereumPrimaryactiveAccounts(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimary_ActiveAccount_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimary_ActiveAccount_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimary_ActiveAccount!]!
  ethereumPrimarypositionCounter(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimary_PositionCounter
  ethereumPrimarypositionCounters(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimary_PositionCounter_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimary_PositionCounter_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimary_PositionCounter!]!
  ethereumPrimarydeposit(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryDeposit
  ethereumPrimarydeposits(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryDeposit_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryDeposit_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryDeposit!]!
  ethereumPrimarywithdraw(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryWithdraw
  ethereumPrimarywithdraws(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryWithdraw_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryWithdraw_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryWithdraw!]!
  ethereumPrimaryborrow(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryBorrow
  ethereumPrimaryborrows(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryBorrow_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryBorrow_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryBorrow!]!
  ethereumPrimaryrepay(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryRepay
  ethereumPrimaryrepays(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryRepay_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryRepay_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryRepay!]!
  ethereumPrimaryliquidate(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryLiquidate
  ethereumPrimaryliquidates(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryLiquidate_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryLiquidate_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryLiquidate!]!
  ethereumPrimarytransfer(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryTransfer
  ethereumPrimarytransfers(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryTransfer_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryTransfer_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryTransfer!]!
  ethereumPrimaryflashloan(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryFlashloan
  ethereumPrimaryflashloans(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryFlashloan_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryFlashloan_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryFlashloan!]!
  ethereumPrimarydefaultOracle(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimary_DefaultOracle
  ethereumPrimarydefaultOracles(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimary_DefaultOracle_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimary_DefaultOracle_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimary_DefaultOracle!]!
  ethereumPrimaryflashLoanPremium(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimary_FlashLoanPremium
  ethereumPrimaryflashLoanPremiums(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimary_FlashLoanPremium_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimary_FlashLoanPremium_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimary_FlashLoanPremium!]!
  ethereumPrimaryprotocol(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryProtocol
  ethereumPrimaryprotocols(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryProtocol_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryProtocol_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryProtocol!]!
  ethereumPrimaryevent(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryEvent
  ethereumPrimaryevents(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryEvent_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryEvent_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryEvent!]!
  """Access to subgraph metadata"""
  ethereumPrimary_meta(block: ethereumPrimaryBlock_height): ethereumPrimary_Meta_
}

type ethereumPrimaryRepay implements ethereumPrimaryEvent {
  """ { Transaction hash }{ Log index } """
  id: ethereumPrimaryBytes!
  """ Transaction hash of the transaction that emitted this event """
  hash: ethereumPrimaryBytes!
  """ Nonce of the transaction that emitted this event """
  nonce: BigInt!
  """ Event log index. For transactions that don't emit event, create arbitrary index starting from 0 
  """
  logIndex: Int!
  """ Price of gas in this transaction """
  gasPrice: BigInt
  """ Gas used in this transaction. (Optional because not every chain will support this) 
  """
  gasUsed: BigInt
  """ Gas limit of this transaction. e.g. the amount of gas the sender will pay 
  """
  gasLimit: BigInt
  """ Block number of this event """
  blockNumber: BigInt!
  """ Timestamp of this event """
  timestamp: BigInt!
  """ Account that reduces their debt on this transaction """
  account: ethereumPrimaryAccount!
  """ Account that is providing the funds to repay the debt """
  accountActor: ethereumPrimaryAccount
  """ The market tokens are repaid/burned to """
  market: ethereumPrimaryMarket!
  """ The user position changed by this event """
  position: ethereumPrimaryPosition!
  """ Token repaid/burned """
  asset: ethereumPrimaryToken!
  """ Amount of token repaid/burned in native units """
  amount: BigInt!
  """ Amount of token repaid/burned in USD """
  amountUSD: ethereumPrimaryBigDecimal!
}

input ethereumPrimaryRepay_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  hash: ethereumPrimaryBytes
  hash_not: ethereumPrimaryBytes
  hash_gt: ethereumPrimaryBytes
  hash_lt: ethereumPrimaryBytes
  hash_gte: ethereumPrimaryBytes
  hash_lte: ethereumPrimaryBytes
  hash_in: [ethereumPrimaryBytes!]
  hash_not_in: [ethereumPrimaryBytes!]
  hash_contains: ethereumPrimaryBytes
  hash_not_contains: ethereumPrimaryBytes
  nonce: BigInt
  nonce_not: BigInt
  nonce_gt: BigInt
  nonce_lt: BigInt
  nonce_gte: BigInt
  nonce_lte: BigInt
  nonce_in: [BigInt!]
  nonce_not_in: [BigInt!]
  logIndex: Int
  logIndex_not: Int
  logIndex_gt: Int
  logIndex_lt: Int
  logIndex_gte: Int
  logIndex_lte: Int
  logIndex_in: [Int!]
  logIndex_not_in: [Int!]
  gasPrice: BigInt
  gasPrice_not: BigInt
  gasPrice_gt: BigInt
  gasPrice_lt: BigInt
  gasPrice_gte: BigInt
  gasPrice_lte: BigInt
  gasPrice_in: [BigInt!]
  gasPrice_not_in: [BigInt!]
  gasUsed: BigInt
  gasUsed_not: BigInt
  gasUsed_gt: BigInt
  gasUsed_lt: BigInt
  gasUsed_gte: BigInt
  gasUsed_lte: BigInt
  gasUsed_in: [BigInt!]
  gasUsed_not_in: [BigInt!]
  gasLimit: BigInt
  gasLimit_not: BigInt
  gasLimit_gt: BigInt
  gasLimit_lt: BigInt
  gasLimit_gte: BigInt
  gasLimit_lte: BigInt
  gasLimit_in: [BigInt!]
  gasLimit_not_in: [BigInt!]
  blockNumber: BigInt
  blockNumber_not: BigInt
  blockNumber_gt: BigInt
  blockNumber_lt: BigInt
  blockNumber_gte: BigInt
  blockNumber_lte: BigInt
  blockNumber_in: [BigInt!]
  blockNumber_not_in: [BigInt!]
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  account: String
  account_not: String
  account_gt: String
  account_lt: String
  account_gte: String
  account_lte: String
  account_in: [String!]
  account_not_in: [String!]
  account_contains: String
  account_contains_nocase: String
  account_not_contains: String
  account_not_contains_nocase: String
  account_starts_with: String
  account_starts_with_nocase: String
  account_not_starts_with: String
  account_not_starts_with_nocase: String
  account_ends_with: String
  account_ends_with_nocase: String
  account_not_ends_with: String
  account_not_ends_with_nocase: String
  account_: ethereumPrimaryAccount_filter
  accountActor: String
  accountActor_not: String
  accountActor_gt: String
  accountActor_lt: String
  accountActor_gte: String
  accountActor_lte: String
  accountActor_in: [String!]
  accountActor_not_in: [String!]
  accountActor_contains: String
  accountActor_contains_nocase: String
  accountActor_not_contains: String
  accountActor_not_contains_nocase: String
  accountActor_starts_with: String
  accountActor_starts_with_nocase: String
  accountActor_not_starts_with: String
  accountActor_not_starts_with_nocase: String
  accountActor_ends_with: String
  accountActor_ends_with_nocase: String
  accountActor_not_ends_with: String
  accountActor_not_ends_with_nocase: String
  accountActor_: ethereumPrimaryAccount_filter
  market: String
  market_not: String
  market_gt: String
  market_lt: String
  market_gte: String
  market_lte: String
  market_in: [String!]
  market_not_in: [String!]
  market_contains: String
  market_contains_nocase: String
  market_not_contains: String
  market_not_contains_nocase: String
  market_starts_with: String
  market_starts_with_nocase: String
  market_not_starts_with: String
  market_not_starts_with_nocase: String
  market_ends_with: String
  market_ends_with_nocase: String
  market_not_ends_with: String
  market_not_ends_with_nocase: String
  market_: ethereumPrimaryMarket_filter
  position: String
  position_not: String
  position_gt: String
  position_lt: String
  position_gte: String
  position_lte: String
  position_in: [String!]
  position_not_in: [String!]
  position_contains: String
  position_contains_nocase: String
  position_not_contains: String
  position_not_contains_nocase: String
  position_starts_with: String
  position_starts_with_nocase: String
  position_not_starts_with: String
  position_not_starts_with_nocase: String
  position_ends_with: String
  position_ends_with_nocase: String
  position_not_ends_with: String
  position_not_ends_with_nocase: String
  position_: ethereumPrimaryPosition_filter
  asset: String
  asset_not: String
  asset_gt: String
  asset_lt: String
  asset_gte: String
  asset_lte: String
  asset_in: [String!]
  asset_not_in: [String!]
  asset_contains: String
  asset_contains_nocase: String
  asset_not_contains: String
  asset_not_contains_nocase: String
  asset_starts_with: String
  asset_starts_with_nocase: String
  asset_not_starts_with: String
  asset_not_starts_with_nocase: String
  asset_ends_with: String
  asset_ends_with_nocase: String
  asset_not_ends_with: String
  asset_not_ends_with_nocase: String
  asset_: ethereumPrimaryToken_filter
  amount: BigInt
  amount_not: BigInt
  amount_gt: BigInt
  amount_lt: BigInt
  amount_gte: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  amount_not_in: [BigInt!]
  amountUSD: ethereumPrimaryBigDecimal
  amountUSD_not: ethereumPrimaryBigDecimal
  amountUSD_gt: ethereumPrimaryBigDecimal
  amountUSD_lt: ethereumPrimaryBigDecimal
  amountUSD_gte: ethereumPrimaryBigDecimal
  amountUSD_lte: ethereumPrimaryBigDecimal
  amountUSD_in: [ethereumPrimaryBigDecimal!]
  amountUSD_not_in: [ethereumPrimaryBigDecimal!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryRepay_filter]
  or: [ethereumPrimaryRepay_filter]
}

enum ethereumPrimaryRepay_orderBy {
  id
  hash
  nonce
  logIndex
  gasPrice
  gasUsed
  gasLimit
  blockNumber
  timestamp
  account
  account__id
  account__positionCount
  account__openPositionCount
  account__closedPositionCount
  account__depositCount
  account__withdrawCount
  account__borrowCount
  account__repayCount
  account__liquidateCount
  account__liquidationCount
  account__transferredCount
  account__receivedCount
  account__flashloanCount
  account__rewardsClaimedUSD
  account___eMode
  accountActor
  accountActor__id
  accountActor__positionCount
  accountActor__openPositionCount
  accountActor__closedPositionCount
  accountActor__depositCount
  accountActor__withdrawCount
  accountActor__borrowCount
  accountActor__repayCount
  accountActor__liquidateCount
  accountActor__liquidationCount
  accountActor__transferredCount
  accountActor__receivedCount
  accountActor__flashloanCount
  accountActor__rewardsClaimedUSD
  accountActor___eMode
  market
  market__id
  market__name
  market__isActive
  market__canBorrowFrom
  market__canUseAsCollateral
  market__maximumLTV
  market__liquidationThreshold
  market__liquidationPenalty
  market__canIsolate
  market__createdTimestamp
  market__createdBlockNumber
  market__relation
  market__stakedOutputTokenAmount
  market__inputTokenBalance
  market__inputTokenPriceUSD
  market__outputTokenSupply
  market__outputTokenPriceUSD
  market__exchangeRate
  market__reserves
  market__reserveFactor
  market__variableBorrowedTokenBalance
  market__stableBorrowedTokenBalance
  market__indexLastUpdatedTimestamp
  market__supplyIndex
  market__supplyCap
  market__borrowIndex
  market__borrowCap
  market__totalValueLockedUSD
  market__cumulativeSupplySideRevenueUSD
  market__cumulativeProtocolSideRevenueUSD
  market__cumulativeTotalRevenueUSD
  market__totalDepositBalanceUSD
  market__cumulativeDepositUSD
  market__totalBorrowBalanceUSD
  market__cumulativeBorrowUSD
  market__cumulativeLiquidateUSD
  market__cumulativeTransferUSD
  market__cumulativeFlashloanUSD
  market__transactionCount
  market__depositCount
  market__withdrawCount
  market__borrowCount
  market__repayCount
  market__liquidationCount
  market__transferCount
  market__flashloanCount
  market__cumulativeUniqueUsers
  market__cumulativeUniqueDepositors
  market__cumulativeUniqueBorrowers
  market__cumulativeUniqueLiquidators
  market__cumulativeUniqueLiquidatees
  market__cumulativeUniqueTransferrers
  market__cumulativeUniqueFlashloaners
  market__positionCount
  market__openPositionCount
  market__closedPositionCount
  market__lendingPositionCount
  market__borrowingPositionCount
  market___baseTrackingBorrowSpeed
  market___baseTrackingSupplySpeed
  market___lastRewardsUpdated
  market___liquidationProtocolFee
  market___siloedBorrowing
  position
  position__id
  position__hashOpened
  position__hashClosed
  position__blockNumberOpened
  position__timestampOpened
  position__blockNumberClosed
  position__timestampClosed
  position__side
  position__type
  position__isCollateral
  position__isIsolated
  position__balance
  position__principal
  position__depositCount
  position__withdrawCount
  position__borrowCount
  position__repayCount
  position__liquidationCount
  position__transferredCount
  position__receivedCount
  position___eMode
  asset
  asset__id
  asset__name
  asset__symbol
  asset__decimals
  asset__lastPriceUSD
  asset__lastPriceBlockNumber
  asset__type
  asset___iavsTokenType
  amount
  amountUSD
}

type ethereumPrimaryRevenueDetail {
  """ { Market/Protocol ID }{ Optional: Snapshot ID } """
  id: ethereumPrimaryBytes!
  """ The source of revenue (in alphabetical order) """
  sources(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryFee_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryFee_filter): [ethereumPrimaryFee!]!
  """ The amount of revenue in USD (same order as sources) """
  amountsUSD: [ethereumPrimaryBigDecimal!]!
}

input ethereumPrimaryRevenueDetail_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  sources: [String!]
  sources_not: [String!]
  sources_contains: [String!]
  sources_contains_nocase: [String!]
  sources_not_contains: [String!]
  sources_not_contains_nocase: [String!]
  sources_: ethereumPrimaryFee_filter
  amountsUSD: [ethereumPrimaryBigDecimal!]
  amountsUSD_not: [ethereumPrimaryBigDecimal!]
  amountsUSD_contains: [ethereumPrimaryBigDecimal!]
  amountsUSD_contains_nocase: [ethereumPrimaryBigDecimal!]
  amountsUSD_not_contains: [ethereumPrimaryBigDecimal!]
  amountsUSD_not_contains_nocase: [ethereumPrimaryBigDecimal!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryRevenueDetail_filter]
  or: [ethereumPrimaryRevenueDetail_filter]
}

enum ethereumPrimaryRevenueDetail_orderBy {
  id
  sources
  amountsUSD
}

type ethereumPrimaryRewardToken {
  """ { Reward token type }-{ Smart contract address of the reward token } """
  id: ID!
  """ Reference to the actual token """
  token: ethereumPrimaryToken!
  """ The type of the reward token """
  type: ethereumPrimaryRewardTokenType!
  _distributionEnd: BigInt
}

enum ethereumPrimaryRewardTokenType {
  """ For reward tokens awarded to LPs/lenders """
  DEPOSIT
  """ For reward tokens awarded to borrowers of variable debt """
  VARIABLE_BORROW
  """ For reward tokens awarded to borrowers of stable debt """
  STABLE_BORROW
  """ For reward tokens awarded to stakers """
  STAKE
}

input ethereumPrimaryRewardToken_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  token: String
  token_not: String
  token_gt: String
  token_lt: String
  token_gte: String
  token_lte: String
  token_in: [String!]
  token_not_in: [String!]
  token_contains: String
  token_contains_nocase: String
  token_not_contains: String
  token_not_contains_nocase: String
  token_starts_with: String
  token_starts_with_nocase: String
  token_not_starts_with: String
  token_not_starts_with_nocase: String
  token_ends_with: String
  token_ends_with_nocase: String
  token_not_ends_with: String
  token_not_ends_with_nocase: String
  token_: ethereumPrimaryToken_filter
  type: ethereumPrimaryRewardTokenType
  type_not: ethereumPrimaryRewardTokenType
  type_in: [ethereumPrimaryRewardTokenType!]
  type_not_in: [ethereumPrimaryRewardTokenType!]
  _distributionEnd: BigInt
  _distributionEnd_not: BigInt
  _distributionEnd_gt: BigInt
  _distributionEnd_lt: BigInt
  _distributionEnd_gte: BigInt
  _distributionEnd_lte: BigInt
  _distributionEnd_in: [BigInt!]
  _distributionEnd_not_in: [BigInt!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryRewardToken_filter]
  or: [ethereumPrimaryRewardToken_filter]
}

enum ethereumPrimaryRewardToken_orderBy {
  id
  token
  token__id
  token__name
  token__symbol
  token__decimals
  token__lastPriceUSD
  token__lastPriceBlockNumber
  token__type
  token___iavsTokenType
  type
  _distributionEnd
}

enum ethereumPrimaryRiskType {
  """ Global risk means each users position in a market is combined for one score to determine if they can be liquidated 
  """
  GLOBAL
  """ Isolated risk means each users position in a market or CDP is isolated for risk of liquidation 
  """
  ISOLATED
}

type Subscription {
  ethereumPrimarytoken(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryToken
  ethereumPrimarytokens(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryToken_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryToken_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryToken!]!
  ethereumPrimaryrewardToken(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryRewardToken
  ethereumPrimaryrewardTokens(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryRewardToken_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryRewardToken_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryRewardToken!]!
  ethereumPrimaryinterestRate(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryInterestRate
  ethereumPrimaryinterestRates(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryInterestRate_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryInterestRate_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryInterestRate!]!
  ethereumPrimaryfee(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryFee
  ethereumPrimaryfees(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryFee_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryFee_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryFee!]!
  ethereumPrimaryrevenueDetail(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryRevenueDetail
  ethereumPrimaryrevenueDetails(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryRevenueDetail_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryRevenueDetail_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryRevenueDetail!]!
  ethereumPrimaryoracle(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryOracle
  ethereumPrimaryoracles(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryOracle_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryOracle_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryOracle!]!
  ethereumPrimarylendingProtocol(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryLendingProtocol
  ethereumPrimarylendingProtocols(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryLendingProtocol_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryLendingProtocol_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryLendingProtocol!]!
  ethereumPrimarymarketList(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimary_MarketList
  ethereumPrimarymarketLists(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimary_MarketList_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimary_MarketList_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimary_MarketList!]!
  ethereumPrimaryusageMetricsDailySnapshot(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryUsageMetricsDailySnapshot
  ethereumPrimaryusageMetricsDailySnapshots(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryUsageMetricsDailySnapshot_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryUsageMetricsDailySnapshot_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryUsageMetricsDailySnapshot!]!
  ethereumPrimaryusageMetricsHourlySnapshot(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryUsageMetricsHourlySnapshot
  ethereumPrimaryusageMetricsHourlySnapshots(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryUsageMetricsHourlySnapshot_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryUsageMetricsHourlySnapshot_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryUsageMetricsHourlySnapshot!]!
  ethereumPrimaryfinancialsDailySnapshot(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryFinancialsDailySnapshot
  ethereumPrimaryfinancialsDailySnapshots(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryFinancialsDailySnapshot_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryFinancialsDailySnapshot_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryFinancialsDailySnapshot!]!
  ethereumPrimarymarket(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryMarket
  ethereumPrimarymarkets(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryMarket_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryMarket_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryMarket!]!
  ethereumPrimarymarketDailySnapshot(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryMarketDailySnapshot
  ethereumPrimarymarketDailySnapshots(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryMarketDailySnapshot_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryMarketDailySnapshot_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryMarketDailySnapshot!]!
  ethereumPrimarymarketHourlySnapshot(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryMarketHourlySnapshot
  ethereumPrimarymarketHourlySnapshots(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryMarketHourlySnapshot_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryMarketHourlySnapshot_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryMarketHourlySnapshot!]!
  ethereumPrimaryaccount(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryAccount
  ethereumPrimaryaccounts(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryAccount_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryAccount_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryAccount!]!
  ethereumPrimaryposition(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryPosition
  ethereumPrimarypositions(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryPosition_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryPosition_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryPosition!]!
  ethereumPrimarypositionSnapshot(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryPositionSnapshot
  ethereumPrimarypositionSnapshots(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryPositionSnapshot_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryPositionSnapshot_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryPositionSnapshot!]!
  ethereumPrimaryactiveAccount(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimary_ActiveAccount
  ethereumPrimaryactiveAccounts(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimary_ActiveAccount_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimary_ActiveAccount_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimary_ActiveAccount!]!
  ethereumPrimarypositionCounter(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimary_PositionCounter
  ethereumPrimarypositionCounters(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimary_PositionCounter_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimary_PositionCounter_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimary_PositionCounter!]!
  ethereumPrimarydeposit(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryDeposit
  ethereumPrimarydeposits(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryDeposit_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryDeposit_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryDeposit!]!
  ethereumPrimarywithdraw(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryWithdraw
  ethereumPrimarywithdraws(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryWithdraw_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryWithdraw_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryWithdraw!]!
  ethereumPrimaryborrow(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryBorrow
  ethereumPrimaryborrows(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryBorrow_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryBorrow_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryBorrow!]!
  ethereumPrimaryrepay(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryRepay
  ethereumPrimaryrepays(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryRepay_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryRepay_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryRepay!]!
  ethereumPrimaryliquidate(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryLiquidate
  ethereumPrimaryliquidates(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryLiquidate_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryLiquidate_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryLiquidate!]!
  ethereumPrimarytransfer(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryTransfer
  ethereumPrimarytransfers(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryTransfer_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryTransfer_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryTransfer!]!
  ethereumPrimaryflashloan(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryFlashloan
  ethereumPrimaryflashloans(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryFlashloan_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryFlashloan_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryFlashloan!]!
  ethereumPrimarydefaultOracle(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimary_DefaultOracle
  ethereumPrimarydefaultOracles(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimary_DefaultOracle_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimary_DefaultOracle_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimary_DefaultOracle!]!
  ethereumPrimaryflashLoanPremium(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimary_FlashLoanPremium
  ethereumPrimaryflashLoanPremiums(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimary_FlashLoanPremium_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimary_FlashLoanPremium_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimary_FlashLoanPremium!]!
  ethereumPrimaryprotocol(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryProtocol
  ethereumPrimaryprotocols(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryProtocol_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryProtocol_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryProtocol!]!
  ethereumPrimaryevent(
    id: ID!
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): ethereumPrimaryEvent
  ethereumPrimaryevents(
    skip: Int = 0
    first: Int = 100
    orderBy: ethereumPrimaryEvent_orderBy
    orderDirection: ethereumPrimaryOrderDirection
    where: ethereumPrimaryEvent_filter
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: ethereumPrimaryBlock_height
    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: ethereumPrimary_SubgraphErrorPolicy_! = deny
  ): [ethereumPrimaryEvent!]!
  """Access to subgraph metadata"""
  ethereumPrimary_meta(block: ethereumPrimaryBlock_height): ethereumPrimary_Meta_
}

type ethereumPrimaryToken {
  """ Smart contract address of the token """
  id: ethereumPrimaryBytes!
  """ Name of the token, mirrored from the smart contract """
  name: String!
  """ Symbol of the token, mirrored from the smart contract """
  symbol: String!
  """ The number of decimal places this token uses, default to 18 """
  decimals: Int!
  """ Optional field to track the price of a token, mostly for caching purposes 
  """
  lastPriceUSD: ethereumPrimaryBigDecimal
  """ Optional field to track the block number of the last token price """
  lastPriceBlockNumber: BigInt
  """ The type of token the protocol creates for positions """
  type: ethereumPrimaryTokenType
  """ the market ID for underlying/asset token, aToken, vToken and sToken"""
  _market: ethereumPrimaryMarket
  """ type of token: inputToken, aToken, vToken, or sToken """
  _iavsTokenType: String
}

enum ethereumPrimaryTokenType {
  """ Rebasing tokens continuously adjust balances / supply as interest is accrued (e.g. Aave debt balances adjust at each block with interest) 
  """
  REBASING
  """ Non-rebasing token balances / supply do not change as interest is accrued (e.g. Compound's cToken's do not adjust balance, the exchange rate changes with interest) 
  """
  NON_REBASING
}

input ethereumPrimaryToken_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  name: String
  name_not: String
  name_gt: String
  name_lt: String
  name_gte: String
  name_lte: String
  name_in: [String!]
  name_not_in: [String!]
  name_contains: String
  name_contains_nocase: String
  name_not_contains: String
  name_not_contains_nocase: String
  name_starts_with: String
  name_starts_with_nocase: String
  name_not_starts_with: String
  name_not_starts_with_nocase: String
  name_ends_with: String
  name_ends_with_nocase: String
  name_not_ends_with: String
  name_not_ends_with_nocase: String
  symbol: String
  symbol_not: String
  symbol_gt: String
  symbol_lt: String
  symbol_gte: String
  symbol_lte: String
  symbol_in: [String!]
  symbol_not_in: [String!]
  symbol_contains: String
  symbol_contains_nocase: String
  symbol_not_contains: String
  symbol_not_contains_nocase: String
  symbol_starts_with: String
  symbol_starts_with_nocase: String
  symbol_not_starts_with: String
  symbol_not_starts_with_nocase: String
  symbol_ends_with: String
  symbol_ends_with_nocase: String
  symbol_not_ends_with: String
  symbol_not_ends_with_nocase: String
  decimals: Int
  decimals_not: Int
  decimals_gt: Int
  decimals_lt: Int
  decimals_gte: Int
  decimals_lte: Int
  decimals_in: [Int!]
  decimals_not_in: [Int!]
  lastPriceUSD: ethereumPrimaryBigDecimal
  lastPriceUSD_not: ethereumPrimaryBigDecimal
  lastPriceUSD_gt: ethereumPrimaryBigDecimal
  lastPriceUSD_lt: ethereumPrimaryBigDecimal
  lastPriceUSD_gte: ethereumPrimaryBigDecimal
  lastPriceUSD_lte: ethereumPrimaryBigDecimal
  lastPriceUSD_in: [ethereumPrimaryBigDecimal!]
  lastPriceUSD_not_in: [ethereumPrimaryBigDecimal!]
  lastPriceBlockNumber: BigInt
  lastPriceBlockNumber_not: BigInt
  lastPriceBlockNumber_gt: BigInt
  lastPriceBlockNumber_lt: BigInt
  lastPriceBlockNumber_gte: BigInt
  lastPriceBlockNumber_lte: BigInt
  lastPriceBlockNumber_in: [BigInt!]
  lastPriceBlockNumber_not_in: [BigInt!]
  type: ethereumPrimaryTokenType
  type_not: ethereumPrimaryTokenType
  type_in: [ethereumPrimaryTokenType!]
  type_not_in: [ethereumPrimaryTokenType!]
  _market: String
  _market_not: String
  _market_gt: String
  _market_lt: String
  _market_gte: String
  _market_lte: String
  _market_in: [String!]
  _market_not_in: [String!]
  _market_contains: String
  _market_contains_nocase: String
  _market_not_contains: String
  _market_not_contains_nocase: String
  _market_starts_with: String
  _market_starts_with_nocase: String
  _market_not_starts_with: String
  _market_not_starts_with_nocase: String
  _market_ends_with: String
  _market_ends_with_nocase: String
  _market_not_ends_with: String
  _market_not_ends_with_nocase: String
  _market_: ethereumPrimaryMarket_filter
  _iavsTokenType: String
  _iavsTokenType_not: String
  _iavsTokenType_gt: String
  _iavsTokenType_lt: String
  _iavsTokenType_gte: String
  _iavsTokenType_lte: String
  _iavsTokenType_in: [String!]
  _iavsTokenType_not_in: [String!]
  _iavsTokenType_contains: String
  _iavsTokenType_contains_nocase: String
  _iavsTokenType_not_contains: String
  _iavsTokenType_not_contains_nocase: String
  _iavsTokenType_starts_with: String
  _iavsTokenType_starts_with_nocase: String
  _iavsTokenType_not_starts_with: String
  _iavsTokenType_not_starts_with_nocase: String
  _iavsTokenType_ends_with: String
  _iavsTokenType_ends_with_nocase: String
  _iavsTokenType_not_ends_with: String
  _iavsTokenType_not_ends_with_nocase: String
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryToken_filter]
  or: [ethereumPrimaryToken_filter]
}

enum ethereumPrimaryToken_orderBy {
  id
  name
  symbol
  decimals
  lastPriceUSD
  lastPriceBlockNumber
  type
  _market
  _market__id
  _market__name
  _market__isActive
  _market__canBorrowFrom
  _market__canUseAsCollateral
  _market__maximumLTV
  _market__liquidationThreshold
  _market__liquidationPenalty
  _market__canIsolate
  _market__createdTimestamp
  _market__createdBlockNumber
  _market__relation
  _market__stakedOutputTokenAmount
  _market__inputTokenBalance
  _market__inputTokenPriceUSD
  _market__outputTokenSupply
  _market__outputTokenPriceUSD
  _market__exchangeRate
  _market__reserves
  _market__reserveFactor
  _market__variableBorrowedTokenBalance
  _market__stableBorrowedTokenBalance
  _market__indexLastUpdatedTimestamp
  _market__supplyIndex
  _market__supplyCap
  _market__borrowIndex
  _market__borrowCap
  _market__totalValueLockedUSD
  _market__cumulativeSupplySideRevenueUSD
  _market__cumulativeProtocolSideRevenueUSD
  _market__cumulativeTotalRevenueUSD
  _market__totalDepositBalanceUSD
  _market__cumulativeDepositUSD
  _market__totalBorrowBalanceUSD
  _market__cumulativeBorrowUSD
  _market__cumulativeLiquidateUSD
  _market__cumulativeTransferUSD
  _market__cumulativeFlashloanUSD
  _market__transactionCount
  _market__depositCount
  _market__withdrawCount
  _market__borrowCount
  _market__repayCount
  _market__liquidationCount
  _market__transferCount
  _market__flashloanCount
  _market__cumulativeUniqueUsers
  _market__cumulativeUniqueDepositors
  _market__cumulativeUniqueBorrowers
  _market__cumulativeUniqueLiquidators
  _market__cumulativeUniqueLiquidatees
  _market__cumulativeUniqueTransferrers
  _market__cumulativeUniqueFlashloaners
  _market__positionCount
  _market__openPositionCount
  _market__closedPositionCount
  _market__lendingPositionCount
  _market__borrowingPositionCount
  _market___baseTrackingBorrowSpeed
  _market___baseTrackingSupplySpeed
  _market___lastRewardsUpdated
  _market___liquidationProtocolFee
  _market___siloedBorrowing
  _iavsTokenType
}

enum ethereumPrimaryTranche {
  """ Senior denotes debt with a higher priority. The first debt to be paid back to lenders. 
  """
  SENIOR
  """ Junior tranche denotes lower priority debt. This is secondary priority to be paid back to lenders. 
  """
  JUNIOR
}

type ethereumPrimaryTransfer implements ethereumPrimaryEvent {
  """ { Transaction hash }{ Log index } """
  id: ethereumPrimaryBytes!
  """ Transaction hash of the transaction that emitted this event """
  hash: ethereumPrimaryBytes!
  """ Nonce of the transaction that emitted this event """
  nonce: BigInt!
  """ Event log index. For transactions that don't emit event, create arbitrary index starting from 0 
  """
  logIndex: Int!
  """ Price of gas in this transaction """
  gasPrice: BigInt
  """ Gas used in this transaction. (Optional because not every chain will support this) 
  """
  gasUsed: BigInt
  """ Gas limit of this transaction. e.g. the amount of gas the sender will pay 
  """
  gasLimit: BigInt
  """ Block number of this event """
  blockNumber: BigInt!
  """ Timestamp of this event """
  timestamp: BigInt!
  """ The account that sent the tokens """
  sender: ethereumPrimaryAccount!
  """ The Account that received the tokens """
  receiver: ethereumPrimaryAccount!
  """ The user positions changed by this event """
  positions(skip: Int = 0, first: Int = 100, orderBy: ethereumPrimaryPosition_orderBy, orderDirection: ethereumPrimaryOrderDirection, where: ethereumPrimaryPosition_filter): [ethereumPrimaryPosition!]!
  """ The market associated with the token transfer """
  market: ethereumPrimaryMarket!
  """ The asset that was actually transferred. This could also include a debt token. 
  """
  asset: ethereumPrimaryToken!
  """ Amount of token transferred in native units """
  amount: BigInt!
  """ Amount of token transferred in USD """
  amountUSD: ethereumPrimaryBigDecimal!
}

input ethereumPrimaryTransfer_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  hash: ethereumPrimaryBytes
  hash_not: ethereumPrimaryBytes
  hash_gt: ethereumPrimaryBytes
  hash_lt: ethereumPrimaryBytes
  hash_gte: ethereumPrimaryBytes
  hash_lte: ethereumPrimaryBytes
  hash_in: [ethereumPrimaryBytes!]
  hash_not_in: [ethereumPrimaryBytes!]
  hash_contains: ethereumPrimaryBytes
  hash_not_contains: ethereumPrimaryBytes
  nonce: BigInt
  nonce_not: BigInt
  nonce_gt: BigInt
  nonce_lt: BigInt
  nonce_gte: BigInt
  nonce_lte: BigInt
  nonce_in: [BigInt!]
  nonce_not_in: [BigInt!]
  logIndex: Int
  logIndex_not: Int
  logIndex_gt: Int
  logIndex_lt: Int
  logIndex_gte: Int
  logIndex_lte: Int
  logIndex_in: [Int!]
  logIndex_not_in: [Int!]
  gasPrice: BigInt
  gasPrice_not: BigInt
  gasPrice_gt: BigInt
  gasPrice_lt: BigInt
  gasPrice_gte: BigInt
  gasPrice_lte: BigInt
  gasPrice_in: [BigInt!]
  gasPrice_not_in: [BigInt!]
  gasUsed: BigInt
  gasUsed_not: BigInt
  gasUsed_gt: BigInt
  gasUsed_lt: BigInt
  gasUsed_gte: BigInt
  gasUsed_lte: BigInt
  gasUsed_in: [BigInt!]
  gasUsed_not_in: [BigInt!]
  gasLimit: BigInt
  gasLimit_not: BigInt
  gasLimit_gt: BigInt
  gasLimit_lt: BigInt
  gasLimit_gte: BigInt
  gasLimit_lte: BigInt
  gasLimit_in: [BigInt!]
  gasLimit_not_in: [BigInt!]
  blockNumber: BigInt
  blockNumber_not: BigInt
  blockNumber_gt: BigInt
  blockNumber_lt: BigInt
  blockNumber_gte: BigInt
  blockNumber_lte: BigInt
  blockNumber_in: [BigInt!]
  blockNumber_not_in: [BigInt!]
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  sender: String
  sender_not: String
  sender_gt: String
  sender_lt: String
  sender_gte: String
  sender_lte: String
  sender_in: [String!]
  sender_not_in: [String!]
  sender_contains: String
  sender_contains_nocase: String
  sender_not_contains: String
  sender_not_contains_nocase: String
  sender_starts_with: String
  sender_starts_with_nocase: String
  sender_not_starts_with: String
  sender_not_starts_with_nocase: String
  sender_ends_with: String
  sender_ends_with_nocase: String
  sender_not_ends_with: String
  sender_not_ends_with_nocase: String
  sender_: ethereumPrimaryAccount_filter
  receiver: String
  receiver_not: String
  receiver_gt: String
  receiver_lt: String
  receiver_gte: String
  receiver_lte: String
  receiver_in: [String!]
  receiver_not_in: [String!]
  receiver_contains: String
  receiver_contains_nocase: String
  receiver_not_contains: String
  receiver_not_contains_nocase: String
  receiver_starts_with: String
  receiver_starts_with_nocase: String
  receiver_not_starts_with: String
  receiver_not_starts_with_nocase: String
  receiver_ends_with: String
  receiver_ends_with_nocase: String
  receiver_not_ends_with: String
  receiver_not_ends_with_nocase: String
  receiver_: ethereumPrimaryAccount_filter
  positions: [String!]
  positions_not: [String!]
  positions_contains: [String!]
  positions_contains_nocase: [String!]
  positions_not_contains: [String!]
  positions_not_contains_nocase: [String!]
  positions_: ethereumPrimaryPosition_filter
  market: String
  market_not: String
  market_gt: String
  market_lt: String
  market_gte: String
  market_lte: String
  market_in: [String!]
  market_not_in: [String!]
  market_contains: String
  market_contains_nocase: String
  market_not_contains: String
  market_not_contains_nocase: String
  market_starts_with: String
  market_starts_with_nocase: String
  market_not_starts_with: String
  market_not_starts_with_nocase: String
  market_ends_with: String
  market_ends_with_nocase: String
  market_not_ends_with: String
  market_not_ends_with_nocase: String
  market_: ethereumPrimaryMarket_filter
  asset: String
  asset_not: String
  asset_gt: String
  asset_lt: String
  asset_gte: String
  asset_lte: String
  asset_in: [String!]
  asset_not_in: [String!]
  asset_contains: String
  asset_contains_nocase: String
  asset_not_contains: String
  asset_not_contains_nocase: String
  asset_starts_with: String
  asset_starts_with_nocase: String
  asset_not_starts_with: String
  asset_not_starts_with_nocase: String
  asset_ends_with: String
  asset_ends_with_nocase: String
  asset_not_ends_with: String
  asset_not_ends_with_nocase: String
  asset_: ethereumPrimaryToken_filter
  amount: BigInt
  amount_not: BigInt
  amount_gt: BigInt
  amount_lt: BigInt
  amount_gte: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  amount_not_in: [BigInt!]
  amountUSD: ethereumPrimaryBigDecimal
  amountUSD_not: ethereumPrimaryBigDecimal
  amountUSD_gt: ethereumPrimaryBigDecimal
  amountUSD_lt: ethereumPrimaryBigDecimal
  amountUSD_gte: ethereumPrimaryBigDecimal
  amountUSD_lte: ethereumPrimaryBigDecimal
  amountUSD_in: [ethereumPrimaryBigDecimal!]
  amountUSD_not_in: [ethereumPrimaryBigDecimal!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryTransfer_filter]
  or: [ethereumPrimaryTransfer_filter]
}

enum ethereumPrimaryTransfer_orderBy {
  id
  hash
  nonce
  logIndex
  gasPrice
  gasUsed
  gasLimit
  blockNumber
  timestamp
  sender
  sender__id
  sender__positionCount
  sender__openPositionCount
  sender__closedPositionCount
  sender__depositCount
  sender__withdrawCount
  sender__borrowCount
  sender__repayCount
  sender__liquidateCount
  sender__liquidationCount
  sender__transferredCount
  sender__receivedCount
  sender__flashloanCount
  sender__rewardsClaimedUSD
  sender___eMode
  receiver
  receiver__id
  receiver__positionCount
  receiver__openPositionCount
  receiver__closedPositionCount
  receiver__depositCount
  receiver__withdrawCount
  receiver__borrowCount
  receiver__repayCount
  receiver__liquidateCount
  receiver__liquidationCount
  receiver__transferredCount
  receiver__receivedCount
  receiver__flashloanCount
  receiver__rewardsClaimedUSD
  receiver___eMode
  positions
  market
  market__id
  market__name
  market__isActive
  market__canBorrowFrom
  market__canUseAsCollateral
  market__maximumLTV
  market__liquidationThreshold
  market__liquidationPenalty
  market__canIsolate
  market__createdTimestamp
  market__createdBlockNumber
  market__relation
  market__stakedOutputTokenAmount
  market__inputTokenBalance
  market__inputTokenPriceUSD
  market__outputTokenSupply
  market__outputTokenPriceUSD
  market__exchangeRate
  market__reserves
  market__reserveFactor
  market__variableBorrowedTokenBalance
  market__stableBorrowedTokenBalance
  market__indexLastUpdatedTimestamp
  market__supplyIndex
  market__supplyCap
  market__borrowIndex
  market__borrowCap
  market__totalValueLockedUSD
  market__cumulativeSupplySideRevenueUSD
  market__cumulativeProtocolSideRevenueUSD
  market__cumulativeTotalRevenueUSD
  market__totalDepositBalanceUSD
  market__cumulativeDepositUSD
  market__totalBorrowBalanceUSD
  market__cumulativeBorrowUSD
  market__cumulativeLiquidateUSD
  market__cumulativeTransferUSD
  market__cumulativeFlashloanUSD
  market__transactionCount
  market__depositCount
  market__withdrawCount
  market__borrowCount
  market__repayCount
  market__liquidationCount
  market__transferCount
  market__flashloanCount
  market__cumulativeUniqueUsers
  market__cumulativeUniqueDepositors
  market__cumulativeUniqueBorrowers
  market__cumulativeUniqueLiquidators
  market__cumulativeUniqueLiquidatees
  market__cumulativeUniqueTransferrers
  market__cumulativeUniqueFlashloaners
  market__positionCount
  market__openPositionCount
  market__closedPositionCount
  market__lendingPositionCount
  market__borrowingPositionCount
  market___baseTrackingBorrowSpeed
  market___baseTrackingSupplySpeed
  market___lastRewardsUpdated
  market___liquidationProtocolFee
  market___siloedBorrowing
  asset
  asset__id
  asset__name
  asset__symbol
  asset__decimals
  asset__lastPriceUSD
  asset__lastPriceBlockNumber
  asset__type
  asset___iavsTokenType
  amount
  amountUSD
}

type ethereumPrimaryUsageMetricsDailySnapshot {
  """ ID is # of days since Unix epoch time """
  id: ethereumPrimaryBytes!
  """ Number of days since Unix epoch time """
  days: Int!
  """ Protocol this snapshot is associated with """
  protocol: ethereumPrimaryLendingProtocol!
  """ Number of unique daily active users. e.g. accounts that spent gas to interact with this protocol 
  """
  dailyActiveUsers: Int!
  """ Number of cumulative unique users. e.g. accounts that spent gas to interact with this protocol 
  """
  cumulativeUniqueUsers: Int!
  """ Number of unique daily depositors """
  dailyActiveDepositors: Int!
  """ Number of cumulative depositors """
  cumulativeUniqueDepositors: Int!
  """ Number of unique daily borrowers """
  dailyActiveBorrowers: Int!
  """ Number of cumulative borrowers """
  cumulativeUniqueBorrowers: Int!
  """ Number of unique daily liquidators (accounts that performed liquidation) 
  """
  dailyActiveLiquidators: Int!
  """ Number of cumulative liquidators (accounts that performed liquidation) 
  """
  cumulativeUniqueLiquidators: Int!
  """ Number of unique daily liquidatees (accounts that got liquidated) """
  dailyActiveLiquidatees: Int!
  """ Number of cumulative liquidatees (accounts that got liquidated) """
  cumulativeUniqueLiquidatees: Int!
  """ Total number of transactions occurred in a day. Transactions include all entities that implement the Event interface. 
  """
  dailyTransactionCount: Int!
  """ Total number of deposits in a day """
  dailyDepositCount: Int!
  """ Total number of withdrawals in a day """
  dailyWithdrawCount: Int!
  """ Total number of borrows/mints in a day """
  dailyBorrowCount: Int!
  """ Total number of repayments/burns in a day """
  dailyRepayCount: Int!
  """ Total number of liquidations in a day """
  dailyLiquidateCount: Int!
  """ Total number of transfers in a day """
  dailyTransferCount: Int!
  """ Total number of flashloans in a day """
  dailyFlashloanCount: Int!
  """ Total number of positions (open and closed) """
  cumulativePositionCount: Int!
  """ Total number of open positions """
  openPositionCount: Int!
  """ Total number of positions touched in a day. This includes opening, closing, and modifying positions. 
  """
  dailyActivePositions: Int!
  """ Total number of pools """
  totalPoolCount: Int!
  """ Block number of this snapshot """
  blockNumber: BigInt!
  """ Timestamp of this snapshot """
  timestamp: BigInt!
}

input ethereumPrimaryUsageMetricsDailySnapshot_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  days: Int
  days_not: Int
  days_gt: Int
  days_lt: Int
  days_gte: Int
  days_lte: Int
  days_in: [Int!]
  days_not_in: [Int!]
  protocol: String
  protocol_not: String
  protocol_gt: String
  protocol_lt: String
  protocol_gte: String
  protocol_lte: String
  protocol_in: [String!]
  protocol_not_in: [String!]
  protocol_contains: String
  protocol_contains_nocase: String
  protocol_not_contains: String
  protocol_not_contains_nocase: String
  protocol_starts_with: String
  protocol_starts_with_nocase: String
  protocol_not_starts_with: String
  protocol_not_starts_with_nocase: String
  protocol_ends_with: String
  protocol_ends_with_nocase: String
  protocol_not_ends_with: String
  protocol_not_ends_with_nocase: String
  protocol_: ethereumPrimaryLendingProtocol_filter
  dailyActiveUsers: Int
  dailyActiveUsers_not: Int
  dailyActiveUsers_gt: Int
  dailyActiveUsers_lt: Int
  dailyActiveUsers_gte: Int
  dailyActiveUsers_lte: Int
  dailyActiveUsers_in: [Int!]
  dailyActiveUsers_not_in: [Int!]
  cumulativeUniqueUsers: Int
  cumulativeUniqueUsers_not: Int
  cumulativeUniqueUsers_gt: Int
  cumulativeUniqueUsers_lt: Int
  cumulativeUniqueUsers_gte: Int
  cumulativeUniqueUsers_lte: Int
  cumulativeUniqueUsers_in: [Int!]
  cumulativeUniqueUsers_not_in: [Int!]
  dailyActiveDepositors: Int
  dailyActiveDepositors_not: Int
  dailyActiveDepositors_gt: Int
  dailyActiveDepositors_lt: Int
  dailyActiveDepositors_gte: Int
  dailyActiveDepositors_lte: Int
  dailyActiveDepositors_in: [Int!]
  dailyActiveDepositors_not_in: [Int!]
  cumulativeUniqueDepositors: Int
  cumulativeUniqueDepositors_not: Int
  cumulativeUniqueDepositors_gt: Int
  cumulativeUniqueDepositors_lt: Int
  cumulativeUniqueDepositors_gte: Int
  cumulativeUniqueDepositors_lte: Int
  cumulativeUniqueDepositors_in: [Int!]
  cumulativeUniqueDepositors_not_in: [Int!]
  dailyActiveBorrowers: Int
  dailyActiveBorrowers_not: Int
  dailyActiveBorrowers_gt: Int
  dailyActiveBorrowers_lt: Int
  dailyActiveBorrowers_gte: Int
  dailyActiveBorrowers_lte: Int
  dailyActiveBorrowers_in: [Int!]
  dailyActiveBorrowers_not_in: [Int!]
  cumulativeUniqueBorrowers: Int
  cumulativeUniqueBorrowers_not: Int
  cumulativeUniqueBorrowers_gt: Int
  cumulativeUniqueBorrowers_lt: Int
  cumulativeUniqueBorrowers_gte: Int
  cumulativeUniqueBorrowers_lte: Int
  cumulativeUniqueBorrowers_in: [Int!]
  cumulativeUniqueBorrowers_not_in: [Int!]
  dailyActiveLiquidators: Int
  dailyActiveLiquidators_not: Int
  dailyActiveLiquidators_gt: Int
  dailyActiveLiquidators_lt: Int
  dailyActiveLiquidators_gte: Int
  dailyActiveLiquidators_lte: Int
  dailyActiveLiquidators_in: [Int!]
  dailyActiveLiquidators_not_in: [Int!]
  cumulativeUniqueLiquidators: Int
  cumulativeUniqueLiquidators_not: Int
  cumulativeUniqueLiquidators_gt: Int
  cumulativeUniqueLiquidators_lt: Int
  cumulativeUniqueLiquidators_gte: Int
  cumulativeUniqueLiquidators_lte: Int
  cumulativeUniqueLiquidators_in: [Int!]
  cumulativeUniqueLiquidators_not_in: [Int!]
  dailyActiveLiquidatees: Int
  dailyActiveLiquidatees_not: Int
  dailyActiveLiquidatees_gt: Int
  dailyActiveLiquidatees_lt: Int
  dailyActiveLiquidatees_gte: Int
  dailyActiveLiquidatees_lte: Int
  dailyActiveLiquidatees_in: [Int!]
  dailyActiveLiquidatees_not_in: [Int!]
  cumulativeUniqueLiquidatees: Int
  cumulativeUniqueLiquidatees_not: Int
  cumulativeUniqueLiquidatees_gt: Int
  cumulativeUniqueLiquidatees_lt: Int
  cumulativeUniqueLiquidatees_gte: Int
  cumulativeUniqueLiquidatees_lte: Int
  cumulativeUniqueLiquidatees_in: [Int!]
  cumulativeUniqueLiquidatees_not_in: [Int!]
  dailyTransactionCount: Int
  dailyTransactionCount_not: Int
  dailyTransactionCount_gt: Int
  dailyTransactionCount_lt: Int
  dailyTransactionCount_gte: Int
  dailyTransactionCount_lte: Int
  dailyTransactionCount_in: [Int!]
  dailyTransactionCount_not_in: [Int!]
  dailyDepositCount: Int
  dailyDepositCount_not: Int
  dailyDepositCount_gt: Int
  dailyDepositCount_lt: Int
  dailyDepositCount_gte: Int
  dailyDepositCount_lte: Int
  dailyDepositCount_in: [Int!]
  dailyDepositCount_not_in: [Int!]
  dailyWithdrawCount: Int
  dailyWithdrawCount_not: Int
  dailyWithdrawCount_gt: Int
  dailyWithdrawCount_lt: Int
  dailyWithdrawCount_gte: Int
  dailyWithdrawCount_lte: Int
  dailyWithdrawCount_in: [Int!]
  dailyWithdrawCount_not_in: [Int!]
  dailyBorrowCount: Int
  dailyBorrowCount_not: Int
  dailyBorrowCount_gt: Int
  dailyBorrowCount_lt: Int
  dailyBorrowCount_gte: Int
  dailyBorrowCount_lte: Int
  dailyBorrowCount_in: [Int!]
  dailyBorrowCount_not_in: [Int!]
  dailyRepayCount: Int
  dailyRepayCount_not: Int
  dailyRepayCount_gt: Int
  dailyRepayCount_lt: Int
  dailyRepayCount_gte: Int
  dailyRepayCount_lte: Int
  dailyRepayCount_in: [Int!]
  dailyRepayCount_not_in: [Int!]
  dailyLiquidateCount: Int
  dailyLiquidateCount_not: Int
  dailyLiquidateCount_gt: Int
  dailyLiquidateCount_lt: Int
  dailyLiquidateCount_gte: Int
  dailyLiquidateCount_lte: Int
  dailyLiquidateCount_in: [Int!]
  dailyLiquidateCount_not_in: [Int!]
  dailyTransferCount: Int
  dailyTransferCount_not: Int
  dailyTransferCount_gt: Int
  dailyTransferCount_lt: Int
  dailyTransferCount_gte: Int
  dailyTransferCount_lte: Int
  dailyTransferCount_in: [Int!]
  dailyTransferCount_not_in: [Int!]
  dailyFlashloanCount: Int
  dailyFlashloanCount_not: Int
  dailyFlashloanCount_gt: Int
  dailyFlashloanCount_lt: Int
  dailyFlashloanCount_gte: Int
  dailyFlashloanCount_lte: Int
  dailyFlashloanCount_in: [Int!]
  dailyFlashloanCount_not_in: [Int!]
  cumulativePositionCount: Int
  cumulativePositionCount_not: Int
  cumulativePositionCount_gt: Int
  cumulativePositionCount_lt: Int
  cumulativePositionCount_gte: Int
  cumulativePositionCount_lte: Int
  cumulativePositionCount_in: [Int!]
  cumulativePositionCount_not_in: [Int!]
  openPositionCount: Int
  openPositionCount_not: Int
  openPositionCount_gt: Int
  openPositionCount_lt: Int
  openPositionCount_gte: Int
  openPositionCount_lte: Int
  openPositionCount_in: [Int!]
  openPositionCount_not_in: [Int!]
  dailyActivePositions: Int
  dailyActivePositions_not: Int
  dailyActivePositions_gt: Int
  dailyActivePositions_lt: Int
  dailyActivePositions_gte: Int
  dailyActivePositions_lte: Int
  dailyActivePositions_in: [Int!]
  dailyActivePositions_not_in: [Int!]
  totalPoolCount: Int
  totalPoolCount_not: Int
  totalPoolCount_gt: Int
  totalPoolCount_lt: Int
  totalPoolCount_gte: Int
  totalPoolCount_lte: Int
  totalPoolCount_in: [Int!]
  totalPoolCount_not_in: [Int!]
  blockNumber: BigInt
  blockNumber_not: BigInt
  blockNumber_gt: BigInt
  blockNumber_lt: BigInt
  blockNumber_gte: BigInt
  blockNumber_lte: BigInt
  blockNumber_in: [BigInt!]
  blockNumber_not_in: [BigInt!]
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryUsageMetricsDailySnapshot_filter]
  or: [ethereumPrimaryUsageMetricsDailySnapshot_filter]
}

enum ethereumPrimaryUsageMetricsDailySnapshot_orderBy {
  id
  days
  protocol
  protocol__id
  protocol__protocol
  protocol__name
  protocol__slug
  protocol__schemaVersion
  protocol__subgraphVersion
  protocol__methodologyVersion
  protocol__network
  protocol__type
  protocol__lendingType
  protocol__lenderPermissionType
  protocol__borrowerPermissionType
  protocol__poolCreatorPermissionType
  protocol__riskType
  protocol__collateralizationType
  protocol__cumulativeUniqueUsers
  protocol__cumulativeUniqueDepositors
  protocol__cumulativeUniqueBorrowers
  protocol__cumulativeUniqueLiquidators
  protocol__cumulativeUniqueLiquidatees
  protocol__totalValueLockedUSD
  protocol__protocolControlledValueUSD
  protocol__cumulativeSupplySideRevenueUSD
  protocol__cumulativeProtocolSideRevenueUSD
  protocol__cumulativeTotalRevenueUSD
  protocol__totalDepositBalanceUSD
  protocol__cumulativeDepositUSD
  protocol__totalBorrowBalanceUSD
  protocol__cumulativeBorrowUSD
  protocol__cumulativeLiquidateUSD
  protocol__totalPoolCount
  protocol__openPositionCount
  protocol__cumulativePositionCount
  protocol__transactionCount
  protocol__depositCount
  protocol__withdrawCount
  protocol__borrowCount
  protocol__repayCount
  protocol__liquidationCount
  protocol__transferCount
  protocol__flashloanCount
  dailyActiveUsers
  cumulativeUniqueUsers
  dailyActiveDepositors
  cumulativeUniqueDepositors
  dailyActiveBorrowers
  cumulativeUniqueBorrowers
  dailyActiveLiquidators
  cumulativeUniqueLiquidators
  dailyActiveLiquidatees
  cumulativeUniqueLiquidatees
  dailyTransactionCount
  dailyDepositCount
  dailyWithdrawCount
  dailyBorrowCount
  dailyRepayCount
  dailyLiquidateCount
  dailyTransferCount
  dailyFlashloanCount
  cumulativePositionCount
  openPositionCount
  dailyActivePositions
  totalPoolCount
  blockNumber
  timestamp
}

type ethereumPrimaryUsageMetricsHourlySnapshot {
  """ { # of hours since Unix epoch time } """
  id: ethereumPrimaryBytes!
  """ Number of hours since Unix epoch time """
  hours: Int!
  """ Protocol this snapshot is associated with """
  protocol: ethereumPrimaryLendingProtocol!
  """ Number of unique hourly active users """
  hourlyActiveUsers: Int!
  """ Number of cumulative unique users. e.g. accounts that spent gas to interact with this protocol 
  """
  cumulativeUniqueUsers: Int!
  """ Total number of transactions occurred in an hour. Transactions include all entities that implement the Event interface. 
  """
  hourlyTransactionCount: Int!
  """ Total number of deposits in an hour """
  hourlyDepositCount: Int!
  """ Total number of withdrawals in an hour """
  hourlyWithdrawCount: Int!
  """ Total number of borrows/mints in an hour """
  hourlyBorrowCount: Int!
  """ Total number of repayments/burns in an hour """
  hourlyRepayCount: Int!
  """ Total number of liquidations in an hour """
  hourlyLiquidateCount: Int!
  """ Block number of this snapshot """
  blockNumber: BigInt!
  """ Timestamp of this snapshot """
  timestamp: BigInt!
}

input ethereumPrimaryUsageMetricsHourlySnapshot_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  hours: Int
  hours_not: Int
  hours_gt: Int
  hours_lt: Int
  hours_gte: Int
  hours_lte: Int
  hours_in: [Int!]
  hours_not_in: [Int!]
  protocol: String
  protocol_not: String
  protocol_gt: String
  protocol_lt: String
  protocol_gte: String
  protocol_lte: String
  protocol_in: [String!]
  protocol_not_in: [String!]
  protocol_contains: String
  protocol_contains_nocase: String
  protocol_not_contains: String
  protocol_not_contains_nocase: String
  protocol_starts_with: String
  protocol_starts_with_nocase: String
  protocol_not_starts_with: String
  protocol_not_starts_with_nocase: String
  protocol_ends_with: String
  protocol_ends_with_nocase: String
  protocol_not_ends_with: String
  protocol_not_ends_with_nocase: String
  protocol_: ethereumPrimaryLendingProtocol_filter
  hourlyActiveUsers: Int
  hourlyActiveUsers_not: Int
  hourlyActiveUsers_gt: Int
  hourlyActiveUsers_lt: Int
  hourlyActiveUsers_gte: Int
  hourlyActiveUsers_lte: Int
  hourlyActiveUsers_in: [Int!]
  hourlyActiveUsers_not_in: [Int!]
  cumulativeUniqueUsers: Int
  cumulativeUniqueUsers_not: Int
  cumulativeUniqueUsers_gt: Int
  cumulativeUniqueUsers_lt: Int
  cumulativeUniqueUsers_gte: Int
  cumulativeUniqueUsers_lte: Int
  cumulativeUniqueUsers_in: [Int!]
  cumulativeUniqueUsers_not_in: [Int!]
  hourlyTransactionCount: Int
  hourlyTransactionCount_not: Int
  hourlyTransactionCount_gt: Int
  hourlyTransactionCount_lt: Int
  hourlyTransactionCount_gte: Int
  hourlyTransactionCount_lte: Int
  hourlyTransactionCount_in: [Int!]
  hourlyTransactionCount_not_in: [Int!]
  hourlyDepositCount: Int
  hourlyDepositCount_not: Int
  hourlyDepositCount_gt: Int
  hourlyDepositCount_lt: Int
  hourlyDepositCount_gte: Int
  hourlyDepositCount_lte: Int
  hourlyDepositCount_in: [Int!]
  hourlyDepositCount_not_in: [Int!]
  hourlyWithdrawCount: Int
  hourlyWithdrawCount_not: Int
  hourlyWithdrawCount_gt: Int
  hourlyWithdrawCount_lt: Int
  hourlyWithdrawCount_gte: Int
  hourlyWithdrawCount_lte: Int
  hourlyWithdrawCount_in: [Int!]
  hourlyWithdrawCount_not_in: [Int!]
  hourlyBorrowCount: Int
  hourlyBorrowCount_not: Int
  hourlyBorrowCount_gt: Int
  hourlyBorrowCount_lt: Int
  hourlyBorrowCount_gte: Int
  hourlyBorrowCount_lte: Int
  hourlyBorrowCount_in: [Int!]
  hourlyBorrowCount_not_in: [Int!]
  hourlyRepayCount: Int
  hourlyRepayCount_not: Int
  hourlyRepayCount_gt: Int
  hourlyRepayCount_lt: Int
  hourlyRepayCount_gte: Int
  hourlyRepayCount_lte: Int
  hourlyRepayCount_in: [Int!]
  hourlyRepayCount_not_in: [Int!]
  hourlyLiquidateCount: Int
  hourlyLiquidateCount_not: Int
  hourlyLiquidateCount_gt: Int
  hourlyLiquidateCount_lt: Int
  hourlyLiquidateCount_gte: Int
  hourlyLiquidateCount_lte: Int
  hourlyLiquidateCount_in: [Int!]
  hourlyLiquidateCount_not_in: [Int!]
  blockNumber: BigInt
  blockNumber_not: BigInt
  blockNumber_gt: BigInt
  blockNumber_lt: BigInt
  blockNumber_gte: BigInt
  blockNumber_lte: BigInt
  blockNumber_in: [BigInt!]
  blockNumber_not_in: [BigInt!]
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryUsageMetricsHourlySnapshot_filter]
  or: [ethereumPrimaryUsageMetricsHourlySnapshot_filter]
}

enum ethereumPrimaryUsageMetricsHourlySnapshot_orderBy {
  id
  hours
  protocol
  protocol__id
  protocol__protocol
  protocol__name
  protocol__slug
  protocol__schemaVersion
  protocol__subgraphVersion
  protocol__methodologyVersion
  protocol__network
  protocol__type
  protocol__lendingType
  protocol__lenderPermissionType
  protocol__borrowerPermissionType
  protocol__poolCreatorPermissionType
  protocol__riskType
  protocol__collateralizationType
  protocol__cumulativeUniqueUsers
  protocol__cumulativeUniqueDepositors
  protocol__cumulativeUniqueBorrowers
  protocol__cumulativeUniqueLiquidators
  protocol__cumulativeUniqueLiquidatees
  protocol__totalValueLockedUSD
  protocol__protocolControlledValueUSD
  protocol__cumulativeSupplySideRevenueUSD
  protocol__cumulativeProtocolSideRevenueUSD
  protocol__cumulativeTotalRevenueUSD
  protocol__totalDepositBalanceUSD
  protocol__cumulativeDepositUSD
  protocol__totalBorrowBalanceUSD
  protocol__cumulativeBorrowUSD
  protocol__cumulativeLiquidateUSD
  protocol__totalPoolCount
  protocol__openPositionCount
  protocol__cumulativePositionCount
  protocol__transactionCount
  protocol__depositCount
  protocol__withdrawCount
  protocol__borrowCount
  protocol__repayCount
  protocol__liquidationCount
  protocol__transferCount
  protocol__flashloanCount
  hourlyActiveUsers
  cumulativeUniqueUsers
  hourlyTransactionCount
  hourlyDepositCount
  hourlyWithdrawCount
  hourlyBorrowCount
  hourlyRepayCount
  hourlyLiquidateCount
  blockNumber
  timestamp
}

type ethereumPrimaryWithdraw implements ethereumPrimaryEvent {
  """ { Transaction hash }{ Log index } """
  id: ethereumPrimaryBytes!
  """ Transaction hash of the transaction that emitted this event """
  hash: ethereumPrimaryBytes!
  """ Nonce of the transaction that emitted this event """
  nonce: BigInt!
  """ Event log index. For transactions that don't emit event, create arbitrary index starting from 0 
  """
  logIndex: Int!
  """ Price of gas in this transaction """
  gasPrice: BigInt
  """ Gas used in this transaction. (Optional because not every chain will support this) 
  """
  gasUsed: BigInt
  """ Gas limit of this transaction. e.g. the amount of gas the sender will pay 
  """
  gasLimit: BigInt
  """ Block number of this event """
  blockNumber: BigInt!
  """ Timestamp of this event """
  timestamp: BigInt!
  """ Account that controls the position (e.g. the aToken owner initiating the withdraw in Aave) 
  """
  account: ethereumPrimaryAccount!
  """ Account that receives the underlying withdrawn amount """
  accountActor: ethereumPrimaryAccount
  """ The market tokens are withdrew from """
  market: ethereumPrimaryMarket!
  """ The user position changed by this event """
  position: ethereumPrimaryPosition!
  """ Token withdrawn """
  asset: ethereumPrimaryToken!
  """ Amount of token withdrawn in native units """
  amount: BigInt!
  """ Amount of token withdrawn in USD """
  amountUSD: ethereumPrimaryBigDecimal!
}

input ethereumPrimaryWithdraw_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  hash: ethereumPrimaryBytes
  hash_not: ethereumPrimaryBytes
  hash_gt: ethereumPrimaryBytes
  hash_lt: ethereumPrimaryBytes
  hash_gte: ethereumPrimaryBytes
  hash_lte: ethereumPrimaryBytes
  hash_in: [ethereumPrimaryBytes!]
  hash_not_in: [ethereumPrimaryBytes!]
  hash_contains: ethereumPrimaryBytes
  hash_not_contains: ethereumPrimaryBytes
  nonce: BigInt
  nonce_not: BigInt
  nonce_gt: BigInt
  nonce_lt: BigInt
  nonce_gte: BigInt
  nonce_lte: BigInt
  nonce_in: [BigInt!]
  nonce_not_in: [BigInt!]
  logIndex: Int
  logIndex_not: Int
  logIndex_gt: Int
  logIndex_lt: Int
  logIndex_gte: Int
  logIndex_lte: Int
  logIndex_in: [Int!]
  logIndex_not_in: [Int!]
  gasPrice: BigInt
  gasPrice_not: BigInt
  gasPrice_gt: BigInt
  gasPrice_lt: BigInt
  gasPrice_gte: BigInt
  gasPrice_lte: BigInt
  gasPrice_in: [BigInt!]
  gasPrice_not_in: [BigInt!]
  gasUsed: BigInt
  gasUsed_not: BigInt
  gasUsed_gt: BigInt
  gasUsed_lt: BigInt
  gasUsed_gte: BigInt
  gasUsed_lte: BigInt
  gasUsed_in: [BigInt!]
  gasUsed_not_in: [BigInt!]
  gasLimit: BigInt
  gasLimit_not: BigInt
  gasLimit_gt: BigInt
  gasLimit_lt: BigInt
  gasLimit_gte: BigInt
  gasLimit_lte: BigInt
  gasLimit_in: [BigInt!]
  gasLimit_not_in: [BigInt!]
  blockNumber: BigInt
  blockNumber_not: BigInt
  blockNumber_gt: BigInt
  blockNumber_lt: BigInt
  blockNumber_gte: BigInt
  blockNumber_lte: BigInt
  blockNumber_in: [BigInt!]
  blockNumber_not_in: [BigInt!]
  timestamp: BigInt
  timestamp_not: BigInt
  timestamp_gt: BigInt
  timestamp_lt: BigInt
  timestamp_gte: BigInt
  timestamp_lte: BigInt
  timestamp_in: [BigInt!]
  timestamp_not_in: [BigInt!]
  account: String
  account_not: String
  account_gt: String
  account_lt: String
  account_gte: String
  account_lte: String
  account_in: [String!]
  account_not_in: [String!]
  account_contains: String
  account_contains_nocase: String
  account_not_contains: String
  account_not_contains_nocase: String
  account_starts_with: String
  account_starts_with_nocase: String
  account_not_starts_with: String
  account_not_starts_with_nocase: String
  account_ends_with: String
  account_ends_with_nocase: String
  account_not_ends_with: String
  account_not_ends_with_nocase: String
  account_: ethereumPrimaryAccount_filter
  accountActor: String
  accountActor_not: String
  accountActor_gt: String
  accountActor_lt: String
  accountActor_gte: String
  accountActor_lte: String
  accountActor_in: [String!]
  accountActor_not_in: [String!]
  accountActor_contains: String
  accountActor_contains_nocase: String
  accountActor_not_contains: String
  accountActor_not_contains_nocase: String
  accountActor_starts_with: String
  accountActor_starts_with_nocase: String
  accountActor_not_starts_with: String
  accountActor_not_starts_with_nocase: String
  accountActor_ends_with: String
  accountActor_ends_with_nocase: String
  accountActor_not_ends_with: String
  accountActor_not_ends_with_nocase: String
  accountActor_: ethereumPrimaryAccount_filter
  market: String
  market_not: String
  market_gt: String
  market_lt: String
  market_gte: String
  market_lte: String
  market_in: [String!]
  market_not_in: [String!]
  market_contains: String
  market_contains_nocase: String
  market_not_contains: String
  market_not_contains_nocase: String
  market_starts_with: String
  market_starts_with_nocase: String
  market_not_starts_with: String
  market_not_starts_with_nocase: String
  market_ends_with: String
  market_ends_with_nocase: String
  market_not_ends_with: String
  market_not_ends_with_nocase: String
  market_: ethereumPrimaryMarket_filter
  position: String
  position_not: String
  position_gt: String
  position_lt: String
  position_gte: String
  position_lte: String
  position_in: [String!]
  position_not_in: [String!]
  position_contains: String
  position_contains_nocase: String
  position_not_contains: String
  position_not_contains_nocase: String
  position_starts_with: String
  position_starts_with_nocase: String
  position_not_starts_with: String
  position_not_starts_with_nocase: String
  position_ends_with: String
  position_ends_with_nocase: String
  position_not_ends_with: String
  position_not_ends_with_nocase: String
  position_: ethereumPrimaryPosition_filter
  asset: String
  asset_not: String
  asset_gt: String
  asset_lt: String
  asset_gte: String
  asset_lte: String
  asset_in: [String!]
  asset_not_in: [String!]
  asset_contains: String
  asset_contains_nocase: String
  asset_not_contains: String
  asset_not_contains_nocase: String
  asset_starts_with: String
  asset_starts_with_nocase: String
  asset_not_starts_with: String
  asset_not_starts_with_nocase: String
  asset_ends_with: String
  asset_ends_with_nocase: String
  asset_not_ends_with: String
  asset_not_ends_with_nocase: String
  asset_: ethereumPrimaryToken_filter
  amount: BigInt
  amount_not: BigInt
  amount_gt: BigInt
  amount_lt: BigInt
  amount_gte: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  amount_not_in: [BigInt!]
  amountUSD: ethereumPrimaryBigDecimal
  amountUSD_not: ethereumPrimaryBigDecimal
  amountUSD_gt: ethereumPrimaryBigDecimal
  amountUSD_lt: ethereumPrimaryBigDecimal
  amountUSD_gte: ethereumPrimaryBigDecimal
  amountUSD_lte: ethereumPrimaryBigDecimal
  amountUSD_in: [ethereumPrimaryBigDecimal!]
  amountUSD_not_in: [ethereumPrimaryBigDecimal!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimaryWithdraw_filter]
  or: [ethereumPrimaryWithdraw_filter]
}

enum ethereumPrimaryWithdraw_orderBy {
  id
  hash
  nonce
  logIndex
  gasPrice
  gasUsed
  gasLimit
  blockNumber
  timestamp
  account
  account__id
  account__positionCount
  account__openPositionCount
  account__closedPositionCount
  account__depositCount
  account__withdrawCount
  account__borrowCount
  account__repayCount
  account__liquidateCount
  account__liquidationCount
  account__transferredCount
  account__receivedCount
  account__flashloanCount
  account__rewardsClaimedUSD
  account___eMode
  accountActor
  accountActor__id
  accountActor__positionCount
  accountActor__openPositionCount
  accountActor__closedPositionCount
  accountActor__depositCount
  accountActor__withdrawCount
  accountActor__borrowCount
  accountActor__repayCount
  accountActor__liquidateCount
  accountActor__liquidationCount
  accountActor__transferredCount
  accountActor__receivedCount
  accountActor__flashloanCount
  accountActor__rewardsClaimedUSD
  accountActor___eMode
  market
  market__id
  market__name
  market__isActive
  market__canBorrowFrom
  market__canUseAsCollateral
  market__maximumLTV
  market__liquidationThreshold
  market__liquidationPenalty
  market__canIsolate
  market__createdTimestamp
  market__createdBlockNumber
  market__relation
  market__stakedOutputTokenAmount
  market__inputTokenBalance
  market__inputTokenPriceUSD
  market__outputTokenSupply
  market__outputTokenPriceUSD
  market__exchangeRate
  market__reserves
  market__reserveFactor
  market__variableBorrowedTokenBalance
  market__stableBorrowedTokenBalance
  market__indexLastUpdatedTimestamp
  market__supplyIndex
  market__supplyCap
  market__borrowIndex
  market__borrowCap
  market__totalValueLockedUSD
  market__cumulativeSupplySideRevenueUSD
  market__cumulativeProtocolSideRevenueUSD
  market__cumulativeTotalRevenueUSD
  market__totalDepositBalanceUSD
  market__cumulativeDepositUSD
  market__totalBorrowBalanceUSD
  market__cumulativeBorrowUSD
  market__cumulativeLiquidateUSD
  market__cumulativeTransferUSD
  market__cumulativeFlashloanUSD
  market__transactionCount
  market__depositCount
  market__withdrawCount
  market__borrowCount
  market__repayCount
  market__liquidationCount
  market__transferCount
  market__flashloanCount
  market__cumulativeUniqueUsers
  market__cumulativeUniqueDepositors
  market__cumulativeUniqueBorrowers
  market__cumulativeUniqueLiquidators
  market__cumulativeUniqueLiquidatees
  market__cumulativeUniqueTransferrers
  market__cumulativeUniqueFlashloaners
  market__positionCount
  market__openPositionCount
  market__closedPositionCount
  market__lendingPositionCount
  market__borrowingPositionCount
  market___baseTrackingBorrowSpeed
  market___baseTrackingSupplySpeed
  market___lastRewardsUpdated
  market___liquidationProtocolFee
  market___siloedBorrowing
  position
  position__id
  position__hashOpened
  position__hashClosed
  position__blockNumberOpened
  position__timestampOpened
  position__blockNumberClosed
  position__timestampClosed
  position__side
  position__type
  position__isCollateral
  position__isIsolated
  position__balance
  position__principal
  position__depositCount
  position__withdrawCount
  position__borrowCount
  position__repayCount
  position__liquidationCount
  position__transferredCount
  position__receivedCount
  position___eMode
  asset
  asset__id
  asset__name
  asset__symbol
  asset__decimals
  asset__lastPriceUSD
  asset__lastPriceBlockNumber
  asset__type
  asset___iavsTokenType
  amount
  amountUSD
}

type ethereumPrimary_ActiveAccount {
  """ { daily/hourly }-{ Address of the account }-{ Optional: Transaction Type }-{ Optional: Market Address }-{ Optional: Days/hours since Unix epoch } 
  """
  id: ID!
}

input ethereumPrimary_ActiveAccount_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimary_ActiveAccount_filter]
  or: [ethereumPrimary_ActiveAccount_filter]
}

enum ethereumPrimary_ActiveAccount_orderBy {
  id
}

type ethereumPrimary_Block_ {
  """The hash of the block"""
  hash: ethereumPrimaryBytes
  """The block number"""
  number: Int!
  """Integer representation of the timestamp stored in blocks for the chain"""
  timestamp: Int
}

type ethereumPrimary_DefaultOracle {
  """ protocol id """
  id: ethereumPrimaryBytes!
  """ address of default oracle """
  oracle: ethereumPrimaryBytes!
}

input ethereumPrimary_DefaultOracle_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  oracle: ethereumPrimaryBytes
  oracle_not: ethereumPrimaryBytes
  oracle_gt: ethereumPrimaryBytes
  oracle_lt: ethereumPrimaryBytes
  oracle_gte: ethereumPrimaryBytes
  oracle_lte: ethereumPrimaryBytes
  oracle_in: [ethereumPrimaryBytes!]
  oracle_not_in: [ethereumPrimaryBytes!]
  oracle_contains: ethereumPrimaryBytes
  oracle_not_contains: ethereumPrimaryBytes
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimary_DefaultOracle_filter]
  or: [ethereumPrimary_DefaultOracle_filter]
}

enum ethereumPrimary_DefaultOracle_orderBy {
  id
  oracle
}

type ethereumPrimary_FlashLoanPremium {
  """ protocol id """
  id: ethereumPrimaryBytes!
  """ total premium rate """
  premiumRateTotal: ethereumPrimaryBigDecimal!
  """ premium rate to protocol """
  premiumRateToProtocol: ethereumPrimaryBigDecimal!
}

input ethereumPrimary_FlashLoanPremium_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  premiumRateTotal: ethereumPrimaryBigDecimal
  premiumRateTotal_not: ethereumPrimaryBigDecimal
  premiumRateTotal_gt: ethereumPrimaryBigDecimal
  premiumRateTotal_lt: ethereumPrimaryBigDecimal
  premiumRateTotal_gte: ethereumPrimaryBigDecimal
  premiumRateTotal_lte: ethereumPrimaryBigDecimal
  premiumRateTotal_in: [ethereumPrimaryBigDecimal!]
  premiumRateTotal_not_in: [ethereumPrimaryBigDecimal!]
  premiumRateToProtocol: ethereumPrimaryBigDecimal
  premiumRateToProtocol_not: ethereumPrimaryBigDecimal
  premiumRateToProtocol_gt: ethereumPrimaryBigDecimal
  premiumRateToProtocol_lt: ethereumPrimaryBigDecimal
  premiumRateToProtocol_gte: ethereumPrimaryBigDecimal
  premiumRateToProtocol_lte: ethereumPrimaryBigDecimal
  premiumRateToProtocol_in: [ethereumPrimaryBigDecimal!]
  premiumRateToProtocol_not_in: [ethereumPrimaryBigDecimal!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimary_FlashLoanPremium_filter]
  or: [ethereumPrimary_FlashLoanPremium_filter]
}

enum ethereumPrimary_FlashLoanPremium_orderBy {
  id
  premiumRateTotal
  premiumRateToProtocol
}

type ethereumPrimary_MarketList {
  """ Same ID as LendingProtocol """
  id: ethereumPrimaryBytes!
  """ IDs of all markets in the LendingProtocol """
  markets: [ethereumPrimaryBytes!]!
}

input ethereumPrimary_MarketList_filter {
  id: ethereumPrimaryBytes
  id_not: ethereumPrimaryBytes
  id_gt: ethereumPrimaryBytes
  id_lt: ethereumPrimaryBytes
  id_gte: ethereumPrimaryBytes
  id_lte: ethereumPrimaryBytes
  id_in: [ethereumPrimaryBytes!]
  id_not_in: [ethereumPrimaryBytes!]
  id_contains: ethereumPrimaryBytes
  id_not_contains: ethereumPrimaryBytes
  markets: [ethereumPrimaryBytes!]
  markets_not: [ethereumPrimaryBytes!]
  markets_contains: [ethereumPrimaryBytes!]
  markets_contains_nocase: [ethereumPrimaryBytes!]
  markets_not_contains: [ethereumPrimaryBytes!]
  markets_not_contains_nocase: [ethereumPrimaryBytes!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimary_MarketList_filter]
  or: [ethereumPrimary_MarketList_filter]
}

enum ethereumPrimary_MarketList_orderBy {
  id
  markets
}

"""The type for the top-level _meta field"""
type ethereumPrimary_Meta_ {
  """
  Information about a specific subgraph block. The hash of the block
  will be null if the _meta field has a block constraint that asks for
  a block number. It will be filled if the _meta field has no block constraint
  and therefore asks for the latest  block
  
  """
  block: ethereumPrimary_Block_!
  """The deployment ID"""
  deployment: String!
  """If `true`, the subgraph encountered indexing errors at some past block"""
  hasIndexingErrors: Boolean!
}

type ethereumPrimary_PositionCounter {
  """ { Account address }-{ Market address }-{ Position Side } """
  id: ID!
  """ Next count """
  nextCount: Int!
  """ The last timestamp this position was updated """
  lastTimestamp: BigInt!
}

input ethereumPrimary_PositionCounter_filter {
  id: ID
  id_not: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_not_in: [ID!]
  nextCount: Int
  nextCount_not: Int
  nextCount_gt: Int
  nextCount_lt: Int
  nextCount_gte: Int
  nextCount_lte: Int
  nextCount_in: [Int!]
  nextCount_not_in: [Int!]
  lastTimestamp: BigInt
  lastTimestamp_not: BigInt
  lastTimestamp_gt: BigInt
  lastTimestamp_lt: BigInt
  lastTimestamp_gte: BigInt
  lastTimestamp_lte: BigInt
  lastTimestamp_in: [BigInt!]
  lastTimestamp_not_in: [BigInt!]
  """Filter for the block changed event."""
  _change_block: ethereumPrimaryBlockChangedFilter
  and: [ethereumPrimary_PositionCounter_filter]
  or: [ethereumPrimary_PositionCounter_filter]
}

enum ethereumPrimary_PositionCounter_orderBy {
  id
  nextCount
  lastTimestamp
}

enum ethereumPrimary_SubgraphErrorPolicy_ {
  """Data will be returned even if the subgraph has indexing errors"""
  allow
  """
  If the subgraph has indexing errors, data will be omitted. The default.
  """
  deny
}